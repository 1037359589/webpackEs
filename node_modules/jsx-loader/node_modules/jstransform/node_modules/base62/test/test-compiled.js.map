{"version":3,"sources":["test.js"],"names":[],"mappings":"AAAA,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,MAAM,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;;AAElC,QAAQ,CAAC,QAAQ,EAAE,YAAW;AAC1B,MAAE,CAAC,2CAA2C,EAAE,YAAW;AACvD,cAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC;AACvC,cAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC;;AAAC,AAEtC,cAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,UAAU,CAAC,CAAC;AACxD,cAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,cAAc,CAAC,EAAE,UAAU,CAAC,CAAC;KAE3D,CAAC,CAAC;CACN,CAAC,CAAC;;AAEH,QAAQ,CAAC,QAAQ,EAAE,YAAW;AAC1B,MAAE,CAAC,6CAA6C,EAAE,YAAW;AACzD,cAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC;AACvC,cAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,EAAE,CAAC;;AAAC,AAEtC,cAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,cAAc,CAAC,CAAC;AACxD,cAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,EAAE,cAAc,CAAC,CAAC;KAC3D,CAAC,CAAC;CACN,CAAC,CAAC;;AAEH,QAAQ,CAAC,sBAAsB,EAAE,YAAU;AACvC,MAAE,CAAC,sCAAsC,EAAE,YAAU;AACjD,cAAM,CAAC,eAAe,CAAC,gEAAgE,CAAC;;;AAAC,AAGzF,cAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,IAAI,CAAC;;;AAAC,AAG1C,YAAI,SAAS,GAAG;AACZ,gBAAI,EAAE,GAAG;AACT,kBAAM,EAAE,OAAO;AACf,gBAAI,EAAE,IAAI;AACV,gBAAI,EAAE,GAAG;AACT,gBAAI,EAAE,EAAE;AACR,gBAAI,EAAE,GAAG;AACT,gBAAI,EAAE,GAAG;AACT,gBAAI,EAAE,GAAG;AACT,gBAAI,EAAE,EAAE;AACR,gBAAI,EAAE,EAAE;SACX,CAAC;;AAEF,cAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,CAAC,UAAS,YAAY,EAAC;AACjD,kBAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,EAAE,YAAY,CAAC,CAAC;AACnE,kBAAM,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC;SACtE,CAAC,CAAC;KAEN,CAAC,CAAC;;AAEH,MAAE,CAAC,4CAA4C,EAAE,YAAU;AACvD,YAAI,UAAU,GAAG,UAAS,GAAG,EAAE;AAC3B,gBAAK,AAAC,GAAG,YAAY,KAAK,IAAK,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,EAAG;AAC/C,uBAAO,IAAI,CAAC;aACf;SACJ,CAAC;;AAEF,cAAM,CAAC,MAAM,CAAC,YAAU;AACpB,kBAAM,CAAC,eAAe,CAAC,+DAA+D,CAAC,CAAC;SAC3F,EAAE,+BAA+B,CAAC,CAAC;;AAEpC,cAAM,CAAC,MAAM,CAAC,YAAU;AACpB,kBAAM,CAAC,eAAe,CAAC,iEAAiE,CAAC,CAAC;SAC7F,EAAE,+BAA+B,CAAC,CAAC;;AAGpC,cAAM,CAAC,MAAM,CAAC,YAAU;AACpB,kBAAM,CAAC,eAAe,CAAC,gEAAgE,CAAC,CAAC;SAC5F,EAAE,gCAAgC,CAAC,CAAC;KAExC,CAAC,CAAC;CACN,CAAC,CAAC","file":"test-compiled.js","sourcesContent":["var assert = require('assert');\nvar Base62 = require('../base62');\n\ndescribe(\"encode\", function() {\n    it(\"should encode a number to a Base62 string\", function() {\n        assert.equal(Base62.encode(999), 'g7');\n        assert.equal(Base62.encode(65), '13');\n        //test big numbers\n        assert.equal(Base62.encode(10000000000001), \"2Q3rKTOF\");\n        assert.equal(Base62.encode(10000000000002), \"2Q3rKTOG\");\n\n    });\n});\n\ndescribe(\"decode\", function() {\n    it(\"should decode a number from a Base62 string\", function() {\n        assert.equal(Base62.decode('g7'), 999);\n        assert.equal(Base62.decode('13'), 65);\n        //test big numbers\n        assert.equal(Base62.decode(\"2Q3rKTOF\"), 10000000000001);\n        assert.equal(Base62.decode(\"2Q3rKTOH\"), 10000000000003);\n    });\n});\n\ndescribe(\"setCharacterSequence\", function(){\n    it(\"should update the character sequence\", function(){\n        Base62.setCharacterSet(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz\");\n\n        //Test default character set is not intact\n        assert.notEqual(Base62.encode(999), 'g7');\n\n        //Test new character set test cases\n        var testCases = {\n            \"G7\": 999,\n            \"Lxf7\": 5234233,\n            \"qx\": 3283,\n            \"29\": 133,\n            \"1S\": 90,\n            \"3k\": 232,\n            \"4I\": 266,\n            \"2X\": 157,\n            \"1E\": 76,\n            \"1L\": 83\n        };\n\n        Object.keys(testCases).forEach(function(base62String){\n            assert.equal(Base62.encode(testCases[base62String]), base62String);\n            assert.equal(Base62.decode(base62String), testCases[base62String]);\n        });\n\n    });\n\n    it(\"should throw exceptions on invalid strings\", function(){\n        var errorCheck = function(err) {\n            if ( (err instanceof Error) && /value/.test(err) ) {\n                return true;\n            }\n        };\n\n        assert.throws(function(){\n            Base62.setCharacterSet(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxy\");\n        }, /You must supply 62 characters/);\n\n        assert.throws(function(){\n            Base62.setCharacterSet(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz;\");\n        }, /You must supply 62 characters/);\n\n\n        assert.throws(function(){\n            Base62.setCharacterSet(\"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxzz\");\n        }, /You must use unique characters/);\n\n    });\n});"]}