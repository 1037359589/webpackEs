{"version":3,"sources":["path.js"],"names":[],"mappings":"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","file":"path-compiled.js","sourcesContent":["var Op = Object.prototype;\nvar hasOwn = Op.hasOwnProperty;\nvar types = require(\"./types\");\nvar isArray = types.builtInTypes.array;\nvar isNumber = types.builtInTypes.number;\nvar Ap = Array.prototype;\nvar slice = Ap.slice;\nvar map = Ap.map;\n\nfunction Path(value, parentPath, name) {\n    if (!(this instanceof Path)) {\n        throw new Error(\"Path constructor cannot be invoked without 'new'\");\n    }\n\n    if (parentPath) {\n        if (!(parentPath instanceof Path)) {\n            throw new Error(\"\");\n        }\n    } else {\n        parentPath = null;\n        name = null;\n    }\n\n    // The value encapsulated by this Path, generally equal to\n    // parentPath.value[name] if we have a parentPath.\n    this.value = value;\n\n    // The immediate parent Path of this Path.\n    this.parentPath = parentPath;\n\n    // The name of the property of parentPath.value through which this\n    // Path's value was reached.\n    this.name = name;\n\n    // Calling path.get(\"child\") multiple times always returns the same\n    // child Path object, for both performance and consistency reasons.\n    this.__childCache = null;\n}\n\nvar Pp = Path.prototype;\n\nfunction getChildCache(path) {\n    // Lazily create the child cache. This also cheapens cache\n    // invalidation, since you can just reset path.__childCache to null.\n    return path.__childCache || (path.__childCache = Object.create(null));\n}\n\nfunction getChildPath(path, name) {\n    var cache = getChildCache(path);\n    var actualChildValue = path.getValueProperty(name);\n    var childPath = cache[name];\n    if (!hasOwn.call(cache, name) ||\n        // Ensure consistency between cache and reality.\n        childPath.value !== actualChildValue) {\n        childPath = cache[name] = new path.constructor(\n            actualChildValue, path, name\n        );\n    }\n    return childPath;\n}\n\n// This method is designed to be overridden by subclasses that need to\n// handle missing properties, etc.\nPp.getValueProperty = function getValueProperty(name) {\n    return this.value[name];\n};\n\nPp.get = function get(name) {\n    var path = this;\n    var names = arguments;\n    var count = names.length;\n\n    for (var i = 0; i < count; ++i) {\n        path = getChildPath(path, names[i]);\n    }\n\n    return path;\n};\n\nPp.each = function each(callback, context) {\n    var childPaths = [];\n    var len = this.value.length;\n    var i = 0;\n\n    // Collect all the original child paths before invoking the callback.\n    for (var i = 0; i < len; ++i) {\n        if (hasOwn.call(this.value, i)) {\n            childPaths[i] = this.get(i);\n        }\n    }\n\n    // Invoke the callback on just the original child paths, regardless of\n    // any modifications made to the array by the callback. I chose these\n    // semantics over cleverly invoking the callback on new elements because\n    // this way is much easier to reason about.\n    context = context || this;\n    for (i = 0; i < len; ++i) {\n        if (hasOwn.call(childPaths, i)) {\n            callback.call(context, childPaths[i]);\n        }\n    }\n};\n\nPp.map = function map(callback, context) {\n    var result = [];\n\n    this.each(function(childPath) {\n        result.push(callback.call(this, childPath));\n    }, context);\n\n    return result;\n};\n\nPp.filter = function filter(callback, context) {\n    var result = [];\n\n    this.each(function(childPath) {\n        if (callback.call(this, childPath)) {\n            result.push(childPath);\n        }\n    }, context);\n\n    return result;\n};\n\nfunction emptyMoves() {}\nfunction getMoves(path, offset, start, end) {\n    isArray.assert(path.value);\n\n    if (offset === 0) {\n        return emptyMoves;\n    }\n\n    var length = path.value.length;\n    if (length < 1) {\n        return emptyMoves;\n    }\n\n    var argc = arguments.length;\n    if (argc === 2) {\n        start = 0;\n        end = length;\n    } else if (argc === 3) {\n        start = Math.max(start, 0);\n        end = length;\n    } else {\n        start = Math.max(start, 0);\n        end = Math.min(end, length);\n    }\n\n    isNumber.assert(start);\n    isNumber.assert(end);\n\n    var moves = Object.create(null);\n    var cache = getChildCache(path);\n\n    for (var i = start; i < end; ++i) {\n        if (hasOwn.call(path.value, i)) {\n            var childPath = path.get(i);\n            if (childPath.name !== i) {\n                throw new Error(\"\");\n            }\n            var newIndex = i + offset;\n            childPath.name = newIndex;\n            moves[newIndex] = childPath;\n            delete cache[i];\n        }\n    }\n\n    delete cache.length;\n\n    return function() {\n        for (var newIndex in moves) {\n            var childPath = moves[newIndex];\n            if (childPath.name !== +newIndex) {\n                throw new Error(\"\");\n            }\n            cache[newIndex] = childPath;\n            path.value[newIndex] = childPath.value;\n        }\n    };\n}\n\nPp.shift = function shift() {\n    var move = getMoves(this, -1);\n    var result = this.value.shift();\n    move();\n    return result;\n};\n\nPp.unshift = function unshift(node) {\n    var move = getMoves(this, arguments.length);\n    var result = this.value.unshift.apply(this.value, arguments);\n    move();\n    return result;\n};\n\nPp.push = function push(node) {\n    isArray.assert(this.value);\n    delete getChildCache(this).length\n    return this.value.push.apply(this.value, arguments);\n};\n\nPp.pop = function pop() {\n    isArray.assert(this.value);\n    var cache = getChildCache(this);\n    delete cache[this.value.length - 1];\n    delete cache.length;\n    return this.value.pop();\n};\n\nPp.insertAt = function insertAt(index, node) {\n    var argc = arguments.length;\n    var move = getMoves(this, argc - 1, index);\n    if (move === emptyMoves) {\n        return this;\n    }\n\n    index = Math.max(index, 0);\n\n    for (var i = 1; i < argc; ++i) {\n        this.value[index + i - 1] = arguments[i];\n    }\n\n    move();\n\n    return this;\n};\n\nPp.insertBefore = function insertBefore(node) {\n    var pp = this.parentPath;\n    var argc = arguments.length;\n    var insertAtArgs = [this.name];\n    for (var i = 0; i < argc; ++i) {\n        insertAtArgs.push(arguments[i]);\n    }\n    return pp.insertAt.apply(pp, insertAtArgs);\n};\n\nPp.insertAfter = function insertAfter(node) {\n    var pp = this.parentPath;\n    var argc = arguments.length;\n    var insertAtArgs = [this.name + 1];\n    for (var i = 0; i < argc; ++i) {\n        insertAtArgs.push(arguments[i]);\n    }\n    return pp.insertAt.apply(pp, insertAtArgs);\n};\n\nfunction repairRelationshipWithParent(path) {\n    if (!(path instanceof Path)) {\n        throw new Error(\"\");\n    }\n\n    var pp = path.parentPath;\n    if (!pp) {\n        // Orphan paths have no relationship to repair.\n        return path;\n    }\n\n    var parentValue = pp.value;\n    var parentCache = getChildCache(pp);\n\n    // Make sure parentCache[path.name] is populated.\n    if (parentValue[path.name] === path.value) {\n        parentCache[path.name] = path;\n    } else if (isArray.check(parentValue)) {\n        // Something caused path.name to become out of date, so attempt to\n        // recover by searching for path.value in parentValue.\n        var i = parentValue.indexOf(path.value);\n        if (i >= 0) {\n            parentCache[path.name = i] = path;\n        }\n    } else {\n        // If path.value disagrees with parentValue[path.name], and\n        // path.name is not an array index, let path.value become the new\n        // parentValue[path.name] and update parentCache accordingly.\n        parentValue[path.name] = path.value;\n        parentCache[path.name] = path;\n    }\n\n    if (parentValue[path.name] !== path.value) {\n        throw new Error(\"\");\n    }\n    if (path.parentPath.get(path.name) !== path) {\n        throw new Error(\"\");\n    }\n\n    return path;\n}\n\nPp.replace = function replace(replacement) {\n    var results = [];\n    var parentValue = this.parentPath.value;\n    var parentCache = getChildCache(this.parentPath);\n    var count = arguments.length;\n\n    repairRelationshipWithParent(this);\n\n    if (isArray.check(parentValue)) {\n        var originalLength = parentValue.length;\n        var move = getMoves(this.parentPath, count - 1, this.name + 1);\n\n        var spliceArgs = [this.name, 1];\n        for (var i = 0; i < count; ++i) {\n            spliceArgs.push(arguments[i]);\n        }\n\n        var splicedOut = parentValue.splice.apply(parentValue, spliceArgs);\n\n        if (splicedOut[0] !== this.value) {\n            throw new Error(\"\");\n        }\n        if (parentValue.length !== (originalLength - 1 + count)) {\n            throw new Error(\"\");\n        }\n\n        move();\n\n        if (count === 0) {\n            delete this.value;\n            delete parentCache[this.name];\n            this.__childCache = null;\n\n        } else {\n            if (parentValue[this.name] !== replacement) {\n                throw new Error(\"\");\n            }\n\n            if (this.value !== replacement) {\n                this.value = replacement;\n                this.__childCache = null;\n            }\n\n            for (i = 0; i < count; ++i) {\n                results.push(this.parentPath.get(this.name + i));\n            }\n\n            if (results[0] !== this) {\n                throw new Error(\"\");\n            }\n        }\n\n    } else if (count === 1) {\n        if (this.value !== replacement) {\n            this.__childCache = null;\n        }\n        this.value = parentValue[this.name] = replacement;\n        results.push(this);\n\n    } else if (count === 0) {\n        delete parentValue[this.name];\n        delete this.value;\n        this.__childCache = null;\n\n        // Leave this path cached as parentCache[this.name], even though\n        // it no longer has a value defined.\n\n    } else {\n        throw new Error(\"Could not replace path\");\n    }\n\n    return results;\n};\n\nmodule.exports = Path;\n"]}