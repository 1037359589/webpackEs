{"version":3,"sources":["path-visitor.js"],"names":[],"mappings":"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","file":"path-visitor-compiled.js","sourcesContent":["var types = require(\"./types\");\nvar NodePath = require(\"./node-path\");\nvar Printable = types.namedTypes.Printable;\nvar isArray = types.builtInTypes.array;\nvar isObject = types.builtInTypes.object;\nvar isFunction = types.builtInTypes.function;\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar undefined;\n\nfunction PathVisitor() {\n    if (!(this instanceof PathVisitor)) {\n        throw new Error(\n            \"PathVisitor constructor cannot be invoked without 'new'\"\n        );\n    }\n\n    // Permanent state.\n    this._reusableContextStack = [];\n\n    this._methodNameTable = computeMethodNameTable(this);\n    this._shouldVisitComments =\n        hasOwn.call(this._methodNameTable, \"Block\") ||\n        hasOwn.call(this._methodNameTable, \"Line\");\n\n    this.Context = makeContextConstructor(this);\n\n    // State reset every time PathVisitor.prototype.visit is called.\n    this._visiting = false;\n    this._changeReported = false;\n}\n\nfunction computeMethodNameTable(visitor) {\n    var typeNames = Object.create(null);\n\n    for (var methodName in visitor) {\n        if (/^visit[A-Z]/.test(methodName)) {\n            typeNames[methodName.slice(\"visit\".length)] = true;\n        }\n    }\n\n    var supertypeTable = types.computeSupertypeLookupTable(typeNames);\n    var methodNameTable = Object.create(null);\n\n    var typeNames = Object.keys(supertypeTable);\n    var typeNameCount = typeNames.length;\n    for (var i = 0; i < typeNameCount; ++i) {\n        var typeName = typeNames[i];\n        methodName = \"visit\" + supertypeTable[typeName];\n        if (isFunction.check(visitor[methodName])) {\n            methodNameTable[typeName] = methodName;\n        }\n    }\n\n    return methodNameTable;\n}\n\nPathVisitor.fromMethodsObject = function fromMethodsObject(methods) {\n    if (methods instanceof PathVisitor) {\n        return methods;\n    }\n\n    if (!isObject.check(methods)) {\n        // An empty visitor?\n        return new PathVisitor;\n    }\n\n    function Visitor() {\n        if (!(this instanceof Visitor)) {\n            throw new Error(\n                \"Visitor constructor cannot be invoked without 'new'\"\n            );\n        }\n        PathVisitor.call(this);\n    }\n\n    var Vp = Visitor.prototype = Object.create(PVp);\n    Vp.constructor = Visitor;\n\n    extend(Vp, methods);\n    extend(Visitor, PathVisitor);\n\n    isFunction.assert(Visitor.fromMethodsObject);\n    isFunction.assert(Visitor.visit);\n\n    return new Visitor;\n};\n\nfunction extend(target, source) {\n    for (var property in source) {\n        if (hasOwn.call(source, property)) {\n            target[property] = source[property];\n        }\n    }\n\n    return target;\n}\n\nPathVisitor.visit = function visit(node, methods) {\n    return PathVisitor.fromMethodsObject(methods).visit(node);\n};\n\nvar PVp = PathVisitor.prototype;\n\nPVp.visit = function() {\n    if (this._visiting) {\n        throw new Error(\n            \"Recursively calling visitor.visit(path) resets visitor state. \" +\n                \"Try this.visit(path) or this.traverse(path) instead.\"\n        );\n    }\n\n    // Private state that needs to be reset before every traversal.\n    this._visiting = true;\n    this._changeReported = false;\n    this._abortRequested = false;\n\n    var argc = arguments.length;\n    var args = new Array(argc)\n    for (var i = 0; i < argc; ++i) {\n        args[i] = arguments[i];\n    }\n\n    if (!(args[0] instanceof NodePath)) {\n        args[0] = new NodePath({ root: args[0] }).get(\"root\");\n    }\n\n    // Called with the same arguments as .visit.\n    this.reset.apply(this, args);\n\n    try {\n        var root = this.visitWithoutReset(args[0]);\n        var didNotThrow = true;\n    } finally {\n        this._visiting = false;\n\n        if (!didNotThrow && this._abortRequested) {\n            // If this.visitWithoutReset threw an exception and\n            // this._abortRequested was set to true, return the root of\n            // the AST instead of letting the exception propagate, so that\n            // client code does not have to provide a try-catch block to\n            // intercept the AbortRequest exception.  Other kinds of\n            // exceptions will propagate without being intercepted and\n            // rethrown by a catch block, so their stacks will accurately\n            // reflect the original throwing context.\n            return args[0].value;\n        }\n    }\n\n    return root;\n};\n\nPVp.AbortRequest = function AbortRequest() {};\nPVp.abort = function() {\n    var visitor = this;\n    visitor._abortRequested = true;\n    var request = new visitor.AbortRequest();\n\n    // If you decide to catch this exception and stop it from propagating,\n    // make sure to call its cancel method to avoid silencing other\n    // exceptions that might be thrown later in the traversal.\n    request.cancel = function() {\n        visitor._abortRequested = false;\n    };\n\n    throw request;\n};\n\nPVp.reset = function(path/*, additional arguments */) {\n    // Empty stub; may be reassigned or overridden by subclasses.\n};\n\nPVp.visitWithoutReset = function(path) {\n    if (this instanceof this.Context) {\n        // Since this.Context.prototype === this, there's a chance we\n        // might accidentally call context.visitWithoutReset. If that\n        // happens, re-invoke the method against context.visitor.\n        return this.visitor.visitWithoutReset(path);\n    }\n\n    if (!(path instanceof NodePath)) {\n        throw new Error(\"\");\n    }\n\n    var value = path.value;\n\n    var methodName = value &&\n        typeof value === \"object\" &&\n        typeof value.type === \"string\" &&\n        this._methodNameTable[value.type];\n\n    if (methodName) {\n        var context = this.acquireContext(path);\n        try {\n            return context.invokeVisitorMethod(methodName);\n        } finally {\n            this.releaseContext(context);\n        }\n\n    } else {\n        // If there was no visitor method to call, visit the children of\n        // this node generically.\n        return visitChildren(path, this);\n    }\n};\n\nfunction visitChildren(path, visitor) {\n    if (!(path instanceof NodePath)) {\n        throw new Error(\"\");\n    }\n    if (!(visitor instanceof PathVisitor)) {\n        throw new Error(\"\");\n    }\n\n    var value = path.value;\n\n    if (isArray.check(value)) {\n        path.each(visitor.visitWithoutReset, visitor);\n    } else if (!isObject.check(value)) {\n        // No children to visit.\n    } else {\n        var childNames = types.getFieldNames(value);\n\n        // The .comments field of the Node type is hidden, so we only\n        // visit it if the visitor defines visitBlock or visitLine, and\n        // value.comments is defined.\n        if (visitor._shouldVisitComments &&\n            value.comments &&\n            childNames.indexOf(\"comments\") < 0) {\n            childNames.push(\"comments\");\n        }\n\n        var childCount = childNames.length;\n        var childPaths = [];\n\n        for (var i = 0; i < childCount; ++i) {\n            var childName = childNames[i];\n            if (!hasOwn.call(value, childName)) {\n                value[childName] = types.getFieldValue(value, childName);\n            }\n            childPaths.push(path.get(childName));\n        }\n\n        for (var i = 0; i < childCount; ++i) {\n            visitor.visitWithoutReset(childPaths[i]);\n        }\n    }\n\n    return path.value;\n}\n\nPVp.acquireContext = function(path) {\n    if (this._reusableContextStack.length === 0) {\n        return new this.Context(path);\n    }\n    return this._reusableContextStack.pop().reset(path);\n};\n\nPVp.releaseContext = function(context) {\n    if (!(context instanceof this.Context)) {\n        throw new Error(\"\");\n    }\n    this._reusableContextStack.push(context);\n    context.currentPath = null;\n};\n\nPVp.reportChanged = function() {\n    this._changeReported = true;\n};\n\nPVp.wasChangeReported = function() {\n    return this._changeReported;\n};\n\nfunction makeContextConstructor(visitor) {\n    function Context(path) {\n        if (!(this instanceof Context)) {\n            throw new Error(\"\");\n        }\n        if (!(this instanceof PathVisitor)) {\n            throw new Error(\"\");\n        }\n        if (!(path instanceof NodePath)) {\n            throw new Error(\"\");\n        }\n\n        Object.defineProperty(this, \"visitor\", {\n            value: visitor,\n            writable: false,\n            enumerable: true,\n            configurable: false\n        });\n\n        this.currentPath = path;\n        this.needToCallTraverse = true;\n\n        Object.seal(this);\n    }\n\n    if (!(visitor instanceof PathVisitor)) {\n        throw new Error(\"\");\n    }\n\n    // Note that the visitor object is the prototype of Context.prototype,\n    // so all visitor methods are inherited by context objects.\n    var Cp = Context.prototype = Object.create(visitor);\n\n    Cp.constructor = Context;\n    extend(Cp, sharedContextProtoMethods);\n\n    return Context;\n}\n\n// Every PathVisitor has a different this.Context constructor and\n// this.Context.prototype object, but those prototypes can all use the\n// same reset, invokeVisitorMethod, and traverse function objects.\nvar sharedContextProtoMethods = Object.create(null);\n\nsharedContextProtoMethods.reset =\nfunction reset(path) {\n    if (!(this instanceof this.Context)) {\n        throw new Error(\"\");\n    }\n    if (!(path instanceof NodePath)) {\n        throw new Error(\"\");\n    }\n\n    this.currentPath = path;\n    this.needToCallTraverse = true;\n\n    return this;\n};\n\nsharedContextProtoMethods.invokeVisitorMethod =\nfunction invokeVisitorMethod(methodName) {\n    if (!(this instanceof this.Context)) {\n        throw new Error(\"\");\n    }\n    if (!(this.currentPath instanceof NodePath)) {\n        throw new Error(\"\");\n    }\n\n    var result = this.visitor[methodName].call(this, this.currentPath);\n\n    if (result === false) {\n        // Visitor methods return false to indicate that they have handled\n        // their own traversal needs, and we should not complain if\n        // this.needToCallTraverse is still true.\n        this.needToCallTraverse = false;\n\n    } else if (result !== undefined) {\n        // Any other non-undefined value returned from the visitor method\n        // is interpreted as a replacement value.\n        this.currentPath = this.currentPath.replace(result)[0];\n\n        if (this.needToCallTraverse) {\n            // If this.traverse still hasn't been called, visit the\n            // children of the replacement node.\n            this.traverse(this.currentPath);\n        }\n    }\n\n    if (this.needToCallTraverse !== false) {\n        throw new Error(\n            \"Must either call this.traverse or return false in \" + methodName\n        );\n    }\n\n    var path = this.currentPath;\n    return path && path.value;\n};\n\nsharedContextProtoMethods.traverse =\nfunction traverse(path, newVisitor) {\n    if (!(this instanceof this.Context)) {\n        throw new Error(\"\");\n    }\n    if (!(path instanceof NodePath)) {\n        throw new Error(\"\");\n    }\n    if (!(this.currentPath instanceof NodePath)) {\n        throw new Error(\"\");\n    }\n\n    this.needToCallTraverse = false;\n\n    return visitChildren(path, PathVisitor.fromMethodsObject(\n        newVisitor || this.visitor\n    ));\n};\n\nsharedContextProtoMethods.visit =\nfunction visit(path, newVisitor) {\n    if (!(this instanceof this.Context)) {\n        throw new Error(\"\");\n    }\n    if (!(path instanceof NodePath)) {\n        throw new Error(\"\");\n    }\n    if (!(this.currentPath instanceof NodePath)) {\n        throw new Error(\"\");\n    }\n\n    this.needToCallTraverse = false;\n\n    return PathVisitor.fromMethodsObject(\n        newVisitor || this.visitor\n    ).visitWithoutReset(path);\n};\n\nsharedContextProtoMethods.reportChanged = function reportChanged() {\n    this.visitor.reportChanged();\n};\n\nsharedContextProtoMethods.abort = function abort() {\n    this.needToCallTraverse = false;\n    this.visitor.abort();\n};\n\nmodule.exports = PathVisitor;\n"]}