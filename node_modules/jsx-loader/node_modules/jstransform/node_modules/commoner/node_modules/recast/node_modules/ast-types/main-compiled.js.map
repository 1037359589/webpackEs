{"version":3,"sources":["main.js"],"names":[],"mappings":"AAAA,IAAI,KAAK,GAAG,OAAO,CAAC,aAAa,CAAC;;;;AAAC,AAInC,OAAO,CAAC,YAAY,CAAC;;;;AAAC,AAItB,OAAO,CAAC,WAAW,CAAC,CAAC;AACrB,OAAO,CAAC,WAAW,CAAC,CAAC;AACrB,OAAO,CAAC,eAAe,CAAC,CAAC;AACzB,OAAO,CAAC,WAAW,CAAC,CAAC;AACrB,OAAO,CAAC,kBAAkB,CAAC,CAAC;AAC5B,OAAO,CAAC,eAAe,CAAC,CAAC;AACzB,OAAO,CAAC,aAAa,CAAC,CAAC;;AAEvB,KAAK,CAAC,QAAQ,EAAE,CAAC;;AAEjB,OAAO,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;AAC1B,OAAO,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;AAC1C,OAAO,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;AACtC,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;AAClC,OAAO,CAAC,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC;AAC1C,OAAO,CAAC,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC;AAC5C,OAAO,CAAC,aAAa,GAAG,KAAK,CAAC,aAAa,CAAC;AAC5C,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;AACpC,OAAO,CAAC,SAAS,GAAG,KAAK,CAAC,SAAS,CAAC;AACpC,OAAO,CAAC,iBAAiB,GAAG,KAAK,CAAC,iBAAiB,CAAC;AACpD,OAAO,CAAC,qBAAqB,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACvD,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;AAClC,OAAO,CAAC,QAAQ,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAC9C,OAAO,CAAC,WAAW,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;AACpD,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,WAAW,CAAC,KAAK,CAAC","file":"main-compiled.js","sourcesContent":["var types = require(\"./lib/types\");\n\n// This core module of AST types captures ES5 as it is parsed today by\n// git://github.com/ariya/esprima.git#master.\nrequire(\"./def/core\");\n\n// Feel free to add to or remove from this list of extension modules to\n// configure the precise type hierarchy that you need.\nrequire(\"./def/es6\");\nrequire(\"./def/es7\");\nrequire(\"./def/mozilla\");\nrequire(\"./def/e4x\");\nrequire(\"./def/fb-harmony\");\nrequire(\"./def/esprima\");\nrequire(\"./def/babel\");\n\ntypes.finalize();\n\nexports.Type = types.Type;\nexports.builtInTypes = types.builtInTypes;\nexports.namedTypes = types.namedTypes;\nexports.builders = types.builders;\nexports.defineMethod = types.defineMethod;\nexports.getFieldNames = types.getFieldNames;\nexports.getFieldValue = types.getFieldValue;\nexports.eachField = types.eachField;\nexports.someField = types.someField;\nexports.getSupertypeNames = types.getSupertypeNames;\nexports.astNodesAreEquivalent = require(\"./lib/equiv\");\nexports.finalize = types.finalize;\nexports.NodePath = require(\"./lib/node-path\");\nexports.PathVisitor = require(\"./lib/path-visitor\");\nexports.visit = exports.PathVisitor.visit;\n"]}