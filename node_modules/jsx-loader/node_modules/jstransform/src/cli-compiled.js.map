{"version":3,"sources":["cli.js"],"names":[],"mappings":";;;;;;;;;AASA,IAAI,MAAM,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AACtC,IAAI,SAAS,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC;;AAE9C,OAAO,CAAC,UAAU,CAAC,CAAC,OAAO,CACzB,OAAO,CAAC,iBAAiB,CAAC,CAAC,OAAO,CACnC,CAAC,OAAO,CAAC,UAAS,EAAE,EAAE;AACrB,SAAO,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;CAC7B,CAAC,CAAC,MAAM,CACP,SAAS,EACT,yDAAyD,CAC1D,CAAC,MAAM,CACN,OAAO,EACP,mCAAmC,CACpC,CAAC,MAAM,CACN,OAAO,EACP,mCAAmC,CACpC,CAAC,MAAM,CACN,WAAW,EACX,gDAAgD,CACjD,CAAC,MAAM,CACN,WAAW,EACX,uCAAuC,CACxC,CAAC,MAAM,CACN,oBAAoB,EACpB,wEAAwE,GACxE,2EAA2E,GAC3E,4EAA4E,GAC5E,0EAA0E,EAC1E,KAAK,CACN,CAAC,MAAM,CACN,eAAe,EACf,8BAA8B,CAC/B,CAAC,MAAM,CACN,aAAa,EACb,yCAAyC,GACzC,6CAA6C,CAC9C,CAAC,MAAM,CACN,wBAAwB,EACxB,0EAA0E,GAC1E,0EAA0E,GAC1E,kDAAkD,CACnD,CAAC,MAAM,CACN,qBAAqB,EACrB,8CAA8C,CAC/C,CAAC,MAAM,CACN,mBAAmB,EACnB,wEAAwE,GACxE,gCAAgC,CACjC,CAAC,OAAO,CAAC,UAAS,EAAE,EAAE,MAAM,EAAE;;;;;AAK7B,MAAI,OAAO,CAAC;AACZ,MAAI,EAAE,KAAK,SAAS,EAAE;AACpB,WAAO,GAAG,MAAM,CAAC,EAAC,cAAc,EAAE,EAAE,GAAG,KAAK,EAAC,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;GAC9D,MAAM;AACL,WAAO,GAAG,IAAI,CAAC,OAAO,CAAC;GACxB;AACD,MAAI,MAAM,GAAG,SAAS,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;AACxC,SAAO,MAAM,CAAC,IAAI,CAAC;CACpB,CAAC,CAAC","file":"cli-compiled.js","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nvar assign = require('object-assign');\nvar transform = require('./simple').transform;\n\nrequire('commoner').version(\n  require('../package.json').version\n).resolve(function(id) {\n  return this.readModuleP(id);\n}).option(\n  '--react',\n  'Turns on the React JSX and React displayName transforms'\n).option(\n  '--es6',\n  'Turns on available ES6 transforms'\n).option(\n  '--es7',\n  'Turns on available ES7 transforms'\n).option(\n  '--harmony',\n  'Shorthand to enable all ES6 and ES7 transforms'\n).option(\n  '--utility',\n  'Turns on available utility transforms'\n).option(\n  '--target [version]',\n  'Specify your target version of ECMAScript. Valid values are \"es3\" and ' +\n  '\"es5\". The default is \"es5\". \"es3\" will avoid uses of defineProperty and ' +\n  'will quote reserved words. WARNING: \"es5\" is not properly supported, even ' +\n  'with the use of es5shim, es5sham. If you need to support IE8, use \"es3\".',\n  'es5'\n).option(\n  '--strip-types',\n  'Strips out type annotations.'\n).option(\n  '--es6module',\n  'Parses the file as a valid ES6 module. ' +\n  '(Note that this means implicit strict mode)'\n).option(\n  '--non-strict-es6module',\n  'Parses the file as an ES6 module, except disables implicit strict-mode. ' +\n  '(This is useful if you\\'re porting non-ES6 modules to ES6, but haven\\'t ' +\n  'yet verified that they are strict-mode safe yet)'\n).option(\n  '--source-map-inline',\n  'Embed inline sourcemap in transformed source'\n).option(\n  '--source-filename',\n  'Filename to use when generating the inline sourcemap. Will default to ' +\n  'filename when processing files'\n).process(function(id, source) {\n  // This is where JSX, ES6, etc. desugaring happens.\n  // We don't do any pre-processing of options so that the command line and the\n  // JS API both expose the same set of options. We will set the sourceFilename\n  // to something more correct than \"source.js\".\n  var options;\n  if (id !== '<stdin>') {\n    options = assign({sourceFilename: id + '.js'}, this.options);\n  } else {\n    options = this.options;\n  }\n  var result = transform(source, options);\n  return result.code;\n});\n\n"]}