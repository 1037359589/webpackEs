{"version":3,"sources":["docblock.js"],"names":[],"mappings":";;;;;;;;;AASA,IAAI,UAAU,GAAG,6BAA6B,CAAC;AAC/C,IAAI,OAAO,GAAG,MAAM;;;;;AAAC,AAKrB,SAAS,OAAO,CAAC,QAAQ,EAAE;AACzB,MAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;AACvC,MAAI,KAAK,EAAE;AACT,WAAO,KAAK,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,OAAO,EAAE,EAAE,CAAC,IAAI,EAAE,CAAC;GAC5C;AACD,SAAO,EAAE,CAAC;CACX;;AAGD,IAAI,cAAc,GAAG,UAAU,CAAC;AAChC,IAAI,YAAY,GAAG,QAAQ,CAAC;AAC5B,IAAI,IAAI,GAAG,SAAS,CAAC;AACrB,IAAI,aAAa,GAAG,gBAAgB,CAAC;AACrC,IAAI,WAAW,GAAG,kEAAkE,CAAC;AACrF,IAAI,UAAU,GAAG,kCAAkC;;;;;;AAAC,AAMpD,SAAS,KAAK,CAAC,QAAQ,EAAE;AACvB,UAAQ,GAAG,QAAQ,CAChB,OAAO,CAAC,cAAc,EAAE,EAAE,CAAC,CAC3B,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC,CACzB,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAClB,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC;;;AAAC,AAGhC,MAAI,IAAI,GAAG,EAAE,CAAC;AACd,SAAO,IAAI,IAAI,QAAQ,EAAE;AACvB,QAAI,GAAG,QAAQ,CAAC;AAChB,YAAQ,GAAG,QAAQ,CAAC,OAAO,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC;GACvD;AACD,UAAQ,GAAG,QAAQ,CAAC,IAAI,EAAE,CAAC;;AAE3B,MAAI,MAAM,GAAG,EAAE,CAAC;AAChB,MAAI,KAAK,CAAC;AACV,SAAO,KAAK,GAAG,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE;AACxC,UAAM,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;GACnC;;AAED,SAAO,MAAM,CAAC;CACf;;;;;;;;;AAAA,AASD,SAAS,aAAa,CAAC,QAAQ,EAAE;AAC/B,MAAI,KAAK,GAAG,KAAK,CAAC,QAAQ,CAAC,CAAC;AAC5B,MAAI,MAAM,GAAG,EAAE,CAAC;AAChB,OAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACrC,UAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;GACnC;AACD,SAAO,MAAM,CAAC;CACf;;AAGD,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC;AAC1B,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC;AACtB,OAAO,CAAC,aAAa,GAAG,aAAa,CAAC","file":"docblock-compiled.js","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nvar docblockRe = /^\\s*(\\/\\*\\*(.|\\r?\\n)*?\\*\\/)/;\nvar ltrimRe = /^\\s*/;\n/**\n * @param {String} contents\n * @return {String}\n */\nfunction extract(contents) {\n  var match = contents.match(docblockRe);\n  if (match) {\n    return match[0].replace(ltrimRe, '') || '';\n  }\n  return '';\n}\n\n\nvar commentStartRe = /^\\/\\*\\*?/;\nvar commentEndRe = /\\*+\\/$/;\nvar wsRe = /[\\t ]+/g;\nvar stringStartRe = /(\\r?\\n|^) *\\*/g;\nvar multilineRe = /(?:^|\\r?\\n) *(@[^\\r\\n]*?) *\\r?\\n *([^@\\r\\n\\s][^@\\r\\n]+?) *\\r?\\n/g;\nvar propertyRe = /(?:^|\\r?\\n) *@(\\S+) *([^\\r\\n]*)/g;\n\n/**\n * @param {String} contents\n * @return {Array}\n */\nfunction parse(docblock) {\n  docblock = docblock\n    .replace(commentStartRe, '')\n    .replace(commentEndRe, '')\n    .replace(wsRe, ' ')\n    .replace(stringStartRe, '$1');\n\n  // Normalize multi-line directives\n  var prev = '';\n  while (prev != docblock) {\n    prev = docblock;\n    docblock = docblock.replace(multilineRe, \"\\n$1 $2\\n\");\n  }\n  docblock = docblock.trim();\n\n  var result = [];\n  var match;\n  while (match = propertyRe.exec(docblock)) {\n    result.push([match[1], match[2]]);\n  }\n\n  return result;\n}\n\n/**\n * Same as parse but returns an object of prop: value instead of array of paris\n * If a property appers more than once the last one will be returned\n *\n * @param {String} contents\n * @return {Object}\n */\nfunction parseAsObject(docblock) {\n  var pairs = parse(docblock);\n  var result = {};\n  for (var i = 0; i < pairs.length; i++) {\n    result[pairs[i][0]] = pairs[i][1];\n  }\n  return result;\n}\n\n\nexports.extract = extract;\nexports.parse = parse;\nexports.parseAsObject = parseAsObject;\n"]}