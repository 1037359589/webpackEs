{"version":3,"sources":["simple.js"],"names":[],"mappings":"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","file":"simple-compiled.js","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n'use strict';\n/*eslint-disable no-undef*/\nvar assign = require('object-assign');\nvar visitors = require('../visitors');\nvar jstransform = require('./jstransform');\nvar typesSyntax = require('../visitors/type-syntax');\nvar inlineSourceMap = require('./inline-source-map');\n\nvar fs = require('fs');\n\nvar DEFAULT_OPTIONS = {\n  react: false,\n  es6: false,\n  es7: false,\n  harmony: false,\n  utility: false,\n  target: 'es5',\n  stripTypes: false,\n  sourceMap: false,\n  sourceMapInline: false,\n  sourceFilename: 'source.js',\n  es6module: false,\n  nonStrictEs6module: false\n};\n/**\n * Transforms the given code with the given options.\n *\n * @param {string} code\n * @param {object} options\n * @return {object}\n */\nfunction transform(code, options) {\n  options = assign({}, DEFAULT_OPTIONS, options);\n\n  // Process options\n  var transformOptions = {};\n\n  if (options.sourceMap || options.sourceMapInline) {\n    transformOptions.sourceMap = true;\n    transformOptions.filename = options.sourceFilename || 'source.js';\n  }\n\n  if (options.es6module) {\n    transformOptions.sourceType = 'module';\n  }\n  if (options.nonStrictEs6module) {\n    transformOptions.sourceType = 'nonStrictModule';\n  }\n\n  // Instead of doing any fancy validation, only look for 'es3'. If we have\n  // that, then use it. Otherwise use 'es5'.\n  transformOptions.es3 = options.target === 'es3';\n  transformOptions.es5 = !transformOptions.es3;\n\n  // Determine visitors to use\n  var visitorSets = [];\n\n  if (options.react) {\n    visitorSets.push('react');\n  }\n\n  if (options.harmony) {\n    visitorSets.push('harmony');\n  }\n\n  if (options.es6) {\n    visitorSets.push('es6');\n  }\n\n  if (options.es7) {\n    visitorSets.push('es7');\n  }\n\n  if (options.utility) {\n    visitorSets.push('utility');\n  }\n\n  if (options.target === 'es3') {\n    visitorSets.push('target:es3');\n  }\n\n\n  if (options.stripTypes) {\n    // Stripping types needs to happen before the other transforms\n    // unfortunately, due to bad interactions. For example,\n    // es6-rest-param-visitors conflict with stripping rest param type\n    // annotation\n    code = jstransform.transform(\n      typesSyntax.visitorList,\n      code,\n      transformOptions\n    ).code;\n  }\n\n  var visitorList = visitors.getVisitorsBySet(visitorSets);\n  var result = jstransform.transform(visitorList, code, transformOptions);\n\n  // Only copy some things off.\n  var output = {\n    code: result.code,\n    sourceMap: null\n  };\n\n  // Convert sourceMap to JSON.\n  var sourceMap;\n  if (result.sourceMap) {\n    sourceMap = result.sourceMap.toJSON();\n    sourceMap.sources = [transformOptions.filename];\n    sourceMap.sourcesContent = [code];\n  }\n\n  // This differentiates options.sourceMap from options.sourceMapInline.\n  if (options.sourceMap) {\n    output.sourceMap = sourceMap;\n  }\n\n  if (options.sourceMapInline) {\n    var map = inlineSourceMap(\n      result.sourceMap,\n      code,\n      transformOptions.filename\n    );\n    output.code = output.code + '\\n' + map;\n  }\n\n  return output;\n}\n\nfunction transformFile(file, options, callback) {\n  if (typeof options === 'function') {\n    callback = options;\n    options = {};\n  }\n  options = assign({sourceFilename: file}, options);\n\n  fs.readFile(file, 'utf-8', function(err, contents) {\n    if (err) {\n      return callback(err, null);\n    }\n\n    var result = transform(contents, options);\n    callback(null, result);\n  });\n}\n\nfunction transformFileSync(file, options) {\n  options = assign({sourceFilename: file}, options);\n  var contents = fs.readFileSync(file, 'utf-8');\n  return transform(contents, options);\n}\n\nmodule.exports = {\n  transform: transform,\n  transformFile: transformFile,\n  transformFileSync: transformFileSync\n};\n"]}