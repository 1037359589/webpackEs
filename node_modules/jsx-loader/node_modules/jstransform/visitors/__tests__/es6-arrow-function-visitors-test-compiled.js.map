{"version":3,"sources":["es6-arrow-function-visitors-test.js"],"names":[],"mappings":"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","file":"es6-arrow-function-visitors-test-compiled.js","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @emails dmitrys@fb.com\n */\n\n/*jshint evil:true*/\n/*jshint -W117*/\n\nrequire('mock-modules').autoMockOff();\n\ndescribe('es6ArrowFunctionsTransform', function() {\n  var transformFn;\n  var visitors;\n\n  beforeEach(function() {\n    require('mock-modules').dumpCache();\n    visitors = require('../es6-arrow-function-visitors').visitorList;\n    transformFn = require('../../src/jstransform').transform;\n  });\n\n  function transform(code) {\n    return transformFn(visitors, code).code;\n  }\n\n  function expectTransform(code, result) {\n    expect(transform(code)).toEqual(result);\n  }\n\n  it('should capture correct this value at different levels', function() {\n    var code = transform([\n      'var foo = {',\n      '  createFooGetter: function() {',\n      '    return (x) => [x, this];', // captures foo\n      '  },',\n      '  getParentThis: () => this', // captures parent this\n      '};'\n    ].join('\\n'));\n\n    eval(code);\n\n    expect(typeof foo.createFooGetter).toBe('function');\n    expect(typeof foo.createFooGetter()).toBe('function');\n    expect(typeof foo.getParentThis).toBe('function');\n\n    expect(foo.getParentThis()).toEqual(this);\n    expect(foo.createFooGetter()(10)).toEqual([10, foo]);\n  });\n\n  it('should map an array using arrow capturing this value', function() {\n    this.factor = 10;\n\n    var code = transform(\n      '[1, 2, 3].map(x => x * x * this.factor);'\n    );\n\n    expect(eval(code)).toEqual([10, 40, 90]);\n  });\n\n  it('binds if any `super` keyword is referenced', function() {\n    var code = transform(\n      'var fn=x=>super;'\n    );\n\n    // We have to do a source text comparison here because `super` is a reserved\n    // keyword (so we can't eval it).\n    expect(code).toEqual('var fn=function(x){return super;}.bind(this);');\n  });\n\n  it('should filter an array using arrow with two params', function() {\n    this.factor = 0;\n\n    var code = transform([\n      '[1, 2, 3].filter((v, idx) => {',\n      '  if (idx > 1 && this.factor > 0) {',\n      '    return true;',\n      '  }',\n      '  this.factor++;',\n      '  return false;',\n      '});'\n    ].join('\\n'));\n\n    expect(eval(code)).toEqual([3]);\n  });\n\n  it('should fetch this value data from nested arrow', function() {\n    var code = transform([\n      '({',\n      '  bird: 22,',\n      '  run: function() {',\n      '    return () => () => this.bird;',\n      '  }',\n      '}).run()()();'\n    ].join('\\n'));\n\n    expect(eval(code)).toEqual(22);\n  });\n\n  // Syntax tests.\n\n  it('should correctly transform arrows', function() {\n    // 0 params, expression.\n    expectTransform(\n      '() => this.value;',\n      '(function()  {return this.value;}.bind(this));'\n    );\n\n    // 0 params, expression wrapped in parens\n    expectTransform(\n      '() => (this.value);',\n      '(function()  {return this.value;}.bind(this));'\n    );\n\n    // 1 param, no-parens, expression, no this.\n    expectTransform(\n      'x => x * x;',\n      '(function(x)  {return x * x;});'\n    );\n\n    // 1 param, parens, expression, as argument, no this.\n    expectTransform(\n      'map((x) => x * x);',\n      'map(function(x)  {return x * x;});'\n    );\n\n    // 2 params, block, as argument, nested.\n    expectTransform(\n      'makeRequest((response, error) => {'.concat(\n      '  return this.update(data => this.onData(data), response);',\n      '});'),\n      'makeRequest(function(response, error)  {'.concat(\n      '  return this.update(function(data)  {return this.onData(data);}.bind(this), response);',\n      '}.bind(this));')\n    );\n\n    // Assignment to a var, simple, 1 param.\n    expectTransform(\n      'var action = (value) => this.performAction(value);',\n      'var action = function(value)  {return this.performAction(value);}.bind(this);'\n    );\n\n    // Preserve lines transforming ugly code.\n    expectTransform([\n      '(',\n      '',\n      '',\n      '    x,',\n      ' y',\n      '',\n      ')',\n      '',\n      '         =>',\n      '',\n      '        {',\n      ' return         x + y;',\n      '};'\n    ].join('\\n'), [\n      '(function(',\n      '',\n      '',\n      '    x,',\n      ' y)',\n      '',\n      '',\n      '',\n      '         ',\n      '',\n      '        {',\n      ' return         x + y;',\n      '});'\n    ].join('\\n'));\n\n    // Preserve line numbers with single parens-free param ugly code.\n    expectTransform([\n      'x',\n      '',\n      '     =>',\n      '   x;'\n    ].join('\\n'), [\n      '(function(x)',\n      '',\n      '     ',\n      '   {return x;});'\n    ].join('\\n'));\n\n    // Preserve line numbers with single parens param ugly code.\n    expectTransform([\n      '(',\n      '',\n      '   x',\n      '',\n      ')',\n      '',\n      '     =>',\n      '   x;'\n    ].join('\\n'), [\n      '(function(',\n      '',\n      '   x)',\n      '',\n      '',\n      '',\n      '     ',\n      '   {return x;});'\n    ].join('\\n'));\n\n    // Preserve line numbers with parens around expression.\n    expectTransform([\n      '(x) => (',\n      '  x',\n      ');'\n    ].join('\\n'), [\n      '(function(x)  ',\n      '  {return x;}',\n      ');'\n    ].join('\\n'));\n\n    // Preserve typechecker annotation.\n    expectTransform(\n      '(/*string*/foo, /*bool*/bar) => foo;',\n      '(function(/*string*/foo, /*bool*/bar)  {return foo;});'\n    );\n\n    // Binds this for arrows containing <this />\n    expectTransform(\n      '(() => <this />)',\n      '((function()  {return <this />;}.bind(this)))'\n    );\n  });\n});\n\n"]}