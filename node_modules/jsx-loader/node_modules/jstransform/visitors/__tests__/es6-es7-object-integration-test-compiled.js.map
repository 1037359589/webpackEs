{"version":3,"sources":["es6-es7-object-integration-test.js"],"names":[],"mappings":";;;;;;;;;;;;;AAaA,OAAO,CAAC,cAAc,CAAC,CAAC,WAAW,EAAE,CAAC;;AAEtC,QAAQ,CAAC,iCAAiC,EAAE,YAAW;AACrD,MAAI,WAAW,CAAC;;AAEhB,MAAI,QAAQ;;;;AAAC,AAIb,MAAI,CAAC,GAAG,MAAM,CAAC;AACf,MAAI,CAAC,GAAG,MAAM,CAAC;;AAEf,YAAU,CAAC,YAAW;AACpB,WAAO,CAAC,cAAc,CAAC,CAAC,SAAS,EAAE,CAAC;AACpC,eAAW,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC,SAAS,CAAC;;AAEzD,QAAI,qBAAqB,GAAG,OAAO,CAAC,uCAAuC,CAAC,CAAC,WAAW,CAAC;AACzF,QAAI,oBAAoB,GAAG,OAAO,CAAC,uCAAuC,CAAC,CAAC,WAAW,CAAC;AACxF,QAAI,sBAAsB,GAAG,OAAO,CAAC,iCAAiC,CAAC,CAAC,WAAW,CAAC;;AAEpF,YAAQ,GAAG,sBAAsB,CAAC,MAAM,CACtC,oBAAoB,EACpB,qBAAqB,CACtB,CAAC;GACH,CAAC,CAAC;;AAEH,WAAS,SAAS,CAAC,IAAI,EAAE;AACvB,WAAO,WAAW,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC;GACzC;;AAED,IAAE,CAAC,wDAAwD,EAAE,YAAW;AACtE,QAAI,IAAI,GAAG,2CAA2C,CAAC;AACvD,QAAI,gBAAgB,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;AAC9C,UAAM,CAAC,MAAM,GAAG,gBAAgB,CAAC;AACjC,QAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;;AAEtB,QAAI,WAAW,GAAG,gBAAgB,CAAC,IAAI,CAAC,KAAK,CAAC;AAC9C,UAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACnC,UAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACtC,UAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AACtC,UAAM,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;;AAErC,QAAI,cAAc,GAAG,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACvC,UAAM,CAAC,cAAc,CAAC,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;AACvC,UAAM,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;GACrC,CAAC,CAAC;;AAEH,IAAE,CAAC,0DAA0D,EAAE,YAAW;AACxE,QAAI,IAAI,GAAG,uCAAuC,CAAC;AACnD,QAAI,gBAAgB,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;AAC9C,UAAM,CAAC,MAAM,GAAG,gBAAgB,CAAC;AACjC,QAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;AACtB,UAAM,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,UAAU,EAAE,CAAC;GAC3C,CAAC,CAAC;CAEJ,CAAC,CAAC","file":"es6-es7-object-integration-test-compiled.js","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @emails sema@fb.com javascript@lists.facebook.com\n */\n\n/*jshint evil:true*/\n\nrequire('mock-modules').autoMockOff();\n\ndescribe('es6-es7-object-integration-test', function() {\n  var transformFn;\n\n  var visitors;\n\n  // These are placeholder variables in scope that we can use to assert that a\n  // specific variable reference was passed, rather than an object clone of it.\n  var x = 123456;\n  var z = 345678;\n\n  beforeEach(function() {\n    require('mock-modules').dumpCache();\n    transformFn = require('../../src/jstransform').transform;\n\n    var conciseMethodVisitors = require('../es6-object-concise-method-visitors').visitorList;\n    var shortObjectsVisitors = require('../es6-object-short-notation-visitors').visitorList;\n    var spreadPropertyVisitors = require('../es7-spread-property-visitors').visitorList;\n\n    visitors = spreadPropertyVisitors.concat(\n      shortObjectsVisitors,\n      conciseMethodVisitors\n    );\n  });\n\n  function transform(code) {\n    return transformFn(visitors, code).code;\n  }\n\n  it('handles spread with concise methods and short notation', function() {\n    var code = 'var xyz = { ...x, y() { return 42; }, z }';\n    var objectAssignMock = jest.genMockFunction();\n    Object.assign = objectAssignMock;\n    eval(transform(code));\n\n    var assignCalls = objectAssignMock.mock.calls;\n    expect(assignCalls.length).toBe(1);\n    expect(assignCalls[0].length).toBe(3);\n    expect(assignCalls[0][0]).toEqual({});\n    expect(assignCalls[0][1]).toEqual(x);\n\n    var trailingObject = assignCalls[0][2];\n    expect(trailingObject.y()).toEqual(42);\n    expect(trailingObject.z).toEqual(z);\n  });\n\n  it('does not call assign when there are no spread properties', function() {\n    var code = 'var xyz = { x, y() { return 42 }, z }';\n    var objectAssignMock = jest.genMockFunction();\n    Object.assign = objectAssignMock;\n    eval(transform(code));\n    expect(objectAssignMock).not.toBeCalled();\n  });\n\n});\n"]}