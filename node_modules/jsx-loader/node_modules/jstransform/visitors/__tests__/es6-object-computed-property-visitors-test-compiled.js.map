{"version":3,"sources":["es6-object-computed-property-visitors-test.js"],"names":[],"mappings":"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","file":"es6-object-computed-property-visitors-test-compiled.js","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @emails dmitrys@fb.com\n */\n\n/*jshint evil:true*/\n\nrequire('mock-modules').autoMockOff();\n\ndescribe('es6-computed-property-visitors', function() {\n  var transformFn;\n  var visitors;\n\n  beforeEach(function() {\n    require('mock-modules').dumpCache();\n    transformFn = require('../../src/jstransform').transform;\n\n    visitors = require('../es6-object-computed-property-visitors').visitorList\n      .concat(require('../es6-object-concise-method-visitors').visitorList)\n      .concat(require('../es6-object-short-notation-visitors').visitorList)\n      .concat(require('../es7-spread-property-visitors').visitorList);\n  });\n\n  function transform(code, options) {\n    return transformFn(visitors, code, options).code;\n  }\n\n  it('should transforms simple computed properties', function() {\n    var result;\n    eval(transform([\n      'var x = \"foo\", q = \"bar\";',\n      'var result = {[x]: 1, y: 2, \"z\": 3, [x + q]: 4};',\n    ].join('\\n')));\n\n    expect(result).toEqual({foo: 1, y: 2, z: 3, foobar: 4});\n  });\n\n  it('should transform computed property', function() {\n    expect(transform('var x = {alpha: 12, \\'beta\\': 34, [\\'gam\\' + \\'ma\\']: 56};'))\n      .toEqual('var $__0;var x = ($__0={},$__0.alpha= 12,$__0[ \\'beta\\']= 34,$__0[ \\'gam\\' + \\'ma\\']= 56,$__0);');\n  });\n\n  it('should handle spread operator', function() {\n    expect(transform('({[\\'a\\'+\\'b\\']: \\'ab\\', ...cde})'))\n      .toEqual('var $__0;(($__0={},$__0[\\'a\\'+\\'b\\']= \\'ab\\',Object.assign($__0 ,cde),$__0))');\n  });\n\n  it('should handle consecutive spread operators', function() {\n    expect(transform('({...a, [1+1]: 2, ...c, ...d})'))\n      .toEqual('var $__0;(($__0={},Object.assign($__0,a),$__0[ 1+1]= 2,Object.assign($__0 ,c, d),$__0))');\n  });\n\n  it('should handle everything individually while preserving whitespace', function() {\n    var original = [\n      '\\n...\\na\\n', // spread property\n      '\\tb\\t', // short object\n      '\\nc\\n(\\nx\\n)\\n{ return x * x; }\\n', // concise method\n      '\\t[\\td? \"e\": \"f\"\\t]\\t:\\tfunction(y)\\t{ return y * y; }\\t', // computed property\n      '\\ng\\n:\\n\"h\"\\n' // normal property\n    ].join(',');\n    var transformed = [\n      'Object.assign($__0\\n,\\na\\n',\n      '\\t{b:b\\t',\n      '\\nc:function\\n(\\nx\\n)\\n{ return x * x; }})',\n      '$__0[\\n\\t\\td? \"e\": \"f\"]=\\t\\t\\tfunction(y)\\t{ return y * y; }',\n      '$__0.g=\\t\\n\\n\\n\"h\"\\n'\n    ].join(',');\n    expect(transform('({' + original + '})'))\n      .toEqual('var $__0;(($__0={},' + transformed + ',$__0))');\n  });\n\n  it('should fail for short notation with computed names', function() {\n    expect(transform.bind(null, '({[\"a\" + \"b\"]})')).toThrow();\n  });\n\n  it('should handle concise generator methods with computed names', function() {\n    expect(transform('({*[\"a\" + b ](c) { return c * c; },\\t*d(e) { return e * e; }})'))\n      .toEqual('var $__0;(($__0={},$__0[\"a\" + b]= function*(c) { return c * c; },$__0.d=\\tfunction*(e) { return e * e; },$__0))');\n  });\n\n  it('should evaluate simple object with computed properties', function() {\n    var result = eval(transform('({[\"alp\"+\\'ha\\']:1, [1>2?\"beta\":\"gamma\"]:3})'));\n    expect(result).toEqual({alpha: 1, gamma: 3});\n  });\n\n  it('should evaluate complex objects with computed properties', function() {\n    var complex;\n    eval(transform([\n      'var spread = {identifier: 1, \"literal\": 2, [\"comp\"+\"uted\"]: \"overwritten\"};',\n      'var short = \"value\";',\n      'var complex = {short, ...spread, [\"con\"+\"cise\"]() { return \"method\"; }, [String.fromCharCode(100-1)+\"omputed\"]: \"actual\"};',\n    ].join('\\n')));\n    expect(complex).toEqual({\n      short: 'value',\n      identifier: 1,\n      literal: 2,\n      concise: complex.concise,\n      computed: 'actual',\n    });\n  });\n\n});\n"]}