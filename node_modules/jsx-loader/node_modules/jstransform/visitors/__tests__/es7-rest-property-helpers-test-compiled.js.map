{"version":3,"sources":["es7-rest-property-helpers-test.js"],"names":[],"mappings":"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","file":"es7-rest-property-helpers-test-compiled.js","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @emails sema@fb.com\n */\n\n/*jshint evil:true*/\n\nrequire('mock-modules').autoMockOff();\n\ndescribe('es7-rest-property-visitors', function() {\n  var transformFn;\n\n  var visitors;\n\n  beforeEach(function() {\n    require('mock-modules').dumpCache();\n    transformFn = require('../../src/jstransform').transform;\n\n    visitors = require('../es6-destructuring-visitors').visitorList;\n  });\n\n  function transform(code) {\n    var lines = Array.prototype.join.call(arguments, '\\n');\n    return transformFn(visitors, lines).code;\n  }\n\n  // Semantic tests.\n\n  it('picks off remaining properties from an object', function() {\n    var code = transform(\n      '({ x, y, ...z } = { x: 1, y: 2, a: 3, b: 4 });',\n      '([ x, y, z ]);'\n    );\n    expect(eval(code)).toEqual([1, 2, { a: 3, b: 4 }]);\n  });\n\n  it('picks off remaining properties from a nested object', function() {\n    var code = transform(\n      'var complex = {',\n      '  x: { a: 1, b: 2, c: 3 },',\n      '  y: [4, 5, 6]',\n      '};',\n      'var {',\n      '  x: { a: xa, ...xbc },',\n      '  y: [y0, ...y12]',\n      '} = complex;',\n      '([ xa, xbc, y0, y12 ]);'\n    );\n    expect(eval(code)).toEqual([ 1, { b: 2, c: 3 }, 4, [5, 6] ]);\n  });\n\n  it('only extracts own properties', function() {\n    var code = transform(\n      'var obj = Object.create({ x: 1 });',\n      'obj.y = 2;',\n      '({ ...y } = obj);',\n      '(y);'\n    );\n    expect(eval(code)).toEqual({ y: 2 });\n  });\n\n  it('only extracts own properties, except when they are explicit', function() {\n    var code = transform(\n      'var obj = Object.create({ x: 1, y: 2 });',\n      'obj.z = 3;',\n      '({ y, ...z } = obj);',\n      '([ y, z ]);'\n    );\n    expect(eval(code)).toEqual([ 2, { z: 3 } ]);\n  });\n\n  it('avoids passing extra properties when they are picked off', function() {\n    var code = transform(\n      'function base({ a, b, x }) { return [ a, b, x ]; }',\n      'function wrapper({ x, y, ...restConfig }) {',\n      '  return base(restConfig);',\n      '}',\n      'wrapper({ x: 1, y: 2, a: 3, b: 4 });'\n    );\n    expect(eval(code)).toEqual([ 3, 4, undefined ]);\n  });\n\n  // Syntax tests.\n\n  it('throws on leading rest properties', function () {\n    expect(() => transform('({ ...x, y, z } = obj)')).toThrow();\n  });\n\n  it('throws on multiple rest properties', function () {\n    expect(() => transform('({ x, ...y, ...z } = obj)')).toThrow();\n  });\n\n  // TODO: Ideally identifier reuse should fail to transform\n  // it('throws on identifier reuse', function () {\n  //  expect(() => transform('({ x: { ...z }, y: { ...z } } = obj)')).toThrow();\n  // });\n\n});\n"]}