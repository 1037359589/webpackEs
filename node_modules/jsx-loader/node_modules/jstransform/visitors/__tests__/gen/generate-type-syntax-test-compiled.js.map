{"version":3,"sources":["generate-type-syntax-test.js"],"names":[],"mappings":";;;;;;;;;;;AAWA,IAAI,KAAK,GAAG,OAAO,CAAC,uBAAuB,CAAC,CAAC;AAC7C,IAAI,WAAW,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;AACtD,IAAI,QAAQ,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC,WAAW,CAAC;AACxD,IAAI,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;;AAEvB,IAAI,GAAG,GAAG;;;;;;QAMF,CAAC;;AAET,IAAI,IAAI,GAAG,EAAE,CAAC;AACd,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,UAAS,WAAW,EAAE;AAC/C,MAAI,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC,CAAC;AACjC,MAAI,WAAW,GAAG,EAAE,CAAC;AACrB,SAAO,CAAC,OAAO,CAAC,UAAS,QAAQ,EAAE;AACjC,QAAI,IAAI,CAAC;AACT,eAAW,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;AAC3B,QAAI,QAAQ,GAAG,EAAE,CAAC;AAClB,QAAI;AACF,UAAI,GAAG,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,IAAI,CAAC;AACtD,cAAQ,CAAC,WAAW,GAAG,QAAQ,CAAC;AAChC,cAAQ,CAAC,WAAW,GAAG,IAAI,CAAC;AAC5B,UAAI;AACF,YAAI,CAAC,IAAI,CAAC,CAAC;AACX,gBAAQ,CAAC,IAAI,GAAG,UAAU,CAAC;OAC5B,CAAC,OAAO,CAAC,EAAE;AACV,gBAAQ,CAAC,IAAI,GAAG,CAAC,CAAC,OAAO,CAAC;OAC3B;KAEF,CAAC,OAAO,CAAC,EAAE;AACV,cAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC;KAC5B;AACD,eAAW,CAAC,QAAQ,CAAC,GAAG,QAAQ,CAAC;GAClC,CAAC,CAAC;AACH,MAAI,CAAC,WAAW,CAAC,GAAG,WAAW,CAAC;CACjC,CAAC,CAAC;;AAEH,GAAG,IAAI,mBAAmB,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,GAAG,KAAK,CAAC;;AAEnE,EAAE,CAAC,aAAa,CAAC,SAAS,GAAG,0BAA0B,EAAE,GAAG,CAAC,CAAC;AAC9D,OAAO,CAAC,GAAG,CAAC,kEAAkE,CAAC,CAAC","file":"generate-type-syntax-test-compiled.js","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/*jshint evil:true, multistr:true*/\n\nvar tests = require('./../type-syntax-test');\nvar jstransform = require('../../../src/jstransform');\nvar visitors = require('../../type-syntax').visitorList;\nvar fs = require('fs');\n\nvar out = '/**\\n\\\n * WARNING: This file is autogenerated by\\n\\\n * src/visitors/flow/__tests__/gen/generate-type-syntax-test.js\\n\\\n * Do NOT modify this file directly! Instead, add your tests to\\n\\\n * src/visitors/flow/__tests__/type-syntax-test.js and run\\n\\\n * src/visitors/flow/__tests__/gen/generate-type-syntax-test.js\\n\\\n */\\n\\n';\n\nvar data = {};\nObject.keys(tests).forEach(function(sectionName) {\n  var section = tests[sectionName];\n  var sectionData = {};\n  section.forEach(function(testCode) {\n    var code;\n    sectionData[testCode] = {};\n    var testData = {};\n    try {\n      code = jstransform.transform(visitors, testCode).code;\n      testData.raworiginal = testCode;\n      testData.transformed = code;\n      try {\n        eval(code);\n        testData.eval = 'No error';\n      } catch (e) {\n        testData.eval = e.message;\n      }\n\n    } catch (e) {\n      testData.error = e.message;\n    }\n    sectionData[testCode] = testData;\n  });\n  data[sectionName] = sectionData;\n});\n\nout += 'module.exports = ' + JSON.stringify(data, null, 2) + ';\\n';\n\nfs.writeFileSync(__dirname + '/type-syntax-test.rec.js', out);\nconsole.log('Recorded type-syntax-test.js output into type-syntax-test.rec.js');\n\n"]}