{"version":3,"sources":["jsx-helpers-test.js"],"names":[],"mappings":"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","file":"jsx-helpers-test-compiled.js","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @emails jeffmo@fb.com\n */\n\n'use strict';\n\nrequire('mock-modules').autoMockOff();\n\ndescribe('jsx', function() {\n  var jsx = require('../jsx-helpers');\n  var utils = require('jstransform/src/utils');\n  var esprima = require('esprima-fb');\n\n  function runWithLiteral(text, isLast) {\n    var source = '<div>' + text + '</div>';\n    var ast = esprima.parse(source, { range: true });\n    var state = utils.createState(source);\n    var literal = ast.body[0].expression.children[0];\n    state.g.position = literal.range[0];\n    jsx.renderJSXLiteral(literal, isLast, state);\n    return state;\n  }\n\n  function runWithAttribute(inlineAttribute, isLast) {\n    var source = '<div ' + inlineAttribute + ' />';\n    var ast = esprima.parse(source, { range: true });\n    var state = utils.createState(source);\n    var attribute = ast.body[0].expression.openingElement.attributes[0];\n    state.g.position = attribute.value.range[0];\n    jsx.renderJSXExpressionContainer(\n      function() {},\n      attribute.value,\n      isLast,\n      [],\n      state\n    );\n    return state;\n  }\n\n  it('should render simple literal', function() {\n    var state = runWithLiteral('a', true);\n    expect(state.g.buffer).toEqual('\"a\"');\n  });\n\n\n  it('should render simple literal with single space before', function() {\n    var state = runWithLiteral(' a', true);\n    expect(state.g.buffer).toEqual('\" a\"');\n  });\n\n  it('should render simple literal with single space before' +\n      ' from multiple spaces', function() {\n    var state = runWithLiteral(' \\t  a', true);\n    expect(state.g.buffer).toEqual('\"    a\"');\n  });\n\n  it('should render simple literal with single space after', function() {\n    var state = runWithLiteral('a ', true);\n    expect(state.g.buffer).toEqual('\"a \"');\n  });\n\n  it('should render simple literal with single space after' +\n      ' from multiple spaces', function() {\n    var state = runWithLiteral('a  \\t \\t ', true);\n    expect(state.g.buffer).toEqual('\"a      \"');\n  });\n\n  it('should render multiline literal as last', function() {\n    var state = runWithLiteral(\n      '  sdfsdfsdf\\n' +\n      '  sdlkfjsdfljs\\n' +\n      '   ',\n      true);\n\n    expect(state.g.buffer).toEqual(\n      '\"  sdfsdfsdf\" + \" \" +\\n' +\n      '  \"sdlkfjsdfljs\"\\n' +\n      '   ');\n  });\n\n  it('should render multiline literal as not last', function() {\n    var state = runWithLiteral(\n      '  sdfsdfsdf\\n' +\n      '  sdlkfjsdfljs\\n' +\n      '   ',\n      false);\n\n    expect(state.g.buffer).toEqual(\n      '\"  sdfsdfsdf\" + \" \" +\\n' +\n      '  \"sdlkfjsdfljs\", \\n' +\n      '   ');\n  });\n\n  it('should render attribute expressions', function() {\n    var state = runWithAttribute('attr={\"foo\"}', true);\n    expect(state.g.buffer).toEqual('\"foo\"');\n  });\n\n  it('should render attribute expressions as not last', function() {\n    var state = runWithAttribute('attr={\"foo\"}', false);\n    expect(state.g.buffer).toEqual('\"foo\", ');\n  });\n\n  it('should render attribute expressions with spaces', function() {\n    var state = runWithAttribute('attr={ \"foo\"\\n }', true);\n    expect(state.g.buffer).toEqual(' \"foo\"\\n ');\n  });\n\n  it('should render attribute expressions with commas before trailing ' +\n      'whitespace', function() {\n    var state = runWithAttribute('attr={\\n\"foo\"\\n }', false);\n    expect(state.g.buffer).toEqual('\\n\"foo\", \\n ');\n  });\n\n  it('should render empty child expressions with comments', function() {\n    var source = '<div>{/*comment*/}</div>';\n    var ast = esprima.parse(source, {range: true});\n    var child = ast.body[0].expression.children[0];\n    var state = utils.createState(source, child);\n    state.g.position = child.range[0];\n    jsx.renderJSXExpressionContainer(function() {}, child, true, [], state);\n    expect(state.g.buffer).toBe('/*comment*/');\n  });\n\n  it('should not render commas after empty child expressions even if they\\'re' +\n     'not last', function() {\n    var source = '<div>{/*comment*/}</div>';\n    var ast = esprima.parse(source, {range: true});\n    var child = ast.body[0].expression.children[0];\n    var state = utils.createState(source, child);\n    state.g.position = child.range[0];\n    jsx.renderJSXExpressionContainer(function() {}, child, false, [], state);\n    expect(state.g.buffer).toBe('/*comment*/');\n  });\n});\n"]}