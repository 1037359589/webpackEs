{"version":3,"sources":["reserved-words-test.js"],"names":[],"mappings":"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","file":"reserved-words-test-compiled.js","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @emails jeffmo@fb.com\n */\n\n/*jshint evil:true*/\n\njest.autoMockOff();\n\ndescribe('reserved-words', function() {\n  var transformFn;\n  var visitors;\n\n  beforeEach(function() {\n    require('mock-modules').dumpCache();\n    visitors = require('../reserved-words-visitors').visitorList;\n    transformFn = require('../../src/jstransform').transform;\n  });\n\n  function transform(code, opts) {\n    // No need for visitors as long as we are not in es5 mode.\n    return transformFn(visitors, code, opts).code;\n  }\n\n  describe('reserved words in member expressions', function() {\n    it('should transform to reserved word members to computed', function() {\n      var code = 'foo.delete;';\n\n      expect(transform(code)).toEqual('foo[\"delete\"];');\n    });\n\n    it('should handle parenthesis', function() {\n      var code = '(foo++).delete;';\n      expect(transform(code)).toEqual('(foo++)[\"delete\"];');\n\n      code = '(foo.bar()).delete;';\n      expect(transform(code)).toEqual('(foo.bar())[\"delete\"];');\n    });\n\n    it('should handle call expressions', function() {\n      var code = 'foo.return();';\n\n      expect(transform(code)).toEqual('foo[\"return\"]();');\n    });\n\n    it('should only quote ES3 reserved words', function() {\n      var code = 'foo.await();';\n\n      expect(transform(code)).toEqual('foo.await();');\n    });\n\n    it('should work with newlines', function() {\n      var code = 'foo.\\ncatch();';\n      expect(transform(code)).toEqual('foo\\n[\"catch\"]();');\n\n      // This one is weird but it works.\n      code = 'foo.\\n  catch();';\n      expect(transform(code)).toEqual('foo\\n  [\"catch\"]();');\n\n      code = 'foo\\n.catch();';\n      expect(transform(code)).toEqual('foo\\n[\"catch\"]();');\n\n      code = 'foo\\n  .catch();';\n      expect(transform(code)).toEqual('foo\\n  [\"catch\"]();');\n    });\n  });\n\n  describe('reserved words in properties', function() {\n    it('should quote reserved words in properties', function() {\n      var code = 'var x = {null: 1};';\n\n      expect(transform(code)).toEqual('var x = {\"null\": 1};');\n    });\n\n    it('should only quote ES3 reserved words', function() {\n      var code = 'var x = {await: 1};';\n\n      expect(transform(code)).toEqual('var x = {await: 1};');\n    });\n  });\n});\n"]}