{"version":3,"sources":["type-alias-syntax-test.js"],"names":[],"mappings":";;;;;;;;;;;AAWA,OAAO,CAAC,cAAc,CAAC,CAAC,WAAW,EAAE,CAAC;;AAEtC,QAAQ,CAAC,2BAA2B,EAAE,YAAW;AAC/C,MAAI,kBAAkB,CAAC;AACvB,MAAI,WAAW,CAAC;;AAEhB,YAAU,CAAC,YAAW;AACpB,WAAO,CAAC,cAAc,CAAC,CAAC,SAAS,EAAE,CAAC;;AAEpC,sBAAkB,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC,WAAW,CAAC;AAC9D,eAAW,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;GACtC,CAAC,CAAC;;AAEH,WAAS,SAAS,CAAC,IAAI,EAAE,QAAQ,EAAE;AACjC,QAAI,IAAI,GAAG,EAAC,UAAU,EAAE,iBAAiB,EAAC,CAAC;AAC3C,QAAI,GAAG,WAAW,CAAC,SAAS,CAC1B,kBAAkB,EAClB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EACf,IAAI,CACL,CAAC,IAAI,CAAC;;AAEP,QAAI,QAAQ,EAAE;AACZ,UAAI,GAAG,WAAW,CAAC,SAAS,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC;KACzD;;AAED,WAAO,IAAI,CAAC;GACb;;AAED,UAAQ,CAAC,YAAY,EAAE,MAAM;AAC3B,MAAE,CAAC,qBAAqB,EAAE,MAAM;;;AAG9B,UAAI,IAAI,GAAG,SAAS,CAAC,CACnB,gBAAgB,EAChB,qBAAqB,EACrB,oBAAoB,EACpB,aAAa,CACd,CAAC,CAAC;AACH,UAAI,CAAC,IAAI,CAAC,CAAC;AACX,YAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACvB,CAAC,CAAC;;AAEH,MAAE,CAAC,+BAA+B,EAAE,MAAM;AACxC,UAAI,IAAI,GAAG,SAAS,CAAC,CACnB,4CAA4C,EAC5C,uBAAuB,CACxB,CAAC,CAAC;AACH,UAAI,CAAC,IAAI,CAAC,CAAC;AACX,YAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC9B,CAAC,CAAC;;AAEH,MAAE,CAAC,+BAA+B,EAAE,MAAM;AACxC,UAAI,IAAI,GAAG,SAAS,CAAC,CACnB,2BAA2B,EAC3B,uBAAuB,CACxB,CAAC,CAAC;AACH,UAAI,CAAC,IAAI,CAAC,CAAC;AACX,YAAM,CAAC,WAAW,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC9B,CAAC,CAAC;;AAEH,MAAE,CAAC,sBAAsB,EAAE,MAAM;AAC/B,UAAI,IAAI,GAAG,SAAS,CAAC,CACnB,uBAAuB,EACvB,qBAAqB,CACtB,CAAC,CAAC;AACH,YAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAChB,uBAAuB,EACvB,qBAAqB,CACtB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KACf,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAC,CAAC","file":"type-alias-syntax-test-compiled.js","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/*jshint evil:true*/\n\nrequire('mock-modules').autoMockOff();\n\ndescribe('static type syntax syntax', function() {\n  var flowSyntaxVisitors;\n  var jstransform;\n\n  beforeEach(function() {\n    require('mock-modules').dumpCache();\n\n    flowSyntaxVisitors = require('../type-syntax.js').visitorList;\n    jstransform = require('jstransform');\n  });\n\n  function transform(code, visitors) {\n    var opts = {sourceType: 'nonStrictModule'};\n    code = jstransform.transform(\n      flowSyntaxVisitors,\n      code.join('\\n'),\n      opts\n    ).code;\n\n    if (visitors) {\n      code = jstransform.transform(visitors, code, opts).code;\n    }\n\n    return code;\n  }\n\n  describe('type alias', () => {\n    it('strips type aliases', () => {\n      /*global type*/\n      /*global sanityCheck*/\n      var code = transform([\n        'var type = 42;',\n        'type FBID = number;',\n        'type type = string',\n        'type += 42;'\n      ]);\n      eval(code);\n      expect(type).toBe(84);\n    });\n\n    it('strips import-type statements', () => {\n      var code = transform([\n        'import type DefaultExport from \"MyModule\";',\n        'var sanityCheck = 42;',\n      ]);\n      eval(code);\n      expect(sanityCheck).toBe(42);\n    });\n\n    it('strips export-type statements', () => {\n      var code = transform([\n        'export type foo = number;',\n        'var sanityCheck = 42;',\n      ]);\n      eval(code);\n      expect(sanityCheck).toBe(42);\n    });\n\n    it('catches up correctly', () => {\n      var code = transform([\n        \"var X = require('X');\",\n        'type FBID = number;',\n      ]);\n      expect(code).toBe([\n        \"var X = require('X');\",\n        '                   '\n      ].join('\\n'));\n    });\n  });\n});\n"]}