{"version":3,"sources":["type-function-syntax-test.js"],"names":[],"mappings":";;;;;;;;;;;;AAYA,OAAO,CAAC,cAAc,CAAC,CAAC,WAAW,EAAE,CAAC;;AAEtC,QAAQ,CAAC,6BAA6B,EAAE,YAAW;AACjD,MAAI,kBAAkB,CAAC;AACvB,MAAI,WAAW,CAAC;;AAEhB,YAAU,CAAC,YAAW;AACpB,WAAO,CAAC,cAAc,CAAC,CAAC,SAAS,EAAE,CAAC;;AAEpC,sBAAkB,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC,WAAW,CAAC;AAC9D,eAAW,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;GACtC,CAAC,CAAC;;AAEH,WAAS,SAAS,CAAC,IAAI,EAAE,QAAQ,EAAE;AACjC,QAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;;;AAAC,AAGvB,QAAI,GAAG,WAAW,CAAC,SAAS,CAC1B,kBAAkB,EAClB,IAAI,CACL,CAAC,IAAI,CAAC;;AAEP,QAAI,QAAQ,EAAE;AACZ,UAAI,GAAG,WAAW,CAAC,SAAS,CAC1B,QAAQ,EACR,IAAI,CACL,CAAC,IAAI,CAAC;KACR;AACD,WAAO,IAAI,CAAC;GACb;;AAED,UAAQ,CAAC,wBAAwB,EAAE,MAAM;AACvC,MAAE,CAAC,gCAAgC,EAAE,MAAM;AACzC,UAAI,IAAI,GAAG,SAAS,CAAC,CACnB,8BAA8B,EAC9B,kBAAkB,EAClB,GAAG,EACH,EAAE,EACF,oCAAoC,EACpC,kBAAkB,EAClB,GAAG,CACJ,CAAC,CAAC;AACH,UAAI,CAAC,IAAI,CAAC,CAAC;AACX,YAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACzB,YAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC1B,CAAC,CAAC;;AAEH,MAAE,CAAC,mCAAmC,EAAE,MAAM;AAC5C,UAAI,IAAI,GAAG,SAAS,CAAC,CACnB,8CAA8C,EAC9C,4BAA4B,EAC5B,GAAG,EACH,EAAE,EACF,oDAAoD,EACpD,4BAA4B,EAC5B,GAAG,CACJ,CAAC,CAAC;AACH,UAAI,CAAC,IAAI,CAAC,CAAC;AACX,YAAM,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;AAC1C,YAAM,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;KAC3C,CAAC,CAAC;;AAEH,MAAE,CAAC,uCAAuC,EAAE,MAAM;AAChD,UAAI,IAAI,GAAG,SAAS,CAAC,CACnB,4CAA4C,EAC5C,kBAAkB,EAClB,GAAG,EACH,EAAE,EACF,kDAAkD,EAClD,kBAAkB,EAClB,GAAG,CACJ,CAAC,CAAC;AACH,UAAI,CAAC,IAAI,CAAC,CAAC;;AAEX,UAAI,QAAQ,GAAG,UAAS,KAAK,EAAE;AAC7B,eAAO,KAAK,GAAG,EAAE,GAAG,CAAC,CAAC;OACvB,CAAC;AACF,YAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACrC,YAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KACtC,CAAC,CAAC;;AAEH,MAAE,CAAC,sDAAsD,EAAE,MAAM;AAC/D,UAAI,IAAI,GAAG,SAAS,CAAC,CACnB,wCAAwC,EACxC,4BAA4B,EAC5B,GAAG,EACH,EAAE,EACF,8CAA8C,EAC9C,4BAA4B,EAC5B,GAAG,CACJ,CAAC,CAAC;AACH,UAAI,CAAC,IAAI,CAAC,CAAC;AACX,YAAM,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;AAC1C,YAAM,CAAC,GAAG,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;KAC3C,CAAC,CAAC;;AAEH,MAAE,CAAC,iDAAiD,EAAE,MAAM;AAC1D,UAAI,iBAAiB,GACnB,OAAO,CAAC,4BAA4B,CAAC,CAAC,WAAW,CAAC;;AAEpD,UAAI,IAAI,GAAG,SAAS,CAAC,CACnB,yCAAyC,EACzC,0BAA0B,EAC1B,GAAG,EACH,EAAE,EACF,+CAA+C,EAC/C,0BAA0B,EAC1B,GAAG,CACJ,EAAE,iBAAiB,CAAC,CAAC;AACtB,UAAI,CAAC,IAAI,CAAC,CAAC;AACX,YAAM,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AAChD,YAAM,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;KACjD,CAAC,CAAC;;AAEH,MAAE,CAAC,iCAAiC,EAAE,MAAM;AAC1C,UAAI,iBAAiB,GACnB,OAAO,CAAC,4BAA4B,CAAC,CAAC,WAAW,CAAC;;AAEpD,UAAI,IAAI,GAAG,SAAS,CAAC,CACnB,wDAAwD,EACxD,0BAA0B,EAC1B,GAAG,EACH,EAAE,EACF,8DAA8D,EAC9D,0BAA0B,EAC1B,GAAG,CACJ,EAAE,iBAAiB,CAAC,CAAC;AACtB,UAAI,CAAC,IAAI,CAAC,CAAC;AACX,YAAM,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AAChD,YAAM,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;KACjD,CAAC,CAAC;;AAEH,MAAE,CAAC,sDAAsD,EAAE,MAAM;AAC/D,UAAI,IAAI,GAAG,SAAS,CAAC,CACnB,mCAAmC,EACnC,cAAc,EACd,GAAG,CACJ,CAAC,CAAC;AACH,UAAI,CAAC,IAAI,CAAC,CAAC;AACX,YAAM,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACxB,CAAC,CAAC;;AAEH,MAAE,CAAC,mDAAmD,EAAE,MAAM;AAC5D,UAAI,IAAI,GAAG,SAAS,CAAC,CACnB,mEAAmE,EACnE,cAAc,EACd,GAAG,CACJ,CAAC,CAAC;AACH,UAAI,CAAC,IAAI,CAAC,CAAC;AACX,YAAM,CAAC,GAAG,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACxB,CAAC,CAAC;GACJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,yBAAyB,EAAE,MAAM;AACxC,MAAE,CAAC,8BAA8B,EAAE,MAAM;AACvC,UAAI,IAAI,GAAG,SAAS,CAAC,CACnB,6CAA6C,EAC7C,yCAAyC,EACzC,GAAG,EACH,EAAE,EACF,mDAAmD,EACnD,yCAAyC,EACzC,GAAG,CACJ,CAAC,CAAC;AACH,UAAI,CAAC,IAAI,CAAC,CAAC;AACX,YAAM,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AAC3B,YAAM,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC5B,CAAC,CAAC;;AAEH,MAAE,CAAC,0BAA0B,EAAE,MAAM;AACnC,UAAI,IAAI,GAAG,SAAS,CAAC,CACnB,8BAA8B,EAC9B,aAAa,EACb,GAAG,EACH,EAAE,EACF,oCAAoC,EACpC,aAAa,EACb,GAAG,CACJ,CAAC,CAAC;AACH,UAAI,CAAC,IAAI,CAAC,CAAC;;AAEX,UAAI,OAAO,GAAG,CAAC,CAAC;AAChB,eAAS,MAAM,GAAG;AAChB,eAAO,EAAE,CAAC;OACX;;AAED,SAAG,CAAC,MAAM,CAAC,CAAC;AACZ,YAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;AAExB,SAAG,CAAC,MAAM,CAAC,CAAC;AACZ,YAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACzB,CAAC,CAAC;;AAEH,MAAE,CAAC,2CAA2C,EAAE,MAAM;AACpD,UAAI,IAAI,GAAG,SAAS,CAClB,CACE,uCAAuC,EACvC,aAAa,EACb,GAAG,EACH,EAAE,EACF,6CAA6C,EAC7C,aAAa,EACb,GAAG,CACJ,EACD,OAAO,CAAC,4BAA4B,CAAC,CAAC,WAAW,CAClD,CAAC;AACF,UAAI,CAAC,IAAI,CAAC,CAAC;;AAEX,UAAI,OAAO,GAAG,CAAC,CAAC;AAChB,eAAS,MAAM,GAAG;AAChB,eAAO,EAAE,CAAC;OACX;;AAED,SAAG,CAAC,MAAM,CAAC,CAAC;AACZ,YAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;;AAExB,SAAG,CAAC,MAAM,CAAC,CAAC;AACZ,YAAM,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACzB,CAAC,CAAC;;AAEH,MAAE,CAAC,4BAA4B,EAAE,MAAM;AACrC,UAAI,IAAI,GAAG,SAAS,CAAC,CACnB,8CAA8C,EAC9C,yBAAyB,EACzB,GAAG,EACH,EAAE,EACF,oDAAoD,EACpD,yBAAyB,EACzB,GAAG,CACJ,CAAC,CAAC;;AAEH,UAAI,CAAC,IAAI,CAAC,CAAC;AACX,YAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,EAAE,EAAC,CAAC,CAAC;AACnC,YAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,EAAC,GAAG,EAAE,EAAE,EAAC,CAAC,CAAC;KACpC,CAAC,CAAC;GACJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,4BAA4B,EAAE,MAAM;AAC3C,MAAE,CAAC,oCAAoC,EAAE,MAAM;AAC7C,UAAI,IAAI,GAAG,SAAS,CAAC,CACnB,2BAA2B,EAC3B,kBAAkB,EAClB,GAAG,EACH,EAAE,EACF,iCAAiC,EACjC,kBAAkB,EAClB,GAAG,CACJ,CAAC,CAAC;AACH,UAAI,CAAC,IAAI,CAAC,CAAC;AACX,YAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACzB,YAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC1B,CAAC,CAAC;;AAEH,MAAE,CAAC,yCAAyC,EAAE,MAAM;AAClD,UAAI,iBAAiB,GACnB,OAAO,CAAC,4BAA4B,CAAC,CAAC,WAAW,CAAC;;AAEpD,UAAI,IAAI,GAAG,SAAS,CAAC,CACnB,8BAA8B,EAC9B,kBAAkB,EAClB,GAAG,EACH,EAAE,EACF,mCAAmC,EACnC,kBAAkB,EAClB,GAAG,CACJ,EAAE,iBAAiB,CAAC,CAAC;AACtB,UAAI,CAAC,IAAI,CAAC,CAAC;AACX,YAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACzB,YAAM,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC1B,CAAC,CAAC;GACJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,iBAAiB,EAAE,MAAM;;;;;GAKjC,CAAC,CAAC;CACJ,CAAC,CAAC","file":"type-function-syntax-test-compiled.js","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/*jshint evil:true*/\n/*jshint -W117*/\n\nrequire('mock-modules').autoMockOff();\n\ndescribe('static type function syntax', function() {\n  var flowSyntaxVisitors;\n  var jstransform;\n\n  beforeEach(function() {\n    require('mock-modules').dumpCache();\n\n    flowSyntaxVisitors = require('../type-syntax.js').visitorList;\n    jstransform = require('jstransform');\n  });\n\n  function transform(code, visitors) {\n    code = code.join('\\n');\n\n    // We run the flow transform first\n    code = jstransform.transform(\n      flowSyntaxVisitors,\n      code\n    ).code;\n\n    if (visitors) {\n      code = jstransform.transform(\n        visitors,\n        code\n      ).code;\n    }\n    return code;\n  }\n\n  describe('param type annotations', () => {\n    it('strips single param annotation', () => {\n      var code = transform([\n        'function foo(param1: bool) {',\n        '  return param1;',\n        '}',\n        '',\n        'var bar = function(param1: bool) {',\n        '  return param1;',\n        '}'\n      ]);\n      eval(code);\n      expect(foo(42)).toBe(42);\n      expect(bar(42)).toBe(42);\n    });\n\n    it('strips multiple param annotations', () => {\n      var code = transform([\n        'function foo(param1: bool, param2: number) {',\n        '  return [param1, param2];',\n        '}',\n        '',\n        'var bar = function(param1: bool, param2: number) {',\n        '  return [param1, param2];',\n        '}'\n      ]);\n      eval(code);\n      expect(foo(true, 42)).toEqual([true, 42]);\n      expect(bar(true, 42)).toEqual([true, 42]);\n    });\n\n    it('strips higher-order param annotations', () => {\n      var code = transform([\n        'function foo(param1: (_:bool) => number) {',\n        '  return param1;',\n        '}',\n        '',\n        'var bar = function(param1: (_:bool) => number) {',\n        '  return param1;',\n        '}'\n      ]);\n      eval(code);\n\n      var callback = function(param) {\n        return param ? 42 : 0;\n      };\n      expect(foo(callback)).toBe(callback);\n      expect(bar(callback)).toBe(callback);\n    });\n\n    it('strips annotated params next to non-annotated params', () => {\n      var code = transform([\n        'function foo(param1, param2: number) {',\n        '  return [param1, param2];',\n        '}',\n        '',\n        'var bar = function(param1, param2: number) {',\n        '  return [param1, param2];',\n        '}'\n      ]);\n      eval(code);\n      expect(foo('p1', 42)).toEqual(['p1', 42]);\n      expect(bar('p1', 42)).toEqual(['p1', 42]);\n    });\n\n    it('strips annotated params before a rest parameter', () => {\n      var restParamVisitors =\n        require('../es6-rest-param-visitors').visitorList;\n\n      var code = transform([\n        'function foo(param1: number, ...args) {',\n        '  return [param1, args];',\n        '}',\n        '',\n        'var bar = function(param1: number, ...args) {',\n        '  return [param1, args];',\n        '}'\n      ], restParamVisitors);\n      eval(code);\n      expect(foo(42, 43, 44)).toEqual([42, [43, 44]]);\n      expect(bar(42, 43, 44)).toEqual([42, [43, 44]]);\n    });\n\n    it('strips annotated rest parameter', () => {\n      var restParamVisitors =\n        require('../es6-rest-param-visitors').visitorList;\n\n      var code = transform([\n        'function foo(param1: number, ...args: Array<number>) {',\n        '  return [param1, args];',\n        '}',\n        '',\n        'var bar = function(param1: number, ...args: Array<number>) {',\n        '  return [param1, args];',\n        '}'\n      ], restParamVisitors);\n      eval(code);\n      expect(foo(42, 43, 44)).toEqual([42, [43, 44]]);\n      expect(bar(42, 43, 44)).toEqual([42, [43, 44]]);\n    });\n\n    it('strips optional param marker without type annotation', () => {\n      var code = transform([\n        'function foo(param1?, param2 ?) {',\n        '  return 42;',\n        '}'\n      ]);\n      eval(code);\n      expect(foo()).toBe(42);\n    });\n\n    it('strips optional param marker with type annotation', () => {\n      var code = transform([\n        'function foo(param1?:number, param2 ?: string, param3 ? : bool) {',\n        '  return 42;',\n        '}'\n      ]);\n      eval(code);\n      expect(foo()).toBe(42);\n    });\n  });\n\n  describe('return type annotations', () => {\n    it('strips function return types', () => {\n      var code = transform([\n        'function foo(param1:number): () => number {',\n        '  return function() { return param1; };',\n        '}',\n        '',\n        'var bar = function(param1:number): () => number {',\n        '  return function() { return param1; };',\n        '}'\n      ]);\n      eval(code);\n      expect(foo(42)()).toBe(42);\n      expect(bar(42)()).toBe(42);\n    });\n\n    it('strips void return types', () => {\n      var code = transform([\n        'function foo(param1): void {',\n        '  param1();',\n        '}',\n        '',\n        'var bar = function(param1): void {',\n        '  param1();',\n        '}'\n      ]);\n      eval(code);\n\n      var counter = 0;\n      function testFn() {\n        counter++;\n      }\n\n      foo(testFn);\n      expect(counter).toBe(1);\n\n      bar(testFn);\n      expect(counter).toBe(2);\n    });\n\n    it('strips void return types with rest params', () => {\n      var code = transform(\n        [\n          'function foo(param1, ...rest): void {',\n          '  param1();',\n          '}',\n          '',\n          'var bar = function(param1, ...rest): void {',\n          '  param1();',\n          '}'\n        ],\n        require('../es6-rest-param-visitors').visitorList\n      );\n      eval(code);\n\n      var counter = 0;\n      function testFn() {\n        counter++;\n      }\n\n      foo(testFn);\n      expect(counter).toBe(1);\n\n      bar(testFn);\n      expect(counter).toBe(2);\n    });\n\n    it('strips object return types', () => {\n      var code = transform([\n        'function foo(param1:number): {num: number} {',\n        '  return {num: param1};',\n        '}',\n        '',\n        'var bar = function(param1:number): {num: number} {',\n        '  return {num: param1};',\n        '}'\n      ]);\n\n      eval(code);\n      expect(foo(42)).toEqual({num: 42});\n      expect(bar(42)).toEqual({num: 42});\n    });\n  });\n\n  describe('parametric type annotation', () => {\n    it('strips parametric type annotations', () => {\n      var code = transform([\n        'function foo<T>(param1) {',\n        '  return param1;',\n        '}',\n        '',\n        'var bar = function<T>(param1) {',\n        '  return param1;',\n        '}',\n      ]);\n      eval(code);\n      expect(foo(42)).toBe(42);\n      expect(bar(42)).toBe(42);\n    });\n\n    it('strips multi-parameter type annotations', () => {\n      var restParamVisitors =\n        require('../es6-rest-param-visitors').visitorList;\n\n      var code = transform([\n        'function foo<T, S>(param1) {',\n        '  return param1;',\n        '}',\n        '',\n        'var bar = function<T,S>(param1) {',\n        '  return param1;',\n        '}'\n      ], restParamVisitors);\n      eval(code);\n      expect(foo(42)).toBe(42);\n      expect(bar(42)).toBe(42);\n    });\n  });\n\n  describe('arrow functions', () => {\n    // TODO: We don't currently support arrow functions, but we should\n    //       soon! The only reason we don't now is because we don't\n    //       need it at this very moment and I'm in a rush to get the\n    //       basics in.\n  });\n});\n"]}