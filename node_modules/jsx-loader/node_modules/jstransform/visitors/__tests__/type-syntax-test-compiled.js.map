{"version":3,"sources":["type-syntax-test.js"],"names":[],"mappings":"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","file":"type-syntax-test-compiled.js","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/*jshint evil: true*/\n/*jshint loopfunc: true*/\n\nif (!!module.parent) {\n  module.exports = {\n    'TypeAnnotations': [\n      'function foo(numVal: any){}',\n      'function foo(numVal: number){}',\n      'function foo(numVal: number, strVal: string){}',\n      'function foo(numVal: number, untypedVal){}',\n      'function foo(untypedVal, numVal: number){}',\n      'function foo(nullableNum: ?number){}',\n      'function foo(callback: () => void){}',\n      'function foo(callback: () => number){}',\n      'function foo(callback: (_:bool) => number){}',\n      'function foo(callback: (_1:bool, _2:string) => number){}',\n      'function foo(callback: (_1:bool, ...foo:Array<number>) => number){}',\n      'function foo():number{}',\n      'function foo():() => void{}',\n      'function foo():(_:bool) => number{}',\n      'function foo():(_?:bool) => number{}',\n      'function foo(): {} {}',\n      'function foo<T>() {}',\n      'function foo<T: Foo>() {}',\n      'function foo<T,S>() {}',\n      'a=function<T,S>() {}',\n      'a={set fooProp(value:number){}}',\n      'a={set fooProp(value:number): void{}}',\n      'a={get fooProp(): number {}}',\n      'class Foo {set fooProp(value:number){}}',\n      'class Foo {set fooProp(value:number): void{}}',\n      'class Foo {get fooProp(): number{}}',\n      'var numVal:number;',\n      'var numVal:number = otherNumVal;',\n      'var a: {numVal: number};',\n      'var a: {numVal: number;};',\n      'var a: {numVal: number; [indexer: string]: number};',\n      'var a: ?{numVal: number};',\n      'var a: {numVal: number; strVal: string}',\n      'var a: {subObj: {strVal: string}}',\n      'var a: {subObj: ?{strVal: string}}',\n      'var a: {param1: number; param2: string}',\n      'var a: {param1: number; param2?: string}',\n      'var a: {add(x:number, ...y:Array<string>): void}',\n      'var a: { id<T>(x: T): T; }',\n      'var a:Array<number> = [1, 2, 3]',\n      'a = class Foo<T> { }',\n      'a = class Foo<T> extends Bar<T> { }',\n      'class Foo<T> {}',\n      'class Foo<T: Bar> {}',\n      'class Foo<T> extends Bar<T> { }',\n      'class Foo<T> extends mixin(Bar) { }',\n      'class Foo<T> { bar<U>():number { return 42; }}',\n      'class Foo { \"bar\"<T>() { } }',\n      'function foo(requiredParam, optParam?) {}',\n      'class Foo { prop1:string; prop2:number; }',\n      'var x : number | string = 4;',\n      'class Array { concat(items:number | string) {}; }',\n      'var x : () => number | () => string = fn;',\n      'var x: typeof Y = Y;',\n      'var x: typeof Y | number = Y;',\n      'var {x}: {x: string; } = { x: \"hello\" };',\n      'var {x}: {x: string } = { x: \"hello\" };',\n      'var [x]: Array<string> = [ \"hello\" ];',\n      'function foo({x}: { x: string; }) {}',\n      'function foo([x]: Array<string>) {}',\n      'function foo(...rest: Array<number>) {}',\n      '(function (...rest: Array<number>) {})',\n      '((...rest: Array<number>) => rest)',\n      'var a: Map<string, Array<string> >',\n      'var a: Map<string, Array<string>>',\n      'var a: number[]',\n      'var a: ?string[]',\n      'var a: Promise<bool>[]',\n      'var a:(...rest:Array<number>) => number'\n    ],\n    'Type Alias': [\n        'type FBID = number;',\n        'type Foo<T> = Bar<T>',\n    ],\n    'Interfaces': [\n        'interface A {}',\n        'interface A extends B {}',\n        'interface A<T> extends B<T>, C<T> {}',\n        'interface A { foo: () => number; }',\n        'interface Dictionary { [index: string]: string; length: number; }',\n        'class Foo implements Bar {}',\n        'class Foo extends Bar implements Bat, Man<number> {}',\n        'class Foo extends class Bar implements Bat {} {}',\n        'class Foo extends class Bar implements Bat {} implements Man {}',\n    ],\n    'Type Grouping': [\n        'var a: (number)',\n        'var a: (() => number) | () => string',\n        'var a: number & (string | bool)',\n        'var a: (typeof A)',\n    ],\n    'XJS': [\n        '<a />',\n        '<n:a n:v />',\n        '<a n:foo=\"bar\"> {value} <b><c /></b></a>',\n        '<a b={\" \"} c=\" \" d=\"&amp;\" e=\"id=1&group=2\" f=\"&#123456789\" g=\"&#123*;\" h=\"&#x;\" />',\n        '<a\\n/>',\n        '<日本語></日本語>',\n        '<AbC-def\\n  test=\"&#x0026;&#38;\">\\nbar\\nbaz\\r\\n</AbC-def>',\n        '<a b={x ? <c /> : <d />} />',\n        '<a>{}</a>',\n        '<a>{/* this is a comment */}</a>',\n        '<div>@test content</div>',\n        '<div><br />7x invalid-js-identifier</div>',\n        '<LeftRight left=<a /> right=<b>monkeys</b> />',\n        '<a.b></a.b>',\n        '<a.b.c></a.b.c>',\n        '(<div />) < x;',\n        '<div {...props} />',\n        '<div {...props} post=\"attribute\" />',\n        '<div pre=\"leading\" pre2=\"attribute\" {...props}></div>',\n        '<a>    </a>',\n    ],\n    'Call Properties': [\n        'var a : { (): number }',\n        'var a : { (): number; }',\n        'var a : { (): number; y: string; (x: string): string }',\n        'var a : { <T>(x: T): number; }',\n        'interface A { (): number; }',\n    ],\n    'String Literal Types': [\n        'function createElement(tagName: \"div\"): HTMLDivElement {}',\n        'function createElement(tagName: \\'div\\'): HTMLDivElement {}',\n    ],\n    'Qualified Generic Type': [\n        'var a : A.B',\n        'var a : A.B.C',\n        'var a : A.B<T>',\n        'var a : typeof A.B<T>',\n    ],\n    'Declare Statements': [\n        'declare var foo',\n        'declare var foo;',\n        'declare function foo(): void',\n        'declare function foo(): void;',\n        'declare function foo<T>(): void;',\n        'declare function foo(x: number, y: string): void;',\n        'declare class A {}',\n        'declare class A<T> extends B<T> { x: number }',\n        'declare class A { static foo(): number; static x : string }',\n        'declare class A { static [ indexer: number]: string }',\n        'declare class A { static () : number }',\n    ],\n    'Declare Module': [\n        'declare module A {}',\n        'declare module \"./a/b.js\" {}',\n        'declare module A { declare var x: number; }',\n        'declare module A { declare function foo(): number; }',\n        'declare module A { declare class B { foo(): number; } }',\n    ],\n    'Typecasts': [\n        '(xxx: number)',\n        '({xxx: 0, yyy: \"hey\"}: {xxx: number; yyy: string})',\n        // distinguish between function type params and typecasts\n        '((xxx) => xxx + 1: (xxx: number) => number)',\n        // parens disambiguate groups from casts\n        '((xxx: number), (yyy: string))',\n        '((xxx: any): number)',\n    ],\n  };\n} else {\n  require('mock-modules').autoMockOff();\n  var tests = require('./gen/type-syntax-test.rec.js');\n  var transform = require('../../src/jstransform').transform;\n  var visitors = require('../type-syntax').visitorList;\n\n  describe('transforms match expectations', function() {\n    Object.keys(tests).forEach(function(sectionName) {\n      var section = tests[sectionName];\n      Object.keys(section).forEach(function(testCode) {\n        it('transforms \"' + testCode + '\"', function() {\n          expect(transform(visitors, testCode).code).toBe(section[testCode].transformed);\n        });\n\n        it('evals \"' + testCode + '\"', function() {\n          var transformed = transform(visitors, testCode).code;\n          var expected = section[testCode].eval;\n\n          var evalFn = function() {\n            eval(transformed);\n          };\n\n          if (expected === 'No error') {\n            expect(evalFn).not.toThrow();\n          } else {\n            expect(evalFn).toThrow(expected);\n          }\n        });\n      });\n    });\n  });\n}\n"]}