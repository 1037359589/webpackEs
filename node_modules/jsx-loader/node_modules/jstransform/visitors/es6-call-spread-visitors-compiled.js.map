{"version":3,"sources":["es6-call-spread-visitors.js"],"names":[],"mappings":"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","file":"es6-call-spread-visitors-compiled.js","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n/*global exports:true*/\n\n/**\n * Implements ES6 call spread.\n *\n * instance.method(a, b, c, ...d)\n *\n * instance.method.apply(instance, [a, b, c].concat(d))\n *\n */\n\nvar Syntax = require('esprima-fb').Syntax;\nvar utils = require('../src/utils');\n\nfunction process(traverse, node, path, state) {\n  utils.move(node.range[0], state);\n  traverse(node, path, state);\n  utils.catchup(node.range[1], state);\n}\n\nfunction visitCallSpread(traverse, node, path, state) {\n  utils.catchup(node.range[0], state);\n\n  if (node.type === Syntax.NewExpression) {\n    // Input  = new Set(1, 2, ...list)\n    // Output = new (Function.prototype.bind.apply(Set, [null, 1, 2].concat(list)))\n    utils.append('new (Function.prototype.bind.apply(', state);\n    process(traverse, node.callee, path, state);\n  } else if (node.callee.type === Syntax.MemberExpression) {\n    // Input  = get().fn(1, 2, ...more)\n    // Output = (_ = get()).fn.apply(_, [1, 2].apply(more))\n    var tempVar = utils.injectTempVar(state);\n    utils.append('(' + tempVar + ' = ', state);\n    process(traverse, node.callee.object, path, state);\n    utils.append(')', state);\n    if (node.callee.property.type === Syntax.Identifier) {\n      utils.append('.', state);\n      process(traverse, node.callee.property, path, state);\n    } else {\n      utils.append('[', state);\n      process(traverse, node.callee.property, path, state);\n      utils.append(']', state);\n    }\n    utils.append('.apply(' + tempVar, state);\n  } else {\n    // Input  = max(1, 2, ...list)\n    // Output = max.apply(undefined, [1, 2].concat(list))\n    var needsToBeWrappedInParenthesis =\n      node.callee.type === Syntax.FunctionDeclaration ||\n      node.callee.type === Syntax.FunctionExpression;\n    if (needsToBeWrappedInParenthesis) {\n      utils.append('(', state);\n    }\n    process(traverse, node.callee, path, state);\n    if (needsToBeWrappedInParenthesis) {\n      utils.append(')', state);\n    }\n    utils.append('.apply(undefined', state);\n  }\n  utils.append(', ', state);\n\n  var args = node.arguments.slice();\n  var spread = args.pop();\n  if (args.length || node.type === Syntax.NewExpression) {\n    utils.append('[', state);\n    if (node.type === Syntax.NewExpression) {\n      utils.append('null' + (args.length ? ', ' : ''), state);\n    }\n    while (args.length) {\n      var arg = args.shift();\n      utils.move(arg.range[0], state);\n      traverse(arg, path, state);\n      if (args.length) {\n        utils.catchup(args[0].range[0], state);\n      } else {\n        utils.catchup(arg.range[1], state);\n      }\n    }\n    utils.append('].concat(', state);\n    process(traverse, spread.argument, path, state);\n    utils.append(')', state);\n  } else {\n    process(traverse, spread.argument, path, state);\n  }\n  utils.append(node.type === Syntax.NewExpression ? '))' : ')', state);\n\n  utils.move(node.range[1], state);\n  return false;\n}\n\nvisitCallSpread.test = function(node, path, state) {\n  return (\n    (\n      node.type === Syntax.CallExpression ||\n      node.type === Syntax.NewExpression\n    ) &&\n    node.arguments.length > 0 &&\n    node.arguments[node.arguments.length - 1].type === Syntax.SpreadElement\n  );\n};\n\nexports.visitorList = [\n  visitCallSpread\n];\n"]}