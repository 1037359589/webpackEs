{"version":3,"sources":["es6-object-computed-property-visitors.js"],"names":[],"mappings":"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","file":"es6-object-computed-property-visitors-compiled.js","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/*jslint node: true*/\n\nvar es6ObjectConciseMethods = require('./es6-object-concise-method-visitors');\nvar es7SpreadProperties = require('./es7-spread-property-visitors');\n\nvar Syntax = require('esprima-fb').Syntax;\nvar utils = require('../src/utils');\n\nfunction process(traverse, node, path, state) {\n  utils.catchupWhiteSpace(node.range[0], state);\n  traverse(node, path, state);\n  utils.catchup(node.range[1], state);\n}\n\n/**\n * Note: This visitor is capable of handling the following transforms too:\n * - ES7 object literal spread,\n * - ES6 object concise methods,\n * - ES6 object short notation,\n * This is because of limitations in the jstransform framework, which isn't\n * capable of feeding the output of one visitor to another. Additionally,\n * any attempt to share logic between these visitors only increases code\n * complixity. And so, we are forced to create a single complex one that\n * handles all cases.\n *\n * {alpha: 12, \\'beta\\': 34, ['gam' + 'ma']: 56} // before\n * (_={},_.alpha=12,_['beta']=34,_['gam' + 'ma']=56,_) // after\n */\nfunction es6ObjectComputedProperties(traverse, node, path, state) {\n  var obj = utils.injectTempVar(state);\n  utils.append('(' + obj + '={}', state);\n  for (var ii = 0; ii < node.properties.length; ++ii) {\n    var property = node.properties[ii];\n    utils.append(',', state);\n\n    if (property.type === Syntax.SpreadProperty) {\n      utils.append('Object.assign(' + obj, state);\n      var nextComputedPropertyIndex = ii + 1;\n      while (\n        nextComputedPropertyIndex < node.properties.length &&\n        !node.properties[nextComputedPropertyIndex].computed\n      ) {\n        nextComputedPropertyIndex += 1;\n      }\n      utils.catchupWhiteSpace(node.properties[ii].range[0], state);\n      var lastWasSpread = es7SpreadProperties.renderSpreadProperties(\n        traverse,\n        node.properties.slice(ii, nextComputedPropertyIndex),\n        path,\n        state,\n        true // previousWasSpread\n      );\n      utils.append((lastWasSpread ? '' : '}') + ')', state);\n      ii = nextComputedPropertyIndex - 1;\n      continue;\n\n    // short notation / dot access\n    } else if (\n      property.type === Syntax.Property &&\n      property.key.type === Syntax.Identifier &&\n      !property.computed\n    ) {\n      utils.append(obj + '.' + property.key.name + '=', state);\n\n    // literals / computed properties\n    } else if (property.type === Syntax.Property) {\n      utils.append(obj + '[', state);\n      process(traverse, property.key, path, state);\n      utils.append(']=', state);\n    }\n\n    // concise methods\n    if (property.method === true) {\n      utils.catchupWhiteSpace(property.key.range[1], state);\n      es6ObjectConciseMethods.renderConciseMethod(traverse, property, path, state);\n    }\n    process(traverse, property.value, path, state);\n  }\n  utils.catchupWhiteSpace(node.range[1], state);\n  utils.append(',' + obj + ')', state);\n  return false;\n}\nes6ObjectComputedProperties.test = function(node, path, state) {\n  if (node.type !== Syntax.ObjectExpression) {\n    return false;\n  }\n  for (var ii = 0; ii < node.properties.length; ++ii) {\n    if (node.properties[ii].computed) {\n      return true;\n    }\n  }\n  return false;\n};\n\nexports.visitorList = [\n  es6ObjectComputedProperties,\n];\n"]}