{"version":3,"sources":["es7-trailing-comma-visitors.js"],"names":[],"mappings":"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","file":"es7-trailing-comma-visitors-compiled.js","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nvar Syntax = require('esprima-fb').Syntax;\nvar utils = require('../src/utils');\n\n/**\n * Strips trailing commas from function calls. Transforms:\n *\n * foo('bar',)\n *\n * into:\n *\n * foo('bar')\n */\n\nfunction visitFunctionCallArguments(traverse, node, path, state) {\n\n  utils.catchup(node.callee.range[0], state);\n  traverse(node.callee, [node].concat(path), state);\n\n  var args = node['arguments'];\n  for (var index = 0; index < args.length; ++index) {\n    utils.catchup(args[index].range[0], state);\n    traverse(args[index], [node].concat(path), state);\n    utils.catchup(args[index].range[1], state);\n  }\n\n  // delete first comma between the last argument and the closing parenthesis\n  utils.catchup(node.range[1], state, function(value) {\n    return value.replace(\",\", '');\n  });\n\n  return false;\n}\n\nvisitFunctionCallArguments.test = function(node, path, state) {\n  return (\n    node.type === Syntax.CallExpression ||\n    node.type === Syntax.NewExpression\n  ) && (\n    node['arguments'].length > 0\n  );\n};\n\n/**\n * Strips trailing commas from function expressions / function declarations /\n * method calls. Transforms:\n *\n * var fnExp = function(bar,) { ... };\n * function fnDec(bar,) { ... };\n * class Test { foo(bar, ) { ... } };\n *\n * into:\n *\n * var fnExp = function(bar) { ... };\n * function fnDec(bar) { ... };\n * class Test { foo(bar) { ... } };\n\n */\n\nfunction visitFunctionDefinitionArguments(traverse, node, path, state) {\n  var end = node.range[1];\n  if (node.type === Syntax.MethodDefinition) {\n    node = node.value;\n  }\n  for (var index = 0; index < node.params.length; ++index) {\n    utils.catchup(node.params[index].range[0], state);\n    traverse(node.params[index], [node].concat(path), state);\n    utils.catchup(node.params[index].range[1], state);\n  }\n\n  // delete first comma between the last argument and the closing parenthesis\n  utils.catchup(node.body.range[0], state, function(value) {\n    var commaIndex = value.substr(0, value.indexOf(\")\")).indexOf(\",\");\n    return commaIndex > -1 ? value.replace(/,/, '') : value;\n  });\n  traverse(node.body, [node].concat(path), state);\n  utils.catchup(end, state);\n  return false;\n}\n\nvisitFunctionDefinitionArguments.test = function(node, path, state) {\n  return (\n    node.type === Syntax.FunctionExpression ||\n    node.type === Syntax.FunctionDeclaration ||\n    node.type === Syntax.MethodDefinition\n  ) && (\n    node.params && node.params.length > 0 || // function expression/declaration\n    node.value && node.value.params.length > 0 // method definition\n  );\n};\n\nexports.visitorList = [\n  visitFunctionCallArguments,\n  visitFunctionDefinitionArguments,\n];\n"]}