{"version":3,"sources":["type-syntax.js"],"names":[],"mappings":";;;;;;;;;AASA,IAAI,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC;AACpC,IAAI,KAAK,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;;AAEpC,IAAI,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC;;AAE5B,SAAS,eAAe,CAAC,IAAI,EAAE;AAC7B,SAAO,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC,mBAAmB,IACrC,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC,kBAAkB,IACvC,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC,uBAAuB,CAAC;CACxD;;AAED,SAAS,kBAAkB,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AACvD,OAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AACpC,OAAK,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AAC5C,SAAO,KAAK,CAAC;CACd;AACD,kBAAkB,CAAC,IAAI,GAAG,UAAS,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AACpD,SAAO,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC,aAAa,CAAC;CAC3C,CAAC;;AAEF,SAAS,cAAc,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AACnD,OAAK,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AAC5C,SAAO,KAAK,CAAC;CACd;AACD,cAAc,CAAC,IAAI,GAAG,UAAS,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AAChD,SAAO,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC,SAAS,CAAC;CACvC,CAAC;;AAEF,SAAS,aAAa,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AAClD,MAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,UAAQ,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AACvC,MAAI,CAAC,KAAK,EAAE,CAAC;;AAEb,OAAK,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AACnD,OAAK,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AAC3D,SAAO,KAAK,CAAC;CACd;AACD,aAAa,CAAC,IAAI,GAAG,UAAS,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AAC/C,SAAO,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC,kBAAkB,CAAC;CAChD,CAAC;;AAEF,SAAS,yBAAyB,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AAC9D,OAAK,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AAC5C,SAAO,KAAK,CAAC;CACd;AACD,yBAAyB,CAAC,IAAI,GAAG,UAAS,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AAC3D,SAAO,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC,oBAAoB,CAAC;CAClD,CAAC;;AAEF,SAAS,YAAY,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AACjD,OAAK,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AAC5C,SAAO,KAAK,CAAC;CACd;AACD,YAAY,CAAC,IAAI,GAAG,UAAS,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AAC9C,UAAQ,IAAI,CAAC,IAAI;AACf,SAAK,MAAM,CAAC,eAAe,CAAC;AAC5B,SAAK,MAAM,CAAC,eAAe,CAAC;AAC5B,SAAK,MAAM,CAAC,YAAY,CAAC;AACzB,SAAK,MAAM,CAAC,aAAa;AACvB,aAAO,IAAI,CAAC;AAAA,GACf;AACD,SAAO,KAAK,CAAC;CACd,CAAC;;AAEF,SAAS,iCAAiC,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AACtE,OAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AACpC,OAAK,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AAC5C,SAAO,KAAK,CAAC;CACd;AACD,iCAAiC,CAAC,IAAI,GAAG,UAAS,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AACnE,SAAO,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC,wBAAwB,IAC1C,IAAI,CAAC,CAAC,CAAC,IACP,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IACxB,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC;CAC3C,CAAC;;AAEF,SAAS,6BAA6B,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AAClE,OAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AACpC,OAAK,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AAC5C,SAAO,KAAK,CAAC;CACd;AACD,6BAA6B,CAAC,IAAI,GAAG,UAAS,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AAC/D,SAAO,IAAI,CAAC,CAAC,CAAC,IAAI,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;CAC3E,CAAC;;AAEF,SAAS,wCAAwC,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AAC7E,OAAK,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;AACvD,OAAK,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AAC5C,SAAO,KAAK,CAAC;CACd;AACD,wCAAwC,CAAC,IAAI,GAAG,UAAS,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AAC1E,SAAO,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC,UAAU,IAC5B,IAAI,CAAC,QAAQ,IACb,IAAI,CAAC,CAAC,CAAC,IACP,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;CACpC,CAAC;;AAEF,SAAS,4BAA4B,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AACjE,OAAK,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AACnD,OAAK,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AAC3D,SAAO,KAAK,CAAC;CACd;AACD,4BAA4B,CAAC,IAAI,GAAG,UAAS,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AAC9D,SAAO,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC,UAAU,IAAI,IAAI,CAAC,cAAc,CAAC;CAC/D,CAAC;;AAEF,SAAS,sCAAsC,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AAC3E,OAAK,CAAC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AACnD,OAAK,CAAC,eAAe,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AAC3D,SAAO,KAAK,CAAC;CACd;AACD,sCAAsC,CAAC,IAAI,GAAG,UAAS,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AACxE,MAAI,SAAS,GAAG,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC,aAAa,IACjC,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC,YAAY,CAAC;AACnD,SAAO,SAAS,IAAI,IAAI,CAAC,cAAc,CAAC;CACzC;;;;;;;;;;;;;AAAC,AAaF,SAAS,WAAW,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AAChD,MAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;AACnB,UAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;;AAEhC,MAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACzB,UAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AACzC,MAAI,CAAC,KAAK,CAAC,IAAI,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AAC1D,MAAI,CAAC,KAAK,CAAC,UAAU,IAAI,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;AACtE,UAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC;;AAEvC,MAAI,CAAC,KAAK,EAAE,CAAC;;AAEb,MAAI,CAAC,KAAK,EAAE,CAAC;AACb,SAAO,KAAK,CAAC;CACd;;AAED,WAAW,CAAC,IAAI,GAAG,UAAS,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AAC7C,SAAO,AAAC,IAAI,CAAC,IAAI,KAAK,UAAU,KAAK,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,IAAI,IAAI,CAAC,IAAI,KAAK,KAAK,CAAA,AAAC,IACvF,IAAI,CAAC,IAAI,KAAK,kBAAkB,AAAC,CAAC;CAC3C,CAAC;;AAEF,SAAS,eAAe,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AACpD,OAAK,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AAC5C,SAAO,KAAK,CAAC;CACd;AACD,eAAe,CAAC,IAAI,GAAG,UAAS,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AACjD,SAAO,IAAI,CAAC,IAAI,KAAK,mBAAmB,KAC7B,IAAI,CAAC,UAAU,KAAK,MAAM,IAAI,IAAI,CAAC,UAAU,KAAK,QAAQ,CAAA,AAAC,CAAC;CACxE,CAAC;;AAEF,SAAS,eAAe,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AACpD,OAAK,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;CAC7C;AACD,eAAe,CAAC,IAAI,GAAG,UAAS,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AACjD,SAAO,IAAI,CAAC,IAAI,KAAK,mBAAmB,IAC9B,IAAI,CAAC,WAAW,CAAC,IAAI,KAAK,WAAW,CAAC;CACjD,CAAC;;AAEF,OAAO,CAAC,WAAW,GAAG,CACpB,kBAAkB,EAClB,YAAY,EACZ,eAAe,EACf,eAAe,EACf,yBAAyB,EACzB,iCAAiC,EACjC,6BAA6B,EAC7B,WAAW,EACX,wCAAwC,EACxC,cAAc,EACd,aAAa,EACb,4BAA4B,EAC5B,sCAAsC,CACvC,CAAC","file":"type-syntax-compiled.js","sourcesContent":["/**\n * Copyright 2013-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\nvar esprima = require('esprima-fb');\nvar utils = require('../src/utils');\n\nvar Syntax = esprima.Syntax;\n\nfunction _isFunctionNode(node) {\n  return node.type === Syntax.FunctionDeclaration\n         || node.type === Syntax.FunctionExpression\n         || node.type === Syntax.ArrowFunctionExpression;\n}\n\nfunction visitClassProperty(traverse, node, path, state) {\n  utils.catchup(node.range[0], state);\n  utils.catchupWhiteOut(node.range[1], state);\n  return false;\n}\nvisitClassProperty.test = function(node, path, state) {\n  return node.type === Syntax.ClassProperty;\n};\n\nfunction visitTypeAlias(traverse, node, path, state) {\n  utils.catchupWhiteOut(node.range[1], state);\n  return false;\n}\nvisitTypeAlias.test = function(node, path, state) {\n  return node.type === Syntax.TypeAlias;\n};\n\nfunction visitTypeCast(traverse, node, path, state) {\n  path.unshift(node);\n  traverse(node.expression, path, state);\n  path.shift();\n\n  utils.catchup(node.typeAnnotation.range[0], state);\n  utils.catchupWhiteOut(node.typeAnnotation.range[1], state);\n  return false;\n}\nvisitTypeCast.test = function(node, path, state) {\n  return node.type === Syntax.TypeCastExpression;\n};\n\nfunction visitInterfaceDeclaration(traverse, node, path, state) {\n  utils.catchupWhiteOut(node.range[1], state);\n  return false;\n}\nvisitInterfaceDeclaration.test = function(node, path, state) {\n  return node.type === Syntax.InterfaceDeclaration;\n};\n\nfunction visitDeclare(traverse, node, path, state) {\n  utils.catchupWhiteOut(node.range[1], state);\n  return false;\n}\nvisitDeclare.test = function(node, path, state) {\n  switch (node.type) {\n    case Syntax.DeclareVariable:\n    case Syntax.DeclareFunction:\n    case Syntax.DeclareClass:\n    case Syntax.DeclareModule:\n      return true;\n  }\n  return false;\n};\n\nfunction visitFunctionParametricAnnotation(traverse, node, path, state) {\n  utils.catchup(node.range[0], state);\n  utils.catchupWhiteOut(node.range[1], state);\n  return false;\n}\nvisitFunctionParametricAnnotation.test = function(node, path, state) {\n  return node.type === Syntax.TypeParameterDeclaration\n         && path[0]\n         && _isFunctionNode(path[0])\n         && node === path[0].typeParameters;\n};\n\nfunction visitFunctionReturnAnnotation(traverse, node, path, state) {\n  utils.catchup(node.range[0], state);\n  utils.catchupWhiteOut(node.range[1], state);\n  return false;\n}\nvisitFunctionReturnAnnotation.test = function(node, path, state) {\n  return path[0] && _isFunctionNode(path[0]) && node === path[0].returnType;\n};\n\nfunction visitOptionalFunctionParameterAnnotation(traverse, node, path, state) {\n  utils.catchup(node.range[0] + node.name.length, state);\n  utils.catchupWhiteOut(node.range[1], state);\n  return false;\n}\nvisitOptionalFunctionParameterAnnotation.test = function(node, path, state) {\n  return node.type === Syntax.Identifier\n         && node.optional\n         && path[0]\n         && _isFunctionNode(path[0]);\n};\n\nfunction visitTypeAnnotatedIdentifier(traverse, node, path, state) {\n  utils.catchup(node.typeAnnotation.range[0], state);\n  utils.catchupWhiteOut(node.typeAnnotation.range[1], state);\n  return false;\n}\nvisitTypeAnnotatedIdentifier.test = function(node, path, state) {\n  return node.type === Syntax.Identifier && node.typeAnnotation;\n};\n\nfunction visitTypeAnnotatedObjectOrArrayPattern(traverse, node, path, state) {\n  utils.catchup(node.typeAnnotation.range[0], state);\n  utils.catchupWhiteOut(node.typeAnnotation.range[1], state);\n  return false;\n}\nvisitTypeAnnotatedObjectOrArrayPattern.test = function(node, path, state) {\n  var rightType = node.type === Syntax.ObjectPattern\n                || node.type === Syntax.ArrayPattern;\n  return rightType && node.typeAnnotation;\n};\n\n/**\n * Methods cause trouble, since esprima parses them as a key/value pair, where\n * the location of the value starts at the method body. For example\n * { bar(x:number,...y:Array<number>):number {} }\n * is parsed as\n * { bar: function(x: number, ...y:Array<number>): number {} }\n * except that the location of the FunctionExpression value is 40-something,\n * which is the location of the function body. This means that by the time we\n * visit the params, rest param, and return type organically, we've already\n * catchup()'d passed them.\n */\nfunction visitMethod(traverse, node, path, state) {\n  path.unshift(node);\n  traverse(node.key, path, state);\n\n  path.unshift(node.value);\n  traverse(node.value.params, path, state);\n  node.value.rest && traverse(node.value.rest, path, state);\n  node.value.returnType && traverse(node.value.returnType, path, state);\n  traverse(node.value.body, path, state);\n\n  path.shift();\n\n  path.shift();\n  return false;\n}\n\nvisitMethod.test = function(node, path, state) {\n  return (node.type === \"Property\" && (node.method || node.kind === \"set\" || node.kind === \"get\"))\n      || (node.type === \"MethodDefinition\");\n};\n\nfunction visitImportType(traverse, node, path, state) {\n  utils.catchupWhiteOut(node.range[1], state);\n  return false;\n}\nvisitImportType.test = function(node, path, state) {\n  return node.type === 'ImportDeclaration'\n         && (node.importKind === 'type' || node.importKind === 'typeof');\n};\n\nfunction visitExportType(traverse, node, path, state) {\n  utils.catchupWhiteOut(node.range[1], state);\n}\nvisitExportType.test = function(node, path, state) {\n  return node.type === 'ExportDeclaration'\n         && node.declaration.type === 'TypeAlias';\n};\n\nexports.visitorList = [\n  visitClassProperty,\n  visitDeclare,\n  visitExportType,\n  visitImportType,\n  visitInterfaceDeclaration,\n  visitFunctionParametricAnnotation,\n  visitFunctionReturnAnnotation,\n  visitMethod,\n  visitOptionalFunctionParameterAnnotation,\n  visitTypeAlias,\n  visitTypeCast,\n  visitTypeAnnotatedIdentifier,\n  visitTypeAnnotatedObjectOrArrayPattern\n];\n"]}