{"version":3,"sources":["EnterLeaveEventPlugin.js"],"names":[],"mappings":"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","file":"EnterLeaveEventPlugin-compiled.js","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule EnterLeaveEventPlugin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPropagators = require('./EventPropagators');\nvar SyntheticMouseEvent = require('./SyntheticMouseEvent');\n\nvar ReactMount = require('./ReactMount');\nvar keyOf = require('fbjs/lib/keyOf');\n\nvar topLevelTypes = EventConstants.topLevelTypes;\nvar getFirstReactDOM = ReactMount.getFirstReactDOM;\n\nvar eventTypes = {\n  mouseEnter: {\n    registrationName: keyOf({ onMouseEnter: null }),\n    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]\n  },\n  mouseLeave: {\n    registrationName: keyOf({ onMouseLeave: null }),\n    dependencies: [topLevelTypes.topMouseOut, topLevelTypes.topMouseOver]\n  }\n};\n\nvar extractedEvents = [null, null];\n\nvar EnterLeaveEventPlugin = {\n\n  eventTypes: eventTypes,\n\n  /**\n   * For almost every interaction we care about, there will be both a top-level\n   * `mouseover` and `mouseout` event that occurs. Only use `mouseout` so that\n   * we do not extract duplicate events. However, moving the mouse into the\n   * browser from outside will not fire a `mouseout` event. In this case, we use\n   * the `mouseover` top-level event.\n   *\n   * @param {string} topLevelType Record from `EventConstants`.\n   * @param {DOMEventTarget} topLevelTarget The listening component root node.\n   * @param {string} topLevelTargetID ID of `topLevelTarget`.\n   * @param {object} nativeEvent Native browser event.\n   * @return {*} An accumulation of synthetic events.\n   * @see {EventPluginHub.extractEvents}\n   */\n  extractEvents: function (topLevelType, topLevelTarget, topLevelTargetID, nativeEvent, nativeEventTarget) {\n    if (topLevelType === topLevelTypes.topMouseOver && (nativeEvent.relatedTarget || nativeEvent.fromElement)) {\n      return null;\n    }\n    if (topLevelType !== topLevelTypes.topMouseOut && topLevelType !== topLevelTypes.topMouseOver) {\n      // Must not be a mouse in or mouse out - ignoring.\n      return null;\n    }\n\n    var win;\n    if (topLevelTarget.window === topLevelTarget) {\n      // `topLevelTarget` is probably a window object.\n      win = topLevelTarget;\n    } else {\n      // TODO: Figure out why `ownerDocument` is sometimes undefined in IE8.\n      var doc = topLevelTarget.ownerDocument;\n      if (doc) {\n        win = doc.defaultView || doc.parentWindow;\n      } else {\n        win = window;\n      }\n    }\n\n    var from;\n    var to;\n    var fromID = '';\n    var toID = '';\n    if (topLevelType === topLevelTypes.topMouseOut) {\n      from = topLevelTarget;\n      fromID = topLevelTargetID;\n      to = getFirstReactDOM(nativeEvent.relatedTarget || nativeEvent.toElement);\n      if (to) {\n        toID = ReactMount.getID(to);\n      } else {\n        to = win;\n      }\n      to = to || win;\n    } else {\n      from = win;\n      to = topLevelTarget;\n      toID = topLevelTargetID;\n    }\n\n    if (from === to) {\n      // Nothing pertains to our managed components.\n      return null;\n    }\n\n    var leave = SyntheticMouseEvent.getPooled(eventTypes.mouseLeave, fromID, nativeEvent, nativeEventTarget);\n    leave.type = 'mouseleave';\n    leave.target = from;\n    leave.relatedTarget = to;\n\n    var enter = SyntheticMouseEvent.getPooled(eventTypes.mouseEnter, toID, nativeEvent, nativeEventTarget);\n    enter.type = 'mouseenter';\n    enter.target = to;\n    enter.relatedTarget = from;\n\n    EventPropagators.accumulateEnterLeaveDispatches(leave, enter, fromID, toID);\n\n    extractedEvents[0] = leave;\n    extractedEvents[1] = enter;\n\n    return extractedEvents;\n  }\n\n};\n\nmodule.exports = EnterLeaveEventPlugin;"]}