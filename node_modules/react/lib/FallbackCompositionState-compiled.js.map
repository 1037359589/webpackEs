{"version":3,"sources":["FallbackCompositionState.js"],"names":[],"mappings":";;;;;;;;;;;;AAYA,YAAY,CAAC;;AAEb,IAAI,WAAW,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;;AAE3C,IAAI,MAAM,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AACxC,IAAI,sBAAsB,GAAG,OAAO,CAAC,0BAA0B,CAAC;;;;;;;;;;;;;AAAC,AAajE,SAAS,wBAAwB,CAAC,IAAI,EAAE;AACtC,MAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAClB,MAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;AACjC,MAAI,CAAC,aAAa,GAAG,IAAI,CAAC;CAC3B;;AAED,MAAM,CAAC,wBAAwB,CAAC,SAAS,EAAE;AACzC,YAAU,EAAE,YAAY;AACtB,QAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AAClB,QAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,QAAI,CAAC,aAAa,GAAG,IAAI,CAAC;GAC3B;;;;;;;AAOD,SAAO,EAAE,YAAY;AACnB,QAAI,OAAO,IAAI,IAAI,CAAC,KAAK,EAAE;AACzB,aAAO,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC;KACzB;AACD,WAAO,IAAI,CAAC,KAAK,CAAC,sBAAsB,EAAE,CAAC,CAAC;GAC7C;;;;;;;;AAQD,SAAO,EAAE,YAAY;AACnB,QAAI,IAAI,CAAC,aAAa,EAAE;AACtB,aAAO,IAAI,CAAC,aAAa,CAAC;KAC3B;;AAED,QAAI,KAAK,CAAC;AACV,QAAI,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;AACjC,QAAI,WAAW,GAAG,UAAU,CAAC,MAAM,CAAC;AACpC,QAAI,GAAG,CAAC;AACR,QAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,EAAE,CAAC;AAC9B,QAAI,SAAS,GAAG,QAAQ,CAAC,MAAM,CAAC;;AAEhC,SAAK,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,WAAW,EAAE,KAAK,EAAE,EAAE;AAC5C,UAAI,UAAU,CAAC,KAAK,CAAC,KAAK,QAAQ,CAAC,KAAK,CAAC,EAAE;AACzC,cAAM;OACP;KACF;;AAED,QAAI,MAAM,GAAG,WAAW,GAAG,KAAK,CAAC;AACjC,SAAK,GAAG,GAAG,CAAC,EAAE,GAAG,IAAI,MAAM,EAAE,GAAG,EAAE,EAAE;AAClC,UAAI,UAAU,CAAC,WAAW,GAAG,GAAG,CAAC,KAAK,QAAQ,CAAC,SAAS,GAAG,GAAG,CAAC,EAAE;AAC/D,cAAM;OACP;KACF;;AAED,QAAI,SAAS,GAAG,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,SAAS,CAAC;AAC9C,QAAI,CAAC,aAAa,GAAG,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC;AACtD,WAAO,IAAI,CAAC,aAAa,CAAC;GAC3B;CACF,CAAC,CAAC;;AAEH,WAAW,CAAC,YAAY,CAAC,wBAAwB,CAAC,CAAC;;AAEnD,MAAM,CAAC,OAAO,GAAG,wBAAwB,CAAC","file":"FallbackCompositionState-compiled.js","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule FallbackCompositionState\n * @typechecks static-only\n */\n\n'use strict';\n\nvar PooledClass = require('./PooledClass');\n\nvar assign = require('./Object.assign');\nvar getTextContentAccessor = require('./getTextContentAccessor');\n\n/**\n * This helper class stores information about text content of a target node,\n * allowing comparison of content before and after a given event.\n *\n * Identify the node where selection currently begins, then observe\n * both its text content and its current position in the DOM. Since the\n * browser may natively replace the target node during composition, we can\n * use its position to find its replacement.\n *\n * @param {DOMEventTarget} root\n */\nfunction FallbackCompositionState(root) {\n  this._root = root;\n  this._startText = this.getText();\n  this._fallbackText = null;\n}\n\nassign(FallbackCompositionState.prototype, {\n  destructor: function () {\n    this._root = null;\n    this._startText = null;\n    this._fallbackText = null;\n  },\n\n  /**\n   * Get current text of input.\n   *\n   * @return {string}\n   */\n  getText: function () {\n    if ('value' in this._root) {\n      return this._root.value;\n    }\n    return this._root[getTextContentAccessor()];\n  },\n\n  /**\n   * Determine the differing substring between the initially stored\n   * text content and the current content.\n   *\n   * @return {string}\n   */\n  getData: function () {\n    if (this._fallbackText) {\n      return this._fallbackText;\n    }\n\n    var start;\n    var startValue = this._startText;\n    var startLength = startValue.length;\n    var end;\n    var endValue = this.getText();\n    var endLength = endValue.length;\n\n    for (start = 0; start < startLength; start++) {\n      if (startValue[start] !== endValue[start]) {\n        break;\n      }\n    }\n\n    var minEnd = startLength - start;\n    for (end = 1; end <= minEnd; end++) {\n      if (startValue[startLength - end] !== endValue[endLength - end]) {\n        break;\n      }\n    }\n\n    var sliceTail = end > 1 ? 1 - end : undefined;\n    this._fallbackText = endValue.slice(start, sliceTail);\n    return this._fallbackText;\n  }\n});\n\nPooledClass.addPoolingTo(FallbackCompositionState);\n\nmodule.exports = FallbackCompositionState;"]}