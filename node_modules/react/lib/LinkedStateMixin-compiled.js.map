{"version":3,"sources":["LinkedStateMixin.js"],"names":[],"mappings":";;;;;;;;;;;;AAYA,YAAY,CAAC;;AAEb,IAAI,SAAS,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACvC,IAAI,iBAAiB,GAAG,OAAO,CAAC,qBAAqB,CAAC;;;;;AAAC,AAKvD,IAAI,gBAAgB,GAAG;;;;;;;;;;AAUrB,WAAS,EAAE,UAAU,GAAG,EAAE;AACxB,WAAO,IAAI,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAE,iBAAiB,CAAC,oBAAoB,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC;GAC1F;CACF,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,gBAAgB,CAAC","file":"LinkedStateMixin-compiled.js","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LinkedStateMixin\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactLink = require('./ReactLink');\nvar ReactStateSetters = require('./ReactStateSetters');\n\n/**\n * A simple mixin around ReactLink.forState().\n */\nvar LinkedStateMixin = {\n  /**\n   * Create a ReactLink that's linked to part of this component's state. The\n   * ReactLink will have the current value of this.state[key] and will call\n   * setState() when a change is requested.\n   *\n   * @param {string} key state key to update. Note: you may want to use keyOf()\n   * if you're using Google Closure Compiler advanced mode.\n   * @return {ReactLink} ReactLink instance linking to the state.\n   */\n  linkState: function (key) {\n    return new ReactLink(this.state[key], ReactStateSetters.createStateKeySetter(this, key));\n  }\n};\n\nmodule.exports = LinkedStateMixin;"]}