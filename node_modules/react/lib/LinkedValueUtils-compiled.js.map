{"version":3,"sources":["LinkedValueUtils.js"],"names":[],"mappings":"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","file":"LinkedValueUtils-compiled.js","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule LinkedValueUtils\n * @typechecks static-only\n */\n\n'use strict';\n\nvar ReactPropTypes = require('./ReactPropTypes');\nvar ReactPropTypeLocations = require('./ReactPropTypeLocations');\n\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar hasReadOnlyValue = {\n  'button': true,\n  'checkbox': true,\n  'image': true,\n  'hidden': true,\n  'radio': true,\n  'reset': true,\n  'submit': true\n};\n\nfunction _assertSingleLink(inputProps) {\n  !(inputProps.checkedLink == null || inputProps.valueLink == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a valueLink. If you want to use ' + 'checkedLink, you probably don\\'t want to use valueLink and vice versa.') : invariant(false) : undefined;\n}\nfunction _assertValueLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.value == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a valueLink and a value or onChange event. If you want ' + 'to use value or onChange, you probably don\\'t want to use valueLink.') : invariant(false) : undefined;\n}\n\nfunction _assertCheckedLink(inputProps) {\n  _assertSingleLink(inputProps);\n  !(inputProps.checked == null && inputProps.onChange == null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Cannot provide a checkedLink and a checked property or onChange event. ' + 'If you want to use checked or onChange, you probably don\\'t want to ' + 'use checkedLink') : invariant(false) : undefined;\n}\n\nvar propTypes = {\n  value: function (props, propName, componentName) {\n    if (!props[propName] || hasReadOnlyValue[props.type] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `value` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultValue`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  checked: function (props, propName, componentName) {\n    if (!props[propName] || props.onChange || props.readOnly || props.disabled) {\n      return null;\n    }\n    return new Error('You provided a `checked` prop to a form field without an ' + '`onChange` handler. This will render a read-only field. If ' + 'the field should be mutable use `defaultChecked`. Otherwise, ' + 'set either `onChange` or `readOnly`.');\n  },\n  onChange: ReactPropTypes.func\n};\n\nvar loggedTypeFailures = {};\nfunction getDeclarationErrorAddendum(owner) {\n  if (owner) {\n    var name = owner.getName();\n    if (name) {\n      return ' Check the render method of `' + name + '`.';\n    }\n  }\n  return '';\n}\n\n/**\n * Provide a linked `value` attribute for controlled forms. You should not use\n * this outside of the ReactDOM controlled form components.\n */\nvar LinkedValueUtils = {\n  checkPropTypes: function (tagName, props, owner) {\n    for (var propName in propTypes) {\n      if (propTypes.hasOwnProperty(propName)) {\n        var error = propTypes[propName](props, propName, tagName, ReactPropTypeLocations.prop);\n      }\n      if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n        // Only monitor this failure once because there tends to be a lot of the\n        // same error.\n        loggedTypeFailures[error.message] = true;\n\n        var addendum = getDeclarationErrorAddendum(owner);\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Failed form propType: %s%s', error.message, addendum) : undefined;\n      }\n    }\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current value of the input either from value prop or link.\n   */\n  getValue: function (inputProps) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.value;\n    }\n    return inputProps.value;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @return {*} current checked status of the input either from checked prop\n   *             or link.\n   */\n  getChecked: function (inputProps) {\n    if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.value;\n    }\n    return inputProps.checked;\n  },\n\n  /**\n   * @param {object} inputProps Props for form component\n   * @param {SyntheticEvent} event change event to handle\n   */\n  executeOnChange: function (inputProps, event) {\n    if (inputProps.valueLink) {\n      _assertValueLink(inputProps);\n      return inputProps.valueLink.requestChange(event.target.value);\n    } else if (inputProps.checkedLink) {\n      _assertCheckedLink(inputProps);\n      return inputProps.checkedLink.requestChange(event.target.checked);\n    } else if (inputProps.onChange) {\n      return inputProps.onChange.call(undefined, event);\n    }\n  }\n};\n\nmodule.exports = LinkedValueUtils;"]}