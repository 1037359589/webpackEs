{"version":3,"sources":["PooledClass.js"],"names":[],"mappings":"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","file":"PooledClass-compiled.js","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule PooledClass\n */\n\n'use strict';\n\nvar invariant = require('fbjs/lib/invariant');\n\n/**\n * Static poolers. Several custom versions for each potential number of\n * arguments. A completely generic pooler is easy to implement, but would\n * require accessing the `arguments` object. In each of these, `this` refers to\n * the Class itself, not an instance. If any others are needed, simply add them\n * here, or in their own files.\n */\nvar oneArgumentPooler = function (copyFieldsFrom) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, copyFieldsFrom);\n    return instance;\n  } else {\n    return new Klass(copyFieldsFrom);\n  }\n};\n\nvar twoArgumentPooler = function (a1, a2) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2);\n    return instance;\n  } else {\n    return new Klass(a1, a2);\n  }\n};\n\nvar threeArgumentPooler = function (a1, a2, a3) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3);\n  }\n};\n\nvar fourArgumentPooler = function (a1, a2, a3, a4) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4);\n  }\n};\n\nvar fiveArgumentPooler = function (a1, a2, a3, a4, a5) {\n  var Klass = this;\n  if (Klass.instancePool.length) {\n    var instance = Klass.instancePool.pop();\n    Klass.call(instance, a1, a2, a3, a4, a5);\n    return instance;\n  } else {\n    return new Klass(a1, a2, a3, a4, a5);\n  }\n};\n\nvar standardReleaser = function (instance) {\n  var Klass = this;\n  !(instance instanceof Klass) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Trying to release an instance into a pool of a different type.') : invariant(false) : undefined;\n  instance.destructor();\n  if (Klass.instancePool.length < Klass.poolSize) {\n    Klass.instancePool.push(instance);\n  }\n};\n\nvar DEFAULT_POOL_SIZE = 10;\nvar DEFAULT_POOLER = oneArgumentPooler;\n\n/**\n * Augments `CopyConstructor` to be a poolable class, augmenting only the class\n * itself (statically) not adding any prototypical fields. Any CopyConstructor\n * you give this may have a `poolSize` property, and will look for a\n * prototypical `destructor` on instances (optional).\n *\n * @param {Function} CopyConstructor Constructor that can be used to reset.\n * @param {Function} pooler Customizable pooler.\n */\nvar addPoolingTo = function (CopyConstructor, pooler) {\n  var NewKlass = CopyConstructor;\n  NewKlass.instancePool = [];\n  NewKlass.getPooled = pooler || DEFAULT_POOLER;\n  if (!NewKlass.poolSize) {\n    NewKlass.poolSize = DEFAULT_POOL_SIZE;\n  }\n  NewKlass.release = standardReleaser;\n  return NewKlass;\n};\n\nvar PooledClass = {\n  addPoolingTo: addPoolingTo,\n  oneArgumentPooler: oneArgumentPooler,\n  twoArgumentPooler: twoArgumentPooler,\n  threeArgumentPooler: threeArgumentPooler,\n  fourArgumentPooler: fourArgumentPooler,\n  fiveArgumentPooler: fiveArgumentPooler\n};\n\nmodule.exports = PooledClass;"]}