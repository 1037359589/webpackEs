{"version":3,"sources":["ReactComponentBrowserEnvironment.js"],"names":[],"mappings":";;;;;;;;;;;AAWA,YAAY,CAAC;;AAEb,IAAI,oBAAoB,GAAG,OAAO,CAAC,wBAAwB,CAAC,CAAC;AAC7D,IAAI,UAAU,GAAG,OAAO,CAAC,cAAc,CAAC;;;;;;;AAAC,AAOzC,IAAI,gCAAgC,GAAG;;AAErC,wBAAsB,EAAE,oBAAoB,CAAC,iCAAiC;;AAE9E,2BAAyB,EAAE,oBAAoB,CAAC,oCAAoC;;;;;;;;;AASpF,0BAAwB,EAAE,UAAU,UAAU,EAAE;AAC9C,cAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;GAChC;;CAEF,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,gCAAgC,CAAC","file":"ReactComponentBrowserEnvironment-compiled.js","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactComponentBrowserEnvironment\n */\n\n'use strict';\n\nvar ReactDOMIDOperations = require('./ReactDOMIDOperations');\nvar ReactMount = require('./ReactMount');\n\n/**\n * Abstracts away all functionality of the reconciler that requires knowledge of\n * the browser context. TODO: These callers should be refactored to avoid the\n * need for this injection.\n */\nvar ReactComponentBrowserEnvironment = {\n\n  processChildrenUpdates: ReactDOMIDOperations.dangerouslyProcessChildrenUpdates,\n\n  replaceNodeWithMarkupByID: ReactDOMIDOperations.dangerouslyReplaceNodeWithMarkupByID,\n\n  /**\n   * If a particular environment requires that some resources be cleaned up,\n   * specify this in the injected Mixin. In the DOM, we would likely want to\n   * purge any cached node ID lookups.\n   *\n   * @private\n   */\n  unmountIDFromEnvironment: function (rootNodeID) {\n    ReactMount.purgeID(rootNodeID);\n  }\n\n};\n\nmodule.exports = ReactComponentBrowserEnvironment;"]}