{"version":3,"sources":["ReactDOMOption.js"],"names":[],"mappings":";;;;;;;;;;;AAWA,YAAY,CAAC;;AAEb,IAAI,aAAa,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAC/C,IAAI,cAAc,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;;AAEjD,IAAI,MAAM,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AACxC,IAAI,OAAO,GAAG,OAAO,CAAC,kBAAkB,CAAC,CAAC;;AAE1C,IAAI,eAAe,GAAG,cAAc,CAAC,eAAe;;;;;AAAC,AAKrD,IAAI,cAAc,GAAG;AACnB,cAAY,EAAE,UAAU,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE;;AAE5C,QAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;AACzC,aAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAG,OAAO,CAAC,KAAK,CAAC,QAAQ,IAAI,IAAI,EAAE,iEAAiE,GAAG,iCAAiC,CAAC,GAAG,SAAS,CAAC;KAC5L;;;AAAA,AAGD,QAAI,WAAW,GAAG,OAAO,CAAC,eAAe,CAAC;;;;AAAC,AAI3C,QAAI,QAAQ,GAAG,IAAI,CAAC;AACpB,QAAI,WAAW,IAAI,IAAI,EAAE;AACvB,cAAQ,GAAG,KAAK,CAAC;AACjB,UAAI,KAAK,CAAC,OAAO,CAAC,WAAW,CAAC,EAAE;;AAE9B,aAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,WAAW,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AAC3C,cAAI,EAAE,GAAG,WAAW,CAAC,CAAC,CAAC,KAAK,EAAE,GAAG,KAAK,CAAC,KAAK,EAAE;AAC5C,oBAAQ,GAAG,IAAI,CAAC;AAChB,kBAAM;WACP;SACF;OACF,MAAM;AACL,gBAAQ,GAAG,EAAE,GAAG,WAAW,KAAK,EAAE,GAAG,KAAK,CAAC,KAAK,CAAC;OAClD;KACF;;AAED,QAAI,CAAC,aAAa,GAAG,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;GAC7C;;AAED,gBAAc,EAAE,UAAU,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE;AAC9C,QAAI,WAAW,GAAG,MAAM,CAAC,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,EAAE,SAAS,EAAE,EAAE,KAAK,CAAC;;;;AAAC,AAI9E,QAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,IAAI,IAAI,EAAE;AACvC,iBAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC;KACpD;;AAED,QAAI,OAAO,GAAG,EAAE;;;;AAAC,AAIjB,iBAAa,CAAC,OAAO,CAAC,KAAK,CAAC,QAAQ,EAAE,UAAU,KAAK,EAAE;AACrD,UAAI,KAAK,IAAI,IAAI,EAAE;AACjB,eAAO;OACR;AACD,UAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;AAC1D,eAAO,IAAI,KAAK,CAAC;OAClB,MAAM;AACL,eAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAG,OAAO,CAAC,KAAK,EAAE,8DAA8D,CAAC,GAAG,SAAS,CAAC;OACpI;KACF,CAAC,CAAC;;AAEH,eAAW,CAAC,QAAQ,GAAG,OAAO,CAAC;AAC/B,WAAO,WAAW,CAAC;GACpB;;CAEF,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,cAAc,CAAC","file":"ReactDOMOption-compiled.js","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDOMOption\n */\n\n'use strict';\n\nvar ReactChildren = require('./ReactChildren');\nvar ReactDOMSelect = require('./ReactDOMSelect');\n\nvar assign = require('./Object.assign');\nvar warning = require('fbjs/lib/warning');\n\nvar valueContextKey = ReactDOMSelect.valueContextKey;\n\n/**\n * Implements an <option> native component that warns when `selected` is set.\n */\nvar ReactDOMOption = {\n  mountWrapper: function (inst, props, context) {\n    // TODO (yungsters): Remove support for `selected` in <option>.\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(props.selected == null, 'Use the `defaultValue` or `value` props on <select> instead of ' + 'setting `selected` on <option>.') : undefined;\n    }\n\n    // Look up whether this option is 'selected' via context\n    var selectValue = context[valueContextKey];\n\n    // If context key is null (e.g., no specified value or after initial mount)\n    // or missing (e.g., for <datalist>), we don't change props.selected\n    var selected = null;\n    if (selectValue != null) {\n      selected = false;\n      if (Array.isArray(selectValue)) {\n        // multiple\n        for (var i = 0; i < selectValue.length; i++) {\n          if ('' + selectValue[i] === '' + props.value) {\n            selected = true;\n            break;\n          }\n        }\n      } else {\n        selected = '' + selectValue === '' + props.value;\n      }\n    }\n\n    inst._wrapperState = { selected: selected };\n  },\n\n  getNativeProps: function (inst, props, context) {\n    var nativeProps = assign({ selected: undefined, children: undefined }, props);\n\n    // Read state only from initial mount because <select> updates value\n    // manually; we need the initial state only for server rendering\n    if (inst._wrapperState.selected != null) {\n      nativeProps.selected = inst._wrapperState.selected;\n    }\n\n    var content = '';\n\n    // Flatten children and warn if they aren't strings or numbers;\n    // invalid types are ignored.\n    ReactChildren.forEach(props.children, function (child) {\n      if (child == null) {\n        return;\n      }\n      if (typeof child === 'string' || typeof child === 'number') {\n        content += child;\n      } else {\n        process.env.NODE_ENV !== 'production' ? warning(false, 'Only strings and numbers are supported as <option> children.') : undefined;\n      }\n    });\n\n    nativeProps.children = content;\n    return nativeProps;\n  }\n\n};\n\nmodule.exports = ReactDOMOption;"]}