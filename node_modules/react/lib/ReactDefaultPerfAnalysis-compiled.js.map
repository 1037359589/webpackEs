{"version":3,"sources":["ReactDefaultPerfAnalysis.js"],"names":[],"mappings":"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","file":"ReactDefaultPerfAnalysis-compiled.js","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactDefaultPerfAnalysis\n */\n\n'use strict';\n\nvar assign = require('./Object.assign');\n\n// Don't try to save users less than 1.2ms (a number I made up)\nvar DONT_CARE_THRESHOLD = 1.2;\nvar DOM_OPERATION_TYPES = {\n  '_mountImageIntoNode': 'set innerHTML',\n  INSERT_MARKUP: 'set innerHTML',\n  MOVE_EXISTING: 'move',\n  REMOVE_NODE: 'remove',\n  SET_MARKUP: 'set innerHTML',\n  TEXT_CONTENT: 'set textContent',\n  'setValueForProperty': 'update attribute',\n  'setValueForAttribute': 'update attribute',\n  'deleteValueForProperty': 'remove attribute',\n  'setValueForStyles': 'update styles',\n  'replaceNodeWithMarkup': 'replace',\n  'updateTextContent': 'set textContent'\n};\n\nfunction getTotalTime(measurements) {\n  // TODO: return number of DOM ops? could be misleading.\n  // TODO: measure dropped frames after reconcile?\n  // TODO: log total time of each reconcile and the top-level component\n  // class that triggered it.\n  var totalTime = 0;\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    totalTime += measurement.totalTime;\n  }\n  return totalTime;\n}\n\nfunction getDOMSummary(measurements) {\n  var items = [];\n  measurements.forEach(function (measurement) {\n    Object.keys(measurement.writes).forEach(function (id) {\n      measurement.writes[id].forEach(function (write) {\n        items.push({\n          id: id,\n          type: DOM_OPERATION_TYPES[write.type] || write.type,\n          args: write.args\n        });\n      });\n    });\n  });\n  return items;\n}\n\nfunction getExclusiveSummary(measurements) {\n  var candidates = {};\n  var displayName;\n\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    var allIDs = assign({}, measurement.exclusive, measurement.inclusive);\n\n    for (var id in allIDs) {\n      displayName = measurement.displayNames[id].current;\n\n      candidates[displayName] = candidates[displayName] || {\n        componentName: displayName,\n        inclusive: 0,\n        exclusive: 0,\n        render: 0,\n        count: 0\n      };\n      if (measurement.render[id]) {\n        candidates[displayName].render += measurement.render[id];\n      }\n      if (measurement.exclusive[id]) {\n        candidates[displayName].exclusive += measurement.exclusive[id];\n      }\n      if (measurement.inclusive[id]) {\n        candidates[displayName].inclusive += measurement.inclusive[id];\n      }\n      if (measurement.counts[id]) {\n        candidates[displayName].count += measurement.counts[id];\n      }\n    }\n  }\n\n  // Now make a sorted array with the results.\n  var arr = [];\n  for (displayName in candidates) {\n    if (candidates[displayName].exclusive >= DONT_CARE_THRESHOLD) {\n      arr.push(candidates[displayName]);\n    }\n  }\n\n  arr.sort(function (a, b) {\n    return b.exclusive - a.exclusive;\n  });\n\n  return arr;\n}\n\nfunction getInclusiveSummary(measurements, onlyClean) {\n  var candidates = {};\n  var inclusiveKey;\n\n  for (var i = 0; i < measurements.length; i++) {\n    var measurement = measurements[i];\n    var allIDs = assign({}, measurement.exclusive, measurement.inclusive);\n    var cleanComponents;\n\n    if (onlyClean) {\n      cleanComponents = getUnchangedComponents(measurement);\n    }\n\n    for (var id in allIDs) {\n      if (onlyClean && !cleanComponents[id]) {\n        continue;\n      }\n\n      var displayName = measurement.displayNames[id];\n\n      // Inclusive time is not useful for many components without knowing where\n      // they are instantiated. So we aggregate inclusive time with both the\n      // owner and current displayName as the key.\n      inclusiveKey = displayName.owner + ' > ' + displayName.current;\n\n      candidates[inclusiveKey] = candidates[inclusiveKey] || {\n        componentName: inclusiveKey,\n        time: 0,\n        count: 0\n      };\n\n      if (measurement.inclusive[id]) {\n        candidates[inclusiveKey].time += measurement.inclusive[id];\n      }\n      if (measurement.counts[id]) {\n        candidates[inclusiveKey].count += measurement.counts[id];\n      }\n    }\n  }\n\n  // Now make a sorted array with the results.\n  var arr = [];\n  for (inclusiveKey in candidates) {\n    if (candidates[inclusiveKey].time >= DONT_CARE_THRESHOLD) {\n      arr.push(candidates[inclusiveKey]);\n    }\n  }\n\n  arr.sort(function (a, b) {\n    return b.time - a.time;\n  });\n\n  return arr;\n}\n\nfunction getUnchangedComponents(measurement) {\n  // For a given reconcile, look at which components did not actually\n  // render anything to the DOM and return a mapping of their ID to\n  // the amount of time it took to render the entire subtree.\n  var cleanComponents = {};\n  var dirtyLeafIDs = Object.keys(measurement.writes);\n  var allIDs = assign({}, measurement.exclusive, measurement.inclusive);\n\n  for (var id in allIDs) {\n    var isDirty = false;\n    // For each component that rendered, see if a component that triggered\n    // a DOM op is in its subtree.\n    for (var i = 0; i < dirtyLeafIDs.length; i++) {\n      if (dirtyLeafIDs[i].indexOf(id) === 0) {\n        isDirty = true;\n        break;\n      }\n    }\n    // check if component newly created\n    if (measurement.created[id]) {\n      isDirty = true;\n    }\n    if (!isDirty && measurement.counts[id] > 0) {\n      cleanComponents[id] = true;\n    }\n  }\n  return cleanComponents;\n}\n\nvar ReactDefaultPerfAnalysis = {\n  getExclusiveSummary: getExclusiveSummary,\n  getInclusiveSummary: getInclusiveSummary,\n  getDOMSummary: getDOMSummary,\n  getTotalTime: getTotalTime\n};\n\nmodule.exports = ReactDefaultPerfAnalysis;"]}