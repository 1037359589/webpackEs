{"version":3,"sources":["ReactFragment.js"],"names":[],"mappings":";;;;;;;;;;;AAWA,YAAY,CAAC;;AAEb,IAAI,aAAa,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;AAC/C,IAAI,YAAY,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC;;AAE7C,IAAI,aAAa,GAAG,OAAO,CAAC,wBAAwB,CAAC,CAAC;AACtD,IAAI,SAAS,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAC9C,IAAI,OAAO,GAAG,OAAO,CAAC,kBAAkB,CAAC;;;;;;;;;;AAAC,AAU1C,IAAI,oBAAoB,GAAG,OAAO,CAAC;;AAEnC,IAAI,kBAAkB,GAAG,KAAK,CAAC;;AAE/B,IAAI,aAAa,GAAG;;;AAGlB,QAAM,EAAE,UAAU,MAAM,EAAE;AACxB,QAAI,OAAO,MAAM,KAAK,QAAQ,IAAI,CAAC,MAAM,IAAI,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;AAClE,aAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAG,OAAO,CAAC,KAAK,EAAE,mEAAmE,EAAE,MAAM,CAAC,GAAG,SAAS,CAAC;AAChJ,aAAO,MAAM,CAAC;KACf;AACD,QAAI,YAAY,CAAC,cAAc,CAAC,MAAM,CAAC,EAAE;AACvC,aAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAG,OAAO,CAAC,KAAK,EAAE,6DAA6D,GAAG,2BAA2B,CAAC,GAAG,SAAS,CAAC;AAChK,aAAO,MAAM,CAAC;KACf;;AAED,MAAE,MAAM,CAAC,QAAQ,KAAK,CAAC,CAAA,AAAC,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAG,SAAS,CAAC,KAAK,EAAE,sEAAsE,GAAG,sDAAsD,CAAC,GAAG,SAAS,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;;AAEpP,QAAI,MAAM,GAAG,EAAE,CAAC;;AAEhB,SAAK,IAAI,GAAG,IAAI,MAAM,EAAE;AACtB,UAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;AACzC,YAAI,CAAC,kBAAkB,IAAI,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE;AACzD,iBAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,GAAG,OAAO,CAAC,KAAK,EAAE,8DAA8D,GAAG,4CAA4C,CAAC,GAAG,SAAS,CAAC;AAClL,4BAAkB,GAAG,IAAI,CAAC;SAC3B;OACF;AACD,mBAAa,CAAC,4BAA4B,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,aAAa,CAAC,mBAAmB,CAAC,CAAC;KACzG;;AAED,WAAO,MAAM,CAAC;GACf;CACF,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,aAAa,CAAC","file":"ReactFragment-compiled.js","sourcesContent":["/**\n * Copyright 2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactFragment\n */\n\n'use strict';\n\nvar ReactChildren = require('./ReactChildren');\nvar ReactElement = require('./ReactElement');\n\nvar emptyFunction = require('fbjs/lib/emptyFunction');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\n/**\n * We used to allow keyed objects to serve as a collection of ReactElements,\n * or nested sets. This allowed us a way to explicitly key a set a fragment of\n * components. This is now being replaced with an opaque data structure.\n * The upgrade path is to call React.addons.createFragment({ key: value }) to\n * create a keyed fragment. The resulting data structure is an array.\n */\n\nvar numericPropertyRegex = /^\\d+$/;\n\nvar warnedAboutNumeric = false;\n\nvar ReactFragment = {\n  // Wrap a keyed object in an opaque proxy that warns you if you access any\n  // of its properties.\n  create: function (object) {\n    if (typeof object !== 'object' || !object || Array.isArray(object)) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'React.addons.createFragment only accepts a single object. Got: %s', object) : undefined;\n      return object;\n    }\n    if (ReactElement.isValidElement(object)) {\n      process.env.NODE_ENV !== 'production' ? warning(false, 'React.addons.createFragment does not accept a ReactElement ' + 'without a wrapper object.') : undefined;\n      return object;\n    }\n\n    !(object.nodeType !== 1) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'React.addons.createFragment(...): Encountered an invalid child; DOM ' + 'elements are not valid children of React components.') : invariant(false) : undefined;\n\n    var result = [];\n\n    for (var key in object) {\n      if (process.env.NODE_ENV !== 'production') {\n        if (!warnedAboutNumeric && numericPropertyRegex.test(key)) {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'React.addons.createFragment(...): Child objects should have ' + 'non-numeric keys so ordering is preserved.') : undefined;\n          warnedAboutNumeric = true;\n        }\n      }\n      ReactChildren.mapIntoWithKeyPrefixInternal(object[key], result, key, emptyFunction.thatReturnsArgument);\n    }\n\n    return result;\n  }\n};\n\nmodule.exports = ReactFragment;"]}