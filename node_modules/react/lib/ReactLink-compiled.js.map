{"version":3,"sources":["ReactLink.js"],"names":[],"mappings":";;;;;;;;;;;;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;AAAY,CAAC;AAyBb,IAAI,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC;;;;;;AAAC,AAM/B,SAAS,SAAS,CAAC,KAAK,EAAE,aAAa,EAAE;AACvC,MAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACnB,MAAI,CAAC,aAAa,GAAG,aAAa,CAAC;CACpC;;;;;;;;;;AAAA,AAUD,SAAS,qBAAqB,CAAC,QAAQ,EAAE;AACvC,MAAI,MAAM,GAAG;AACX,SAAK,EAAE,OAAO,QAAQ,KAAK,WAAW,GAAG,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,GAAG,QAAQ,CAAC,UAAU;AAC7F,iBAAa,EAAE,KAAK,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU;GAC/C,CAAC;AACF,SAAO,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;CACtC;;AAED,SAAS,CAAC,SAAS,GAAG;AACpB,MAAI,EAAE,qBAAqB;CAC5B,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,SAAS,CAAC","file":"ReactLink-compiled.js","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactLink\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * ReactLink encapsulates a common pattern in which a component wants to modify\n * a prop received from its parent. ReactLink allows the parent to pass down a\n * value coupled with a callback that, when invoked, expresses an intent to\n * modify that value. For example:\n *\n * React.createClass({\n *   getInitialState: function() {\n *     return {value: ''};\n *   },\n *   render: function() {\n *     var valueLink = new ReactLink(this.state.value, this._handleValueChange);\n *     return <input valueLink={valueLink} />;\n *   },\n *   _handleValueChange: function(newValue) {\n *     this.setState({value: newValue});\n *   }\n * });\n *\n * We have provided some sugary mixins to make the creation and\n * consumption of ReactLink easier; see LinkedValueUtils and LinkedStateMixin.\n */\n\nvar React = require('./React');\n\n/**\n * @param {*} value current value of the link\n * @param {function} requestChange callback to request a change\n */\nfunction ReactLink(value, requestChange) {\n  this.value = value;\n  this.requestChange = requestChange;\n}\n\n/**\n * Creates a PropType that enforces the ReactLink API and optionally checks the\n * type of the value being passed inside the link. Example:\n *\n * MyComponent.propTypes = {\n *   tabIndexLink: ReactLink.PropTypes.link(React.PropTypes.number)\n * }\n */\nfunction createLinkTypeChecker(linkType) {\n  var shapes = {\n    value: typeof linkType === 'undefined' ? React.PropTypes.any.isRequired : linkType.isRequired,\n    requestChange: React.PropTypes.func.isRequired\n  };\n  return React.PropTypes.shape(shapes);\n}\n\nReactLink.PropTypes = {\n  link: createLinkTypeChecker\n};\n\nmodule.exports = ReactLink;"]}