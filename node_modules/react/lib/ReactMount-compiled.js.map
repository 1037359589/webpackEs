{"version":3,"sources":["ReactMount.js"],"names":[],"mappings":"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","file":"ReactMount-compiled.js","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactMount\n */\n\n'use strict';\n\nvar DOMProperty = require('./DOMProperty');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactDOMFeatureFlags = require('./ReactDOMFeatureFlags');\nvar ReactElement = require('./ReactElement');\nvar ReactEmptyComponentRegistry = require('./ReactEmptyComponentRegistry');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactMarkupChecksum = require('./ReactMarkupChecksum');\nvar ReactPerf = require('./ReactPerf');\nvar ReactReconciler = require('./ReactReconciler');\nvar ReactUpdateQueue = require('./ReactUpdateQueue');\nvar ReactUpdates = require('./ReactUpdates');\n\nvar assign = require('./Object.assign');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar containsNode = require('fbjs/lib/containsNode');\nvar instantiateReactComponent = require('./instantiateReactComponent');\nvar invariant = require('fbjs/lib/invariant');\nvar setInnerHTML = require('./setInnerHTML');\nvar shouldUpdateReactComponent = require('./shouldUpdateReactComponent');\nvar validateDOMNesting = require('./validateDOMNesting');\nvar warning = require('fbjs/lib/warning');\n\nvar ATTR_NAME = DOMProperty.ID_ATTRIBUTE_NAME;\nvar nodeCache = {};\n\nvar ELEMENT_NODE_TYPE = 1;\nvar DOC_NODE_TYPE = 9;\nvar DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\nvar ownerDocumentContextKey = '__ReactMount_ownerDocument$' + Math.random().toString(36).slice(2);\n\n/** Mapping from reactRootID to React component instance. */\nvar instancesByReactRootID = {};\n\n/** Mapping from reactRootID to `container` nodes. */\nvar containersByReactRootID = {};\n\nif (process.env.NODE_ENV !== 'production') {\n  /** __DEV__-only mapping from reactRootID to root elements. */\n  var rootElementsByReactRootID = {};\n}\n\n// Used to store breadth-first search state in findComponentRoot.\nvar findComponentRootReusableArray = [];\n\n/**\n * Finds the index of the first character\n * that's not common between the two given strings.\n *\n * @return {number} the index of the character where the strings diverge\n */\nfunction firstDifferenceIndex(string1, string2) {\n  var minLen = Math.min(string1.length, string2.length);\n  for (var i = 0; i < minLen; i++) {\n    if (string1.charAt(i) !== string2.charAt(i)) {\n      return i;\n    }\n  }\n  return string1.length === string2.length ? -1 : minLen;\n}\n\n/**\n * @param {DOMElement|DOMDocument} container DOM element that may contain\n * a React component\n * @return {?*} DOM element that may have the reactRoot ID, or null.\n */\nfunction getReactRootElementInContainer(container) {\n  if (!container) {\n    return null;\n  }\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    return container.documentElement;\n  } else {\n    return container.firstChild;\n  }\n}\n\n/**\n * @param {DOMElement} container DOM element that may contain a React component.\n * @return {?string} A \"reactRoot\" ID, if a React component is rendered.\n */\nfunction getReactRootID(container) {\n  var rootElement = getReactRootElementInContainer(container);\n  return rootElement && ReactMount.getID(rootElement);\n}\n\n/**\n * Accessing node[ATTR_NAME] or calling getAttribute(ATTR_NAME) on a form\n * element can return its control whose name or ID equals ATTR_NAME. All\n * DOM nodes support `getAttributeNode` but this can also get called on\n * other objects so just return '' if we're given something other than a\n * DOM node (such as window).\n *\n * @param {?DOMElement|DOMWindow|DOMDocument|DOMTextNode} node DOM node.\n * @return {string} ID of the supplied `domNode`.\n */\nfunction getID(node) {\n  var id = internalGetID(node);\n  if (id) {\n    if (nodeCache.hasOwnProperty(id)) {\n      var cached = nodeCache[id];\n      if (cached !== node) {\n        !!isValid(cached, id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactMount: Two valid but unequal nodes with the same `%s`: %s', ATTR_NAME, id) : invariant(false) : undefined;\n\n        nodeCache[id] = node;\n      }\n    } else {\n      nodeCache[id] = node;\n    }\n  }\n\n  return id;\n}\n\nfunction internalGetID(node) {\n  // If node is something like a window, document, or text node, none of\n  // which support attributes or a .getAttribute method, gracefully return\n  // the empty string, as if the attribute were missing.\n  return node && node.getAttribute && node.getAttribute(ATTR_NAME) || '';\n}\n\n/**\n * Sets the React-specific ID of the given node.\n *\n * @param {DOMElement} node The DOM node whose ID will be set.\n * @param {string} id The value of the ID attribute.\n */\nfunction setID(node, id) {\n  var oldID = internalGetID(node);\n  if (oldID !== id) {\n    delete nodeCache[oldID];\n  }\n  node.setAttribute(ATTR_NAME, id);\n  nodeCache[id] = node;\n}\n\n/**\n * Finds the node with the supplied React-generated DOM ID.\n *\n * @param {string} id A React-generated DOM ID.\n * @return {DOMElement} DOM node with the suppled `id`.\n * @internal\n */\nfunction getNode(id) {\n  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {\n    nodeCache[id] = ReactMount.findReactNodeByID(id);\n  }\n  return nodeCache[id];\n}\n\n/**\n * Finds the node with the supplied public React instance.\n *\n * @param {*} instance A public React instance.\n * @return {?DOMElement} DOM node with the suppled `id`.\n * @internal\n */\nfunction getNodeFromInstance(instance) {\n  var id = ReactInstanceMap.get(instance)._rootNodeID;\n  if (ReactEmptyComponentRegistry.isNullComponentID(id)) {\n    return null;\n  }\n  if (!nodeCache.hasOwnProperty(id) || !isValid(nodeCache[id], id)) {\n    nodeCache[id] = ReactMount.findReactNodeByID(id);\n  }\n  return nodeCache[id];\n}\n\n/**\n * A node is \"valid\" if it is contained by a currently mounted container.\n *\n * This means that the node does not have to be contained by a document in\n * order to be considered valid.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @param {string} id The expected ID of the node.\n * @return {boolean} Whether the node is contained by a mounted container.\n */\nfunction isValid(node, id) {\n  if (node) {\n    !(internalGetID(node) === id) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactMount: Unexpected modification of `%s`', ATTR_NAME) : invariant(false) : undefined;\n\n    var container = ReactMount.findReactContainerForID(id);\n    if (container && containsNode(container, node)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Causes the cache to forget about one React-specific ID.\n *\n * @param {string} id The ID to forget.\n */\nfunction purgeID(id) {\n  delete nodeCache[id];\n}\n\nvar deepestNodeSoFar = null;\nfunction findDeepestCachedAncestorImpl(ancestorID) {\n  var ancestor = nodeCache[ancestorID];\n  if (ancestor && isValid(ancestor, ancestorID)) {\n    deepestNodeSoFar = ancestor;\n  } else {\n    // This node isn't populated in the cache, so presumably none of its\n    // descendants are. Break out of the loop.\n    return false;\n  }\n}\n\n/**\n * Return the deepest cached node whose ID is a prefix of `targetID`.\n */\nfunction findDeepestCachedAncestor(targetID) {\n  deepestNodeSoFar = null;\n  ReactInstanceHandles.traverseAncestors(targetID, findDeepestCachedAncestorImpl);\n\n  var foundNode = deepestNodeSoFar;\n  deepestNodeSoFar = null;\n  return foundNode;\n}\n\n/**\n * Mounts this component and inserts it into the DOM.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {string} rootID DOM ID of the root node.\n * @param {DOMElement} container DOM element to mount into.\n * @param {ReactReconcileTransaction} transaction\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction mountComponentIntoNode(componentInstance, rootID, container, transaction, shouldReuseMarkup, context) {\n  if (ReactDOMFeatureFlags.useCreateElement) {\n    context = assign({}, context);\n    if (container.nodeType === DOC_NODE_TYPE) {\n      context[ownerDocumentContextKey] = container;\n    } else {\n      context[ownerDocumentContextKey] = container.ownerDocument;\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (context === emptyObject) {\n      context = {};\n    }\n    var tag = container.nodeName.toLowerCase();\n    context[validateDOMNesting.ancestorInfoContextKey] = validateDOMNesting.updatedAncestorInfo(null, tag, null);\n  }\n  var markup = ReactReconciler.mountComponent(componentInstance, rootID, transaction, context);\n  componentInstance._renderedComponent._topLevelWrapper = componentInstance;\n  ReactMount._mountImageIntoNode(markup, container, shouldReuseMarkup, transaction);\n}\n\n/**\n * Batched mount.\n *\n * @param {ReactComponent} componentInstance The instance to mount.\n * @param {string} rootID DOM ID of the root node.\n * @param {DOMElement} container DOM element to mount into.\n * @param {boolean} shouldReuseMarkup If true, do not insert markup\n */\nfunction batchedMountComponentIntoNode(componentInstance, rootID, container, shouldReuseMarkup, context) {\n  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(\n  /* forceHTML */shouldReuseMarkup);\n  transaction.perform(mountComponentIntoNode, null, componentInstance, rootID, container, transaction, shouldReuseMarkup, context);\n  ReactUpdates.ReactReconcileTransaction.release(transaction);\n}\n\n/**\n * Unmounts a component and removes it from the DOM.\n *\n * @param {ReactComponent} instance React component instance.\n * @param {DOMElement} container DOM element to unmount from.\n * @final\n * @internal\n * @see {ReactMount.unmountComponentAtNode}\n */\nfunction unmountComponentFromNode(instance, container) {\n  ReactReconciler.unmountComponent(instance);\n\n  if (container.nodeType === DOC_NODE_TYPE) {\n    container = container.documentElement;\n  }\n\n  // http://jsperf.com/emptying-a-node\n  while (container.lastChild) {\n    container.removeChild(container.lastChild);\n  }\n}\n\n/**\n * True if the supplied DOM node has a direct React-rendered child that is\n * not a React root element. Useful for warning in `render`,\n * `unmountComponentAtNode`, etc.\n *\n * @param {?DOMElement} node The candidate DOM node.\n * @return {boolean} True if the DOM element contains a direct child that was\n * rendered by React but is not a root element.\n * @internal\n */\nfunction hasNonRootReactChild(node) {\n  var reactRootID = getReactRootID(node);\n  return reactRootID ? reactRootID !== ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID) : false;\n}\n\n/**\n * Returns the first (deepest) ancestor of a node which is rendered by this copy\n * of React.\n */\nfunction findFirstReactDOMImpl(node) {\n  // This node might be from another React instance, so we make sure not to\n  // examine the node cache here\n  for (; node && node.parentNode !== node; node = node.parentNode) {\n    if (node.nodeType !== 1) {\n      // Not a DOMElement, therefore not a React component\n      continue;\n    }\n    var nodeID = internalGetID(node);\n    if (!nodeID) {\n      continue;\n    }\n    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(nodeID);\n\n    // If containersByReactRootID contains the container we find by crawling up\n    // the tree, we know that this instance of React rendered the node.\n    // nb. isValid's strategy (with containsNode) does not work because render\n    // trees may be nested and we don't want a false positive in that case.\n    var current = node;\n    var lastID;\n    do {\n      lastID = internalGetID(current);\n      current = current.parentNode;\n      if (current == null) {\n        // The passed-in node has been detached from the container it was\n        // originally rendered into.\n        return null;\n      }\n    } while (lastID !== reactRootID);\n\n    if (current === containersByReactRootID[reactRootID]) {\n      return node;\n    }\n  }\n  return null;\n}\n\n/**\n * Temporary (?) hack so that we can store all top-level pending updates on\n * composites instead of having to worry about different types of components\n * here.\n */\nvar TopLevelWrapper = function () {};\nTopLevelWrapper.prototype.isReactComponent = {};\nif (process.env.NODE_ENV !== 'production') {\n  TopLevelWrapper.displayName = 'TopLevelWrapper';\n}\nTopLevelWrapper.prototype.render = function () {\n  // this.props is actually a ReactElement\n  return this.props;\n};\n\n/**\n * Mounting is the process of initializing a React component by creating its\n * representative DOM elements and inserting them into a supplied `container`.\n * Any prior content inside `container` is destroyed in the process.\n *\n *   ReactMount.render(\n *     component,\n *     document.getElementById('container')\n *   );\n *\n *   <div id=\"container\">                   <-- Supplied `container`.\n *     <div data-reactid=\".3\">              <-- Rendered reactRoot of React\n *       // ...                                 component.\n *     </div>\n *   </div>\n *\n * Inside of `container`, the first element rendered is the \"reactRoot\".\n */\nvar ReactMount = {\n\n  TopLevelWrapper: TopLevelWrapper,\n\n  /** Exposed for debugging purposes **/\n  _instancesByReactRootID: instancesByReactRootID,\n\n  /**\n   * This is a hook provided to support rendering React components while\n   * ensuring that the apparent scroll position of its `container` does not\n   * change.\n   *\n   * @param {DOMElement} container The `container` being rendered into.\n   * @param {function} renderCallback This must be called once to do the render.\n   */\n  scrollMonitor: function (container, renderCallback) {\n    renderCallback();\n  },\n\n  /**\n   * Take a component that's already mounted into the DOM and replace its props\n   * @param {ReactComponent} prevComponent component instance already in the DOM\n   * @param {ReactElement} nextElement component instance to render\n   * @param {DOMElement} container container to render into\n   * @param {?function} callback function triggered on completion\n   */\n  _updateRootComponent: function (prevComponent, nextElement, container, callback) {\n    ReactMount.scrollMonitor(container, function () {\n      ReactUpdateQueue.enqueueElementInternal(prevComponent, nextElement);\n      if (callback) {\n        ReactUpdateQueue.enqueueCallbackInternal(prevComponent, callback);\n      }\n    });\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Record the root element in case it later gets transplanted.\n      rootElementsByReactRootID[getReactRootID(container)] = getReactRootElementInContainer(container);\n    }\n\n    return prevComponent;\n  },\n\n  /**\n   * Register a component into the instance map and starts scroll value\n   * monitoring\n   * @param {ReactComponent} nextComponent component instance to render\n   * @param {DOMElement} container container to render into\n   * @return {string} reactRoot ID prefix\n   */\n  _registerComponent: function (nextComponent, container) {\n    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, '_registerComponent(...): Target container is not a DOM element.') : invariant(false) : undefined;\n\n    ReactBrowserEventEmitter.ensureScrollValueMonitoring();\n\n    var reactRootID = ReactMount.registerContainer(container);\n    instancesByReactRootID[reactRootID] = nextComponent;\n    return reactRootID;\n  },\n\n  /**\n   * Render a new component into the DOM.\n   * @param {ReactElement} nextElement element to render\n   * @param {DOMElement} container container to render into\n   * @param {boolean} shouldReuseMarkup if we should skip the markup insertion\n   * @return {ReactComponent} nextComponent\n   */\n  _renderNewRootComponent: function (nextElement, container, shouldReuseMarkup, context) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case.\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, '_renderNewRootComponent(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from ' + 'render is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;\n\n    var componentInstance = instantiateReactComponent(nextElement, null);\n    var reactRootID = ReactMount._registerComponent(componentInstance, container);\n\n    // The initial render is synchronous but any updates that happen during\n    // rendering, in componentWillMount or componentDidMount, will be batched\n    // according to the current batching strategy.\n\n    ReactUpdates.batchedUpdates(batchedMountComponentIntoNode, componentInstance, reactRootID, container, shouldReuseMarkup, context);\n\n    if (process.env.NODE_ENV !== 'production') {\n      // Record the root element in case it later gets transplanted.\n      rootElementsByReactRootID[reactRootID] = getReactRootElementInContainer(container);\n    }\n\n    return componentInstance;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactComponent} parentComponent The conceptual parent of this render tree.\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n    !(parentComponent != null && parentComponent._reactInternalInstance != null) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'parentComponent must be a valid React Component') : invariant(false) : undefined;\n    return ReactMount._renderSubtreeIntoContainer(parentComponent, nextElement, container, callback);\n  },\n\n  _renderSubtreeIntoContainer: function (parentComponent, nextElement, container, callback) {\n    !ReactElement.isValidElement(nextElement) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactDOM.render(): Invalid component element.%s', typeof nextElement === 'string' ? ' Instead of passing an element string, make sure to instantiate ' + 'it by passing it to React.createElement.' : typeof nextElement === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' :\n    // Check if it quacks like an element\n    nextElement != null && nextElement.props !== undefined ? ' This may be caused by unintentionally loading two independent ' + 'copies of React.' : '') : invariant(false) : undefined;\n\n    process.env.NODE_ENV !== 'production' ? warning(!container || !container.tagName || container.tagName.toUpperCase() !== 'BODY', 'render(): Rendering components directly into document.body is ' + 'discouraged, since its children are often manipulated by third-party ' + 'scripts and browser extensions. This may lead to subtle ' + 'reconciliation issues. Try rendering into a container element created ' + 'for your app.') : undefined;\n\n    var nextWrappedElement = new ReactElement(TopLevelWrapper, null, null, null, null, null, nextElement);\n\n    var prevComponent = instancesByReactRootID[getReactRootID(container)];\n\n    if (prevComponent) {\n      var prevWrappedElement = prevComponent._currentElement;\n      var prevElement = prevWrappedElement.props;\n      if (shouldUpdateReactComponent(prevElement, nextElement)) {\n        var publicInst = prevComponent._renderedComponent.getPublicInstance();\n        var updatedCallback = callback && function () {\n          callback.call(publicInst);\n        };\n        ReactMount._updateRootComponent(prevComponent, nextWrappedElement, container, updatedCallback);\n        return publicInst;\n      } else {\n        ReactMount.unmountComponentAtNode(container);\n      }\n    }\n\n    var reactRootElement = getReactRootElementInContainer(container);\n    var containerHasReactMarkup = reactRootElement && !!internalGetID(reactRootElement);\n    var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\n    if (process.env.NODE_ENV !== 'production') {\n      process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'render(...): Replacing React-rendered children with a new root ' + 'component. If you intended to update the children of this node, ' + 'you should instead have the existing children update their state ' + 'and render the new components instead of calling ReactDOM.render.') : undefined;\n\n      if (!containerHasReactMarkup || reactRootElement.nextSibling) {\n        var rootElementSibling = reactRootElement;\n        while (rootElementSibling) {\n          if (internalGetID(rootElementSibling)) {\n            process.env.NODE_ENV !== 'production' ? warning(false, 'render(): Target node has markup rendered by React, but there ' + 'are unrelated nodes as well. This is most commonly caused by ' + 'white-space inserted around server-rendered markup.') : undefined;\n            break;\n          }\n          rootElementSibling = rootElementSibling.nextSibling;\n        }\n      }\n    }\n\n    var shouldReuseMarkup = containerHasReactMarkup && !prevComponent && !containerHasNonRootReactChild;\n    var component = ReactMount._renderNewRootComponent(nextWrappedElement, container, shouldReuseMarkup, parentComponent != null ? parentComponent._reactInternalInstance._processChildContext(parentComponent._reactInternalInstance._context) : emptyObject)._renderedComponent.getPublicInstance();\n    if (callback) {\n      callback.call(component);\n    }\n    return component;\n  },\n\n  /**\n   * Renders a React component into the DOM in the supplied `container`.\n   *\n   * If the React component was previously rendered into `container`, this will\n   * perform an update on it and only mutate the DOM as necessary to reflect the\n   * latest React component.\n   *\n   * @param {ReactElement} nextElement Component element to render.\n   * @param {DOMElement} container DOM element to render into.\n   * @param {?function} callback function triggered on completion\n   * @return {ReactComponent} Component instance rendered in `container`.\n   */\n  render: function (nextElement, container, callback) {\n    return ReactMount._renderSubtreeIntoContainer(null, nextElement, container, callback);\n  },\n\n  /**\n   * Registers a container node into which React components will be rendered.\n   * This also creates the \"reactRoot\" ID that will be assigned to the element\n   * rendered within.\n   *\n   * @param {DOMElement} container DOM element to register as a container.\n   * @return {string} The \"reactRoot\" ID of elements rendered within.\n   */\n  registerContainer: function (container) {\n    var reactRootID = getReactRootID(container);\n    if (reactRootID) {\n      // If one exists, make sure it is a valid \"reactRoot\" ID.\n      reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(reactRootID);\n    }\n    if (!reactRootID) {\n      // No valid \"reactRoot\" ID found, create one.\n      reactRootID = ReactInstanceHandles.createReactRootID();\n    }\n    containersByReactRootID[reactRootID] = container;\n    return reactRootID;\n  },\n\n  /**\n   * Unmounts and destroys the React component rendered in the `container`.\n   *\n   * @param {DOMElement} container DOM element containing a React component.\n   * @return {boolean} True if a component was found in and unmounted from\n   *                   `container`\n   */\n  unmountComponentAtNode: function (container) {\n    // Various parts of our code (such as ReactCompositeComponent's\n    // _renderValidatedComponent) assume that calls to render aren't nested;\n    // verify that that's the case. (Strictly speaking, unmounting won't cause a\n    // render but we still don't expect to be in a render call here.)\n    process.env.NODE_ENV !== 'production' ? warning(ReactCurrentOwner.current == null, 'unmountComponentAtNode(): Render methods should be a pure function ' + 'of props and state; triggering nested component updates from render ' + 'is not allowed. If necessary, trigger nested updates in ' + 'componentDidUpdate. Check the render method of %s.', ReactCurrentOwner.current && ReactCurrentOwner.current.getName() || 'ReactCompositeComponent') : undefined;\n\n    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'unmountComponentAtNode(...): Target container is not a DOM element.') : invariant(false) : undefined;\n\n    var reactRootID = getReactRootID(container);\n    var component = instancesByReactRootID[reactRootID];\n    if (!component) {\n      // Check if the node being unmounted was rendered by React, but isn't a\n      // root node.\n      var containerHasNonRootReactChild = hasNonRootReactChild(container);\n\n      // Check if the container itself is a React root node.\n      var containerID = internalGetID(container);\n      var isContainerReactRoot = containerID && containerID === ReactInstanceHandles.getReactRootIDFromNodeID(containerID);\n\n      if (process.env.NODE_ENV !== 'production') {\n        process.env.NODE_ENV !== 'production' ? warning(!containerHasNonRootReactChild, 'unmountComponentAtNode(): The node you\\'re attempting to unmount ' + 'was rendered by React and is not a top-level container. %s', isContainerReactRoot ? 'You may have accidentally passed in a React root node instead ' + 'of its container.' : 'Instead, have the parent component update its state and ' + 'rerender in order to remove this component.') : undefined;\n      }\n\n      return false;\n    }\n    ReactUpdates.batchedUpdates(unmountComponentFromNode, component, container);\n    delete instancesByReactRootID[reactRootID];\n    delete containersByReactRootID[reactRootID];\n    if (process.env.NODE_ENV !== 'production') {\n      delete rootElementsByReactRootID[reactRootID];\n    }\n    return true;\n  },\n\n  /**\n   * Finds the container DOM element that contains React component to which the\n   * supplied DOM `id` belongs.\n   *\n   * @param {string} id The ID of an element rendered by a React component.\n   * @return {?DOMElement} DOM element that contains the `id`.\n   */\n  findReactContainerForID: function (id) {\n    var reactRootID = ReactInstanceHandles.getReactRootIDFromNodeID(id);\n    var container = containersByReactRootID[reactRootID];\n\n    if (process.env.NODE_ENV !== 'production') {\n      var rootElement = rootElementsByReactRootID[reactRootID];\n      if (rootElement && rootElement.parentNode !== container) {\n        process.env.NODE_ENV !== 'production' ? warning(\n        // Call internalGetID here because getID calls isValid which calls\n        // findReactContainerForID (this function).\n        internalGetID(rootElement) === reactRootID, 'ReactMount: Root element ID differed from reactRootID.') : undefined;\n        var containerChild = container.firstChild;\n        if (containerChild && reactRootID === internalGetID(containerChild)) {\n          // If the container has a new child with the same ID as the old\n          // root element, then rootElementsByReactRootID[reactRootID] is\n          // just stale and needs to be updated. The case that deserves a\n          // warning is when the container is empty.\n          rootElementsByReactRootID[reactRootID] = containerChild;\n        } else {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'ReactMount: Root element has been removed from its original ' + 'container. New container: %s', rootElement.parentNode) : undefined;\n        }\n      }\n    }\n\n    return container;\n  },\n\n  /**\n   * Finds an element rendered by React with the supplied ID.\n   *\n   * @param {string} id ID of a DOM node in the React component.\n   * @return {DOMElement} Root DOM node of the React component.\n   */\n  findReactNodeByID: function (id) {\n    var reactRoot = ReactMount.findReactContainerForID(id);\n    return ReactMount.findComponentRoot(reactRoot, id);\n  },\n\n  /**\n   * Traverses up the ancestors of the supplied node to find a node that is a\n   * DOM representation of a React component rendered by this copy of React.\n   *\n   * @param {*} node\n   * @return {?DOMEventTarget}\n   * @internal\n   */\n  getFirstReactDOM: function (node) {\n    return findFirstReactDOMImpl(node);\n  },\n\n  /**\n   * Finds a node with the supplied `targetID` inside of the supplied\n   * `ancestorNode`.  Exploits the ID naming scheme to perform the search\n   * quickly.\n   *\n   * @param {DOMEventTarget} ancestorNode Search from this root.\n   * @pararm {string} targetID ID of the DOM representation of the component.\n   * @return {DOMEventTarget} DOM node with the supplied `targetID`.\n   * @internal\n   */\n  findComponentRoot: function (ancestorNode, targetID) {\n    var firstChildren = findComponentRootReusableArray;\n    var childIndex = 0;\n\n    var deepestAncestor = findDeepestCachedAncestor(targetID) || ancestorNode;\n\n    if (process.env.NODE_ENV !== 'production') {\n      // This will throw on the next line; give an early warning\n      process.env.NODE_ENV !== 'production' ? warning(deepestAncestor != null, 'React can\\'t find the root component node for data-reactid value ' + '`%s`. If you\\'re seeing this message, it probably means that ' + 'you\\'ve loaded two copies of React on the page. At this time, only ' + 'a single copy of React can be loaded at a time.', targetID) : undefined;\n    }\n\n    firstChildren[0] = deepestAncestor.firstChild;\n    firstChildren.length = 1;\n\n    while (childIndex < firstChildren.length) {\n      var child = firstChildren[childIndex++];\n      var targetChild;\n\n      while (child) {\n        var childID = ReactMount.getID(child);\n        if (childID) {\n          // Even if we find the node we're looking for, we finish looping\n          // through its siblings to ensure they're cached so that we don't have\n          // to revisit this node again. Otherwise, we make n^2 calls to getID\n          // when visiting the many children of a single node in order.\n\n          if (targetID === childID) {\n            targetChild = child;\n          } else if (ReactInstanceHandles.isAncestorIDOf(childID, targetID)) {\n            // If we find a child whose ID is an ancestor of the given ID,\n            // then we can be sure that we only want to search the subtree\n            // rooted at this child, so we can throw out the rest of the\n            // search state.\n            firstChildren.length = childIndex = 0;\n            firstChildren.push(child.firstChild);\n          }\n        } else {\n          // If this child had no ID, then there's a chance that it was\n          // injected automatically by the browser, as when a `<table>`\n          // element sprouts an extra `<tbody>` child as a side effect of\n          // `.innerHTML` parsing. Optimistically continue down this\n          // branch, but not before examining the other siblings.\n          firstChildren.push(child.firstChild);\n        }\n\n        child = child.nextSibling;\n      }\n\n      if (targetChild) {\n        // Emptying firstChildren/findComponentRootReusableArray is\n        // not necessary for correctness, but it helps the GC reclaim\n        // any nodes that were left at the end of the search.\n        firstChildren.length = 0;\n\n        return targetChild;\n      }\n    }\n\n    firstChildren.length = 0;\n\n    !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findComponentRoot(..., %s): Unable to find element. This probably ' + 'means the DOM was unexpectedly mutated (e.g., by the browser), ' + 'usually due to forgetting a <tbody> when using tables, nesting tags ' + 'like <form>, <p>, or <a>, or using non-SVG elements in an <svg> ' + 'parent. ' + 'Try inspecting the child nodes of the element with React ID `%s`.', targetID, ReactMount.getID(ancestorNode)) : invariant(false) : undefined;\n  },\n\n  _mountImageIntoNode: function (markup, container, shouldReuseMarkup, transaction) {\n    !(container && (container.nodeType === ELEMENT_NODE_TYPE || container.nodeType === DOC_NODE_TYPE || container.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE)) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'mountComponentIntoNode(...): Target container is not valid.') : invariant(false) : undefined;\n\n    if (shouldReuseMarkup) {\n      var rootElement = getReactRootElementInContainer(container);\n      if (ReactMarkupChecksum.canReuseMarkup(markup, rootElement)) {\n        return;\n      } else {\n        var checksum = rootElement.getAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n        rootElement.removeAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME);\n\n        var rootMarkup = rootElement.outerHTML;\n        rootElement.setAttribute(ReactMarkupChecksum.CHECKSUM_ATTR_NAME, checksum);\n\n        var normalizedMarkup = markup;\n        if (process.env.NODE_ENV !== 'production') {\n          // because rootMarkup is retrieved from the DOM, various normalizations\n          // will have occurred which will not be present in `markup`. Here,\n          // insert markup into a <div> or <iframe> depending on the container\n          // type to perform the same normalizations before comparing.\n          var normalizer;\n          if (container.nodeType === ELEMENT_NODE_TYPE) {\n            normalizer = document.createElement('div');\n            normalizer.innerHTML = markup;\n            normalizedMarkup = normalizer.innerHTML;\n          } else {\n            normalizer = document.createElement('iframe');\n            document.body.appendChild(normalizer);\n            normalizer.contentDocument.write(markup);\n            normalizedMarkup = normalizer.contentDocument.documentElement.outerHTML;\n            document.body.removeChild(normalizer);\n          }\n        }\n\n        var diffIndex = firstDifferenceIndex(normalizedMarkup, rootMarkup);\n        var difference = ' (client) ' + normalizedMarkup.substring(diffIndex - 20, diffIndex + 20) + '\\n (server) ' + rootMarkup.substring(diffIndex - 20, diffIndex + 20);\n\n        !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\\'re trying to render a component to the document using ' + 'server rendering but the checksum was invalid. This usually ' + 'means you rendered a different component type or props on ' + 'the client from the one on the server, or your render() ' + 'methods are impure. React cannot handle this case due to ' + 'cross-browser quirks by rendering at the document root. You ' + 'should look for environment dependent code in your components ' + 'and ensure the props are the same client and server side:\\n%s', difference) : invariant(false) : undefined;\n\n        if (process.env.NODE_ENV !== 'production') {\n          process.env.NODE_ENV !== 'production' ? warning(false, 'React attempted to reuse markup in a container but the ' + 'checksum was invalid. This generally means that you are ' + 'using server rendering and the markup generated on the ' + 'server was not what the client was expecting. React injected ' + 'new markup to compensate which works but you have lost many ' + 'of the benefits of server rendering. Instead, figure out ' + 'why the markup being generated is different on the client ' + 'or server:\\n%s', difference) : undefined;\n        }\n      }\n    }\n\n    !(container.nodeType !== DOC_NODE_TYPE) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'You\\'re trying to render a component to the document but ' + 'you didn\\'t use server rendering. We can\\'t do this ' + 'without using server rendering due to cross-browser quirks. ' + 'See ReactDOMServer.renderToString() for server rendering.') : invariant(false) : undefined;\n\n    if (transaction.useCreateElement) {\n      while (container.lastChild) {\n        container.removeChild(container.lastChild);\n      }\n      container.appendChild(markup);\n    } else {\n      setInnerHTML(container, markup);\n    }\n  },\n\n  ownerDocumentContextKey: ownerDocumentContextKey,\n\n  /**\n   * React ID utilities.\n   */\n\n  getReactRootID: getReactRootID,\n\n  getID: getID,\n\n  setID: setID,\n\n  getNode: getNode,\n\n  getNodeFromInstance: getNodeFromInstance,\n\n  isValid: isValid,\n\n  purgeID: purgeID\n};\n\nReactPerf.measureMethods(ReactMount, 'ReactMount', {\n  _renderNewRootComponent: '_renderNewRootComponent',\n  _mountImageIntoNode: '_mountImageIntoNode'\n});\n\nmodule.exports = ReactMount;"]}