{"version":3,"sources":["ReactTestUtils.js"],"names":[],"mappings":"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","file":"ReactTestUtils-compiled.js","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactTestUtils\n */\n\n'use strict';\n\nvar EventConstants = require('./EventConstants');\nvar EventPluginHub = require('./EventPluginHub');\nvar EventPropagators = require('./EventPropagators');\nvar React = require('./React');\nvar ReactDOM = require('./ReactDOM');\nvar ReactElement = require('./ReactElement');\nvar ReactBrowserEventEmitter = require('./ReactBrowserEventEmitter');\nvar ReactCompositeComponent = require('./ReactCompositeComponent');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\nvar ReactInstanceMap = require('./ReactInstanceMap');\nvar ReactMount = require('./ReactMount');\nvar ReactUpdates = require('./ReactUpdates');\nvar SyntheticEvent = require('./SyntheticEvent');\n\nvar assign = require('./Object.assign');\nvar emptyObject = require('fbjs/lib/emptyObject');\nvar findDOMNode = require('./findDOMNode');\nvar invariant = require('fbjs/lib/invariant');\n\nvar topLevelTypes = EventConstants.topLevelTypes;\n\nfunction Event(suffix) {}\n\n/**\n * @class ReactTestUtils\n */\n\nfunction findAllInRenderedTreeInternal(inst, test) {\n  if (!inst || !inst.getPublicInstance) {\n    return [];\n  }\n  var publicInst = inst.getPublicInstance();\n  var ret = test(publicInst) ? [publicInst] : [];\n  var currentElement = inst._currentElement;\n  if (ReactTestUtils.isDOMComponent(publicInst)) {\n    var renderedChildren = inst._renderedChildren;\n    var key;\n    for (key in renderedChildren) {\n      if (!renderedChildren.hasOwnProperty(key)) {\n        continue;\n      }\n      ret = ret.concat(findAllInRenderedTreeInternal(renderedChildren[key], test));\n    }\n  } else if (ReactElement.isValidElement(currentElement) && typeof currentElement.type === 'function') {\n    ret = ret.concat(findAllInRenderedTreeInternal(inst._renderedComponent, test));\n  }\n  return ret;\n}\n\n/**\n * Todo: Support the entire DOM.scry query syntax. For now, these simple\n * utilities will suffice for testing purposes.\n * @lends ReactTestUtils\n */\nvar ReactTestUtils = {\n  renderIntoDocument: function (instance) {\n    var div = document.createElement('div');\n    // None of our tests actually require attaching the container to the\n    // DOM, and doing so creates a mess that we rely on test isolation to\n    // clean up, so we're going to stop honoring the name of this method\n    // (and probably rename it eventually) if no problems arise.\n    // document.documentElement.appendChild(div);\n    return ReactDOM.render(instance, div);\n  },\n\n  isElement: function (element) {\n    return ReactElement.isValidElement(element);\n  },\n\n  isElementOfType: function (inst, convenienceConstructor) {\n    return ReactElement.isValidElement(inst) && inst.type === convenienceConstructor;\n  },\n\n  isDOMComponent: function (inst) {\n    return !!(inst && inst.nodeType === 1 && inst.tagName);\n  },\n\n  isDOMComponentElement: function (inst) {\n    return !!(inst && ReactElement.isValidElement(inst) && !!inst.tagName);\n  },\n\n  isCompositeComponent: function (inst) {\n    if (ReactTestUtils.isDOMComponent(inst)) {\n      // Accessing inst.setState warns; just return false as that'll be what\n      // this returns when we have DOM nodes as refs directly\n      return false;\n    }\n    return inst != null && typeof inst.render === 'function' && typeof inst.setState === 'function';\n  },\n\n  isCompositeComponentWithType: function (inst, type) {\n    if (!ReactTestUtils.isCompositeComponent(inst)) {\n      return false;\n    }\n    var internalInstance = ReactInstanceMap.get(inst);\n    var constructor = internalInstance._currentElement.type;\n\n    return constructor === type;\n  },\n\n  isCompositeComponentElement: function (inst) {\n    if (!ReactElement.isValidElement(inst)) {\n      return false;\n    }\n    // We check the prototype of the type that will get mounted, not the\n    // instance itself. This is a future proof way of duck typing.\n    var prototype = inst.type.prototype;\n    return typeof prototype.render === 'function' && typeof prototype.setState === 'function';\n  },\n\n  isCompositeComponentElementWithType: function (inst, type) {\n    var internalInstance = ReactInstanceMap.get(inst);\n    var constructor = internalInstance._currentElement.type;\n\n    return !!(ReactTestUtils.isCompositeComponentElement(inst) && constructor === type);\n  },\n\n  getRenderedChildOfCompositeComponent: function (inst) {\n    if (!ReactTestUtils.isCompositeComponent(inst)) {\n      return null;\n    }\n    var internalInstance = ReactInstanceMap.get(inst);\n    return internalInstance._renderedComponent.getPublicInstance();\n  },\n\n  findAllInRenderedTree: function (inst, test) {\n    if (!inst) {\n      return [];\n    }\n    !ReactTestUtils.isCompositeComponent(inst) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'findAllInRenderedTree(...): instance must be a composite component') : invariant(false) : undefined;\n    return findAllInRenderedTreeInternal(ReactInstanceMap.get(inst), test);\n  },\n\n  /**\n   * Finds all instance of components in the rendered tree that are DOM\n   * components with the class name matching `className`.\n   * @return {array} an array of all the matches.\n   */\n  scryRenderedDOMComponentsWithClass: function (root, classNames) {\n    if (!Array.isArray(classNames)) {\n      classNames = classNames.split(/\\s+/);\n    }\n    return ReactTestUtils.findAllInRenderedTree(root, function (inst) {\n      if (ReactTestUtils.isDOMComponent(inst)) {\n        var className = inst.className;\n        if (typeof className !== 'string') {\n          // SVG, probably.\n          className = inst.getAttribute('class') || '';\n        }\n        var classList = className.split(/\\s+/);\n        return classNames.every(function (name) {\n          return classList.indexOf(name) !== -1;\n        });\n      }\n      return false;\n    });\n  },\n\n  /**\n   * Like scryRenderedDOMComponentsWithClass but expects there to be one result,\n   * and returns that one result, or throws exception if there is any other\n   * number of matches besides one.\n   * @return {!ReactDOMComponent} The one match.\n   */\n  findRenderedDOMComponentWithClass: function (root, className) {\n    var all = ReactTestUtils.scryRenderedDOMComponentsWithClass(root, className);\n    if (all.length !== 1) {\n      throw new Error('Did not find exactly one match ' + '(found: ' + all.length + ') for class:' + className);\n    }\n    return all[0];\n  },\n\n  /**\n   * Finds all instance of components in the rendered tree that are DOM\n   * components with the tag name matching `tagName`.\n   * @return {array} an array of all the matches.\n   */\n  scryRenderedDOMComponentsWithTag: function (root, tagName) {\n    return ReactTestUtils.findAllInRenderedTree(root, function (inst) {\n      return ReactTestUtils.isDOMComponent(inst) && inst.tagName.toUpperCase() === tagName.toUpperCase();\n    });\n  },\n\n  /**\n   * Like scryRenderedDOMComponentsWithTag but expects there to be one result,\n   * and returns that one result, or throws exception if there is any other\n   * number of matches besides one.\n   * @return {!ReactDOMComponent} The one match.\n   */\n  findRenderedDOMComponentWithTag: function (root, tagName) {\n    var all = ReactTestUtils.scryRenderedDOMComponentsWithTag(root, tagName);\n    if (all.length !== 1) {\n      throw new Error('Did not find exactly one match for tag:' + tagName);\n    }\n    return all[0];\n  },\n\n  /**\n   * Finds all instances of components with type equal to `componentType`.\n   * @return {array} an array of all the matches.\n   */\n  scryRenderedComponentsWithType: function (root, componentType) {\n    return ReactTestUtils.findAllInRenderedTree(root, function (inst) {\n      return ReactTestUtils.isCompositeComponentWithType(inst, componentType);\n    });\n  },\n\n  /**\n   * Same as `scryRenderedComponentsWithType` but expects there to be one result\n   * and returns that one result, or throws exception if there is any other\n   * number of matches besides one.\n   * @return {!ReactComponent} The one match.\n   */\n  findRenderedComponentWithType: function (root, componentType) {\n    var all = ReactTestUtils.scryRenderedComponentsWithType(root, componentType);\n    if (all.length !== 1) {\n      throw new Error('Did not find exactly one match for componentType:' + componentType + ' (found ' + all.length + ')');\n    }\n    return all[0];\n  },\n\n  /**\n   * Pass a mocked component module to this method to augment it with\n   * useful methods that allow it to be used as a dummy React component.\n   * Instead of rendering as usual, the component will become a simple\n   * <div> containing any provided children.\n   *\n   * @param {object} module the mock function object exported from a\n   *                        module that defines the component to be mocked\n   * @param {?string} mockTagName optional dummy root tag name to return\n   *                              from render method (overrides\n   *                              module.mockTagName if provided)\n   * @return {object} the ReactTestUtils object (for chaining)\n   */\n  mockComponent: function (module, mockTagName) {\n    mockTagName = mockTagName || module.mockTagName || 'div';\n\n    module.prototype.render.mockImplementation(function () {\n      return React.createElement(mockTagName, null, this.props.children);\n    });\n\n    return this;\n  },\n\n  /**\n   * Simulates a top level event being dispatched from a raw event that occurred\n   * on an `Element` node.\n   * @param {Object} topLevelType A type from `EventConstants.topLevelTypes`\n   * @param {!Element} node The dom to simulate an event occurring on.\n   * @param {?Event} fakeNativeEvent Fake native event to use in SyntheticEvent.\n   */\n  simulateNativeEventOnNode: function (topLevelType, node, fakeNativeEvent) {\n    fakeNativeEvent.target = node;\n    ReactBrowserEventEmitter.ReactEventListener.dispatchEvent(topLevelType, fakeNativeEvent);\n  },\n\n  /**\n   * Simulates a top level event being dispatched from a raw event that occurred\n   * on the `ReactDOMComponent` `comp`.\n   * @param {Object} topLevelType A type from `EventConstants.topLevelTypes`.\n   * @param {!ReactDOMComponent} comp\n   * @param {?Event} fakeNativeEvent Fake native event to use in SyntheticEvent.\n   */\n  simulateNativeEventOnDOMComponent: function (topLevelType, comp, fakeNativeEvent) {\n    ReactTestUtils.simulateNativeEventOnNode(topLevelType, findDOMNode(comp), fakeNativeEvent);\n  },\n\n  nativeTouchData: function (x, y) {\n    return {\n      touches: [{ pageX: x, pageY: y }]\n    };\n  },\n\n  createRenderer: function () {\n    return new ReactShallowRenderer();\n  },\n\n  Simulate: null,\n  SimulateNative: {}\n};\n\n/**\n * @class ReactShallowRenderer\n */\nvar ReactShallowRenderer = function () {\n  this._instance = null;\n};\n\nReactShallowRenderer.prototype.getRenderOutput = function () {\n  return this._instance && this._instance._renderedComponent && this._instance._renderedComponent._renderedOutput || null;\n};\n\nvar NoopInternalComponent = function (element) {\n  this._renderedOutput = element;\n  this._currentElement = element;\n};\n\nNoopInternalComponent.prototype = {\n\n  mountComponent: function () {},\n\n  receiveComponent: function (element) {\n    this._renderedOutput = element;\n    this._currentElement = element;\n  },\n\n  unmountComponent: function () {},\n\n  getPublicInstance: function () {\n    return null;\n  }\n};\n\nvar ShallowComponentWrapper = function () {};\nassign(ShallowComponentWrapper.prototype, ReactCompositeComponent.Mixin, {\n  _instantiateReactComponent: function (element) {\n    return new NoopInternalComponent(element);\n  },\n  _replaceNodeWithMarkupByID: function () {},\n  _renderValidatedComponent: ReactCompositeComponent.Mixin._renderValidatedComponentWithoutOwnerOrContext\n});\n\nReactShallowRenderer.prototype.render = function (element, context) {\n  !ReactElement.isValidElement(element) ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactShallowRenderer render(): Invalid component element.%s', typeof element === 'function' ? ' Instead of passing a component class, make sure to instantiate ' + 'it by passing it to React.createElement.' : '') : invariant(false) : undefined;\n  !(typeof element.type !== 'string') ? process.env.NODE_ENV !== 'production' ? invariant(false, 'ReactShallowRenderer render(): Shallow rendering works only with custom ' + 'components, not primitives (%s). Instead of calling `.render(el)` and ' + 'inspecting the rendered output, look at `el.props` directly instead.', element.type) : invariant(false) : undefined;\n\n  if (!context) {\n    context = emptyObject;\n  }\n  var transaction = ReactUpdates.ReactReconcileTransaction.getPooled(false);\n  this._render(element, transaction, context);\n  ReactUpdates.ReactReconcileTransaction.release(transaction);\n};\n\nReactShallowRenderer.prototype.unmount = function () {\n  if (this._instance) {\n    this._instance.unmountComponent();\n  }\n};\n\nReactShallowRenderer.prototype._render = function (element, transaction, context) {\n  if (this._instance) {\n    this._instance.receiveComponent(element, transaction, context);\n  } else {\n    var rootID = ReactInstanceHandles.createReactRootID();\n    var instance = new ShallowComponentWrapper(element.type);\n    instance.construct(element);\n\n    instance.mountComponent(rootID, transaction, context);\n\n    this._instance = instance;\n  }\n};\n\n/**\n * Exports:\n *\n * - `ReactTestUtils.Simulate.click(Element/ReactDOMComponent)`\n * - `ReactTestUtils.Simulate.mouseMove(Element/ReactDOMComponent)`\n * - `ReactTestUtils.Simulate.change(Element/ReactDOMComponent)`\n * - ... (All keys from event plugin `eventTypes` objects)\n */\nfunction makeSimulator(eventType) {\n  return function (domComponentOrNode, eventData) {\n    var node;\n    if (ReactTestUtils.isDOMComponent(domComponentOrNode)) {\n      node = findDOMNode(domComponentOrNode);\n    } else if (domComponentOrNode.tagName) {\n      node = domComponentOrNode;\n    }\n\n    var dispatchConfig = ReactBrowserEventEmitter.eventNameDispatchConfigs[eventType];\n\n    var fakeNativeEvent = new Event();\n    fakeNativeEvent.target = node;\n    // We don't use SyntheticEvent.getPooled in order to not have to worry about\n    // properly destroying any properties assigned from `eventData` upon release\n    var event = new SyntheticEvent(dispatchConfig, ReactMount.getID(node), fakeNativeEvent, node);\n    assign(event, eventData);\n\n    if (dispatchConfig.phasedRegistrationNames) {\n      EventPropagators.accumulateTwoPhaseDispatches(event);\n    } else {\n      EventPropagators.accumulateDirectDispatches(event);\n    }\n\n    ReactUpdates.batchedUpdates(function () {\n      EventPluginHub.enqueueEvents(event);\n      EventPluginHub.processEventQueue(true);\n    });\n  };\n}\n\nfunction buildSimulators() {\n  ReactTestUtils.Simulate = {};\n\n  var eventType;\n  for (eventType in ReactBrowserEventEmitter.eventNameDispatchConfigs) {\n    /**\n     * @param {!Element|ReactDOMComponent} domComponentOrNode\n     * @param {?object} eventData Fake event data to use in SyntheticEvent.\n     */\n    ReactTestUtils.Simulate[eventType] = makeSimulator(eventType);\n  }\n}\n\n// Rebuild ReactTestUtils.Simulate whenever event plugins are injected\nvar oldInjectEventPluginOrder = EventPluginHub.injection.injectEventPluginOrder;\nEventPluginHub.injection.injectEventPluginOrder = function () {\n  oldInjectEventPluginOrder.apply(this, arguments);\n  buildSimulators();\n};\nvar oldInjectEventPlugins = EventPluginHub.injection.injectEventPluginsByName;\nEventPluginHub.injection.injectEventPluginsByName = function () {\n  oldInjectEventPlugins.apply(this, arguments);\n  buildSimulators();\n};\n\nbuildSimulators();\n\n/**\n * Exports:\n *\n * - `ReactTestUtils.SimulateNative.click(Element/ReactDOMComponent)`\n * - `ReactTestUtils.SimulateNative.mouseMove(Element/ReactDOMComponent)`\n * - `ReactTestUtils.SimulateNative.mouseIn/ReactDOMComponent)`\n * - `ReactTestUtils.SimulateNative.mouseOut(Element/ReactDOMComponent)`\n * - ... (All keys from `EventConstants.topLevelTypes`)\n *\n * Note: Top level event types are a subset of the entire set of handler types\n * (which include a broader set of \"synthetic\" events). For example, onDragDone\n * is a synthetic event. Except when testing an event plugin or React's event\n * handling code specifically, you probably want to use ReactTestUtils.Simulate\n * to dispatch synthetic events.\n */\n\nfunction makeNativeSimulator(eventType) {\n  return function (domComponentOrNode, nativeEventData) {\n    var fakeNativeEvent = new Event(eventType);\n    assign(fakeNativeEvent, nativeEventData);\n    if (ReactTestUtils.isDOMComponent(domComponentOrNode)) {\n      ReactTestUtils.simulateNativeEventOnDOMComponent(eventType, domComponentOrNode, fakeNativeEvent);\n    } else if (domComponentOrNode.tagName) {\n      // Will allow on actual dom nodes.\n      ReactTestUtils.simulateNativeEventOnNode(eventType, domComponentOrNode, fakeNativeEvent);\n    }\n  };\n}\n\nObject.keys(topLevelTypes).forEach(function (eventType) {\n  // Event type is stored as 'topClick' - we transform that to 'click'\n  var convenienceName = eventType.indexOf('top') === 0 ? eventType.charAt(3).toLowerCase() + eventType.substr(4) : eventType;\n  /**\n   * @param {!Element|ReactDOMComponent} domComponentOrNode\n   * @param {?Event} nativeEventData Fake native event to use in SyntheticEvent.\n   */\n  ReactTestUtils.SimulateNative[convenienceName] = makeNativeSimulator(eventType);\n});\n\nmodule.exports = ReactTestUtils;"]}