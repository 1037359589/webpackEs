{"version":3,"sources":["ReactTransitionGroup.js"],"names":[],"mappings":"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","file":"ReactTransitionGroup-compiled.js","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule ReactTransitionGroup\n */\n\n'use strict';\n\nvar React = require('./React');\nvar ReactTransitionChildMapping = require('./ReactTransitionChildMapping');\n\nvar assign = require('./Object.assign');\nvar emptyFunction = require('fbjs/lib/emptyFunction');\n\nvar ReactTransitionGroup = React.createClass({\n  displayName: 'ReactTransitionGroup',\n\n  propTypes: {\n    component: React.PropTypes.any,\n    childFactory: React.PropTypes.func\n  },\n\n  getDefaultProps: function () {\n    return {\n      component: 'span',\n      childFactory: emptyFunction.thatReturnsArgument\n    };\n  },\n\n  getInitialState: function () {\n    return {\n      children: ReactTransitionChildMapping.getChildMapping(this.props.children)\n    };\n  },\n\n  componentWillMount: function () {\n    this.currentlyTransitioningKeys = {};\n    this.keysToEnter = [];\n    this.keysToLeave = [];\n  },\n\n  componentDidMount: function () {\n    var initialChildMapping = this.state.children;\n    for (var key in initialChildMapping) {\n      if (initialChildMapping[key]) {\n        this.performAppear(key);\n      }\n    }\n  },\n\n  componentWillReceiveProps: function (nextProps) {\n    var nextChildMapping = ReactTransitionChildMapping.getChildMapping(nextProps.children);\n    var prevChildMapping = this.state.children;\n\n    this.setState({\n      children: ReactTransitionChildMapping.mergeChildMappings(prevChildMapping, nextChildMapping)\n    });\n\n    var key;\n\n    for (key in nextChildMapping) {\n      var hasPrev = prevChildMapping && prevChildMapping.hasOwnProperty(key);\n      if (nextChildMapping[key] && !hasPrev && !this.currentlyTransitioningKeys[key]) {\n        this.keysToEnter.push(key);\n      }\n    }\n\n    for (key in prevChildMapping) {\n      var hasNext = nextChildMapping && nextChildMapping.hasOwnProperty(key);\n      if (prevChildMapping[key] && !hasNext && !this.currentlyTransitioningKeys[key]) {\n        this.keysToLeave.push(key);\n      }\n    }\n\n    // If we want to someday check for reordering, we could do it here.\n  },\n\n  componentDidUpdate: function () {\n    var keysToEnter = this.keysToEnter;\n    this.keysToEnter = [];\n    keysToEnter.forEach(this.performEnter);\n\n    var keysToLeave = this.keysToLeave;\n    this.keysToLeave = [];\n    keysToLeave.forEach(this.performLeave);\n  },\n\n  performAppear: function (key) {\n    this.currentlyTransitioningKeys[key] = true;\n\n    var component = this.refs[key];\n\n    if (component.componentWillAppear) {\n      component.componentWillAppear(this._handleDoneAppearing.bind(this, key));\n    } else {\n      this._handleDoneAppearing(key);\n    }\n  },\n\n  _handleDoneAppearing: function (key) {\n    var component = this.refs[key];\n    if (component.componentDidAppear) {\n      component.componentDidAppear();\n    }\n\n    delete this.currentlyTransitioningKeys[key];\n\n    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(this.props.children);\n\n    if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n      // This was removed before it had fully appeared. Remove it.\n      this.performLeave(key);\n    }\n  },\n\n  performEnter: function (key) {\n    this.currentlyTransitioningKeys[key] = true;\n\n    var component = this.refs[key];\n\n    if (component.componentWillEnter) {\n      component.componentWillEnter(this._handleDoneEntering.bind(this, key));\n    } else {\n      this._handleDoneEntering(key);\n    }\n  },\n\n  _handleDoneEntering: function (key) {\n    var component = this.refs[key];\n    if (component.componentDidEnter) {\n      component.componentDidEnter();\n    }\n\n    delete this.currentlyTransitioningKeys[key];\n\n    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(this.props.children);\n\n    if (!currentChildMapping || !currentChildMapping.hasOwnProperty(key)) {\n      // This was removed before it had fully entered. Remove it.\n      this.performLeave(key);\n    }\n  },\n\n  performLeave: function (key) {\n    this.currentlyTransitioningKeys[key] = true;\n\n    var component = this.refs[key];\n    if (component.componentWillLeave) {\n      component.componentWillLeave(this._handleDoneLeaving.bind(this, key));\n    } else {\n      // Note that this is somewhat dangerous b/c it calls setState()\n      // again, effectively mutating the component before all the work\n      // is done.\n      this._handleDoneLeaving(key);\n    }\n  },\n\n  _handleDoneLeaving: function (key) {\n    var component = this.refs[key];\n\n    if (component.componentDidLeave) {\n      component.componentDidLeave();\n    }\n\n    delete this.currentlyTransitioningKeys[key];\n\n    var currentChildMapping = ReactTransitionChildMapping.getChildMapping(this.props.children);\n\n    if (currentChildMapping && currentChildMapping.hasOwnProperty(key)) {\n      // This entered again before it fully left. Add it again.\n      this.performEnter(key);\n    } else {\n      this.setState(function (state) {\n        var newChildren = assign({}, state.children);\n        delete newChildren[key];\n        return { children: newChildren };\n      });\n    }\n  },\n\n  render: function () {\n    // TODO: we could get rid of the need for the wrapper node\n    // by cloning a single child\n    var childrenToRender = [];\n    for (var key in this.state.children) {\n      var child = this.state.children[key];\n      if (child) {\n        // You may need to apply reactive updates to a child as it is leaving.\n        // The normal React way to do it won't work since the child will have\n        // already been removed. In case you need this behavior you can provide\n        // a childFactory function to wrap every child, even the ones that are\n        // leaving.\n        childrenToRender.push(React.cloneElement(this.props.childFactory(child), { ref: key, key: key }));\n      }\n    }\n    return React.createElement(this.props.component, this.props, childrenToRender);\n  }\n});\n\nmodule.exports = ReactTransitionGroup;"]}