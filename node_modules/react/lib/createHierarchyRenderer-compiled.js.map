{"version":3,"sources":["createHierarchyRenderer.js"],"names":[],"mappings":";;;;;;;;;;;AAWA,YAAY,CAAC;;AAEb,IAAI,KAAK,GAAG,OAAO,CAAC,SAAS,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAC,AAyC/B,SAAS,uBAAuB,GAAG;AACjC,OAAK,IAAI,IAAI,GAAG,SAAS,CAAC,MAAM,EAAE,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,IAAI,GAAG,IAAI,EAAE,IAAI,EAAE,EAAE;AAC5F,iBAAa,CAAC,IAAI,CAAC,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;GACvC;;AAED,MAAI,SAAS,CAAC;AACd,MAAI,UAAU,GAAG,aAAa,CAAC,WAAW,CAAC,UAAU,qBAAqB,EAAE,YAAY,EAAE,KAAK,EAAE;AAC/F,QAAI,SAAS,GAAG,KAAK,CAAC,WAAW,CAAC;AAChC,iBAAW,EAAE,YAAY,CAAC,IAAI;AAC9B,YAAM,EAAE,YAAY;AAClB,iBAAS,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AAC5B,eAAO,YAAY,CAAC,KAAK,CAAC,IAAI,EAAE,qBAAqB,CAAC,CAAC;OACxD;KACF,CAAC,CAAC;AACH,WAAO,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC,CAAC;GAClD,EAAE,EAAE,CAAC;;;;;AAAC,AAKP,WAAS,eAAe,CAAC,eAAe,EAAE;AACxC,aAAS,GAAG,aAAa,CAAC,GAAG,CAAC,YAAY;AACxC,aAAO,EAAE,CAAC;KACX,CAAC,CAAC;AACH,mBAAe,CAAC,KAAK,CAAC,IAAI,EAAE,UAAU,CAAC,CAAC;AACxC,WAAO,SAAS,CAAC;GAClB;AACD,SAAO,eAAe,CAAC;CACxB;;AAED,MAAM,CAAC,OAAO,GAAG,uBAAuB,CAAC","file":"createHierarchyRenderer-compiled.js","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule createHierarchyRenderer\n */\n\n'use strict';\n\nvar React = require('./React');\n\n/**\n * Creates a render method that makes it easier to create, render, and inspect a\n * hierarchy of mock React component classes.\n *\n * A component class is created for each of the supplied render methods. Each\n * render method is invoked with the classes created using the render methods\n * that come after it in the supplied list of render methods.\n *\n *   var renderHierarchy = createHierarchyRenderer(\n *     function ComponentA(ComponentB, ComponentC) {...},\n *     function ComponentB(ComponentC) {...},\n *     function ComponentC() {...}\n *   );\n *\n * When the hierarchy is invoked, a two-dimensional array is returned. Each\n * array corresponds to a supplied render method and contains the instances\n * returned by that render method in the order it was invoked.\n *\n *   var instances = renderHierarchy(\n *     function(ComponentA[, ComponentB, ComponentC]) {\n *       ReactDOM.render(<ComponentA />, ...);\n *     })\n *   );\n *   instances[0][0]; // First return value of first render method.\n *   instances[1][0]; // First return value of second render method.\n *   instances[1][1]; // Second return value of second render method.\n *\n * Refs should be used to reference components that are not the return value of\n * render methods.\n *\n *   expect(instances[0][0].refs.X).toBe(...);\n *\n * NOTE: The component classes created for each render method are re-used for\n * each invocation of the hierarchy renderer. If new classes are needed, you\n * should re-execute `createHierarchyRenderer` with the same arguments.\n *\n * @param {array<function>} ...renderMethods\n * @return {function}\n */\nfunction createHierarchyRenderer() {\n  for (var _len = arguments.length, renderMethods = Array(_len), _key = 0; _key < _len; _key++) {\n    renderMethods[_key] = arguments[_key];\n  }\n\n  var instances;\n  var Components = renderMethods.reduceRight(function (ComponentsAccumulator, renderMethod, depth) {\n    var Component = React.createClass({\n      displayName: renderMethod.name,\n      render: function () {\n        instances[depth].push(this);\n        return renderMethod.apply(this, ComponentsAccumulator);\n      }\n    });\n    return [Component].concat(ComponentsAccumulator);\n  }, []);\n  /**\n   * @param {function} renderComponent\n   * @return {array<array<*>>}\n   */\n  function renderHierarchy(renderComponent) {\n    instances = renderMethods.map(function () {\n      return [];\n    });\n    renderComponent.apply(null, Components);\n    return instances;\n  }\n  return renderHierarchy;\n}\n\nmodule.exports = createHierarchyRenderer;"]}