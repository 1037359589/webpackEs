{"version":3,"sources":["getEventCharCode.js"],"names":[],"mappings":";;;;;;;;;;;;AAYA;;;;;;;;;;;;AAAY,CAAC;AAYb,SAAS,gBAAgB,CAAC,WAAW,EAAE;AACrC,MAAI,QAAQ,CAAC;AACb,MAAI,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC;;AAElC,MAAI,UAAU,IAAI,WAAW,EAAE;AAC7B,YAAQ,GAAG,WAAW,CAAC,QAAQ;;;AAAC,AAGhC,QAAI,QAAQ,KAAK,CAAC,IAAI,OAAO,KAAK,EAAE,EAAE;AACpC,cAAQ,GAAG,EAAE,CAAC;KACf;GACF,MAAM;;AAEL,YAAQ,GAAG,OAAO,CAAC;GACpB;;;;AAAA,AAID,MAAI,QAAQ,IAAI,EAAE,IAAI,QAAQ,KAAK,EAAE,EAAE;AACrC,WAAO,QAAQ,CAAC;GACjB;;AAED,SAAO,CAAC,CAAC;CACV;;AAED,MAAM,CAAC,OAAO,GAAG,gBAAgB,CAAC","file":"getEventCharCode-compiled.js","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getEventCharCode\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * `charCode` represents the actual \"character code\" and is safe to use with\n * `String.fromCharCode`. As such, only keys that correspond to printable\n * characters produce a valid `charCode`, the only exception to this is Enter.\n * The Tab-key is considered non-printable and does not have a `charCode`,\n * presumably because it does not produce a tab-character in browsers.\n *\n * @param {object} nativeEvent Native browser event.\n * @return {number} Normalized `charCode` property.\n */\nfunction getEventCharCode(nativeEvent) {\n  var charCode;\n  var keyCode = nativeEvent.keyCode;\n\n  if ('charCode' in nativeEvent) {\n    charCode = nativeEvent.charCode;\n\n    // FF does not set `charCode` for the Enter-key, check against `keyCode`.\n    if (charCode === 0 && keyCode === 13) {\n      charCode = 13;\n    }\n  } else {\n    // IE8 does not implement `charCode`, but `keyCode` has the correct value.\n    charCode = keyCode;\n  }\n\n  // Some non-printable keys are reported in `charCode`/`keyCode`, discard them.\n  // Must not discard the (non-)printable Enter-key.\n  if (charCode >= 32 || charCode === 13) {\n    return charCode;\n  }\n\n  return 0;\n}\n\nmodule.exports = getEventCharCode;"]}