{"version":3,"sources":["getNodeForCharacterOffset.js"],"names":[],"mappings":";;;;;;;;;;;AAWA;;;;;;;;AAAY,CAAC;AAQb,SAAS,WAAW,CAAC,IAAI,EAAE;AACzB,SAAO,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;AAC9B,QAAI,GAAG,IAAI,CAAC,UAAU,CAAC;GACxB;AACD,SAAO,IAAI,CAAC;CACb;;;;;;;;;AAAA,AASD,SAAS,cAAc,CAAC,IAAI,EAAE;AAC5B,SAAO,IAAI,EAAE;AACX,QAAI,IAAI,CAAC,WAAW,EAAE;AACpB,aAAO,IAAI,CAAC,WAAW,CAAC;KACzB;AACD,QAAI,GAAG,IAAI,CAAC,UAAU,CAAC;GACxB;CACF;;;;;;;;;AAAA,AASD,SAAS,yBAAyB,CAAC,IAAI,EAAE,MAAM,EAAE;AAC/C,MAAI,IAAI,GAAG,WAAW,CAAC,IAAI,CAAC,CAAC;AAC7B,MAAI,SAAS,GAAG,CAAC,CAAC;AAClB,MAAI,OAAO,GAAG,CAAC,CAAC;;AAEhB,SAAO,IAAI,EAAE;AACX,QAAI,IAAI,CAAC,QAAQ,KAAK,CAAC,EAAE;AACvB,aAAO,GAAG,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;;AAE9C,UAAI,SAAS,IAAI,MAAM,IAAI,OAAO,IAAI,MAAM,EAAE;AAC5C,eAAO;AACL,cAAI,EAAE,IAAI;AACV,gBAAM,EAAE,MAAM,GAAG,SAAS;SAC3B,CAAC;OACH;;AAED,eAAS,GAAG,OAAO,CAAC;KACrB;;AAED,QAAI,GAAG,WAAW,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC;GAC1C;CACF;;AAED,MAAM,CAAC,OAAO,GAAG,yBAAyB,CAAC","file":"getNodeForCharacterOffset-compiled.js","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule getNodeForCharacterOffset\n */\n\n'use strict';\n\n/**\n * Given any node return the first leaf node without children.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {DOMElement|DOMTextNode}\n */\nfunction getLeafNode(node) {\n  while (node && node.firstChild) {\n    node = node.firstChild;\n  }\n  return node;\n}\n\n/**\n * Get the next sibling within a container. This will walk up the\n * DOM if a node's siblings have been exhausted.\n *\n * @param {DOMElement|DOMTextNode} node\n * @return {?DOMElement|DOMTextNode}\n */\nfunction getSiblingNode(node) {\n  while (node) {\n    if (node.nextSibling) {\n      return node.nextSibling;\n    }\n    node = node.parentNode;\n  }\n}\n\n/**\n * Get object describing the nodes which contain characters at offset.\n *\n * @param {DOMElement|DOMTextNode} root\n * @param {number} offset\n * @return {?object}\n */\nfunction getNodeForCharacterOffset(root, offset) {\n  var node = getLeafNode(root);\n  var nodeStart = 0;\n  var nodeEnd = 0;\n\n  while (node) {\n    if (node.nodeType === 3) {\n      nodeEnd = nodeStart + node.textContent.length;\n\n      if (nodeStart <= offset && nodeEnd >= offset) {\n        return {\n          node: node,\n          offset: offset - nodeStart\n        };\n      }\n\n      nodeStart = nodeEnd;\n    }\n\n    node = getLeafNode(getSiblingNode(node));\n  }\n}\n\nmodule.exports = getNodeForCharacterOffset;"]}