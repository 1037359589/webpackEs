{"version":3,"sources":["shouldUpdateReactComponent.js"],"names":[],"mappings":";;;;;;;;;;;;AAYA;;;;;;;;;;;;;AAAY,CAAC;AAab,SAAS,0BAA0B,CAAC,WAAW,EAAE,WAAW,EAAE;AAC5D,MAAI,SAAS,GAAG,WAAW,KAAK,IAAI,IAAI,WAAW,KAAK,KAAK,CAAC;AAC9D,MAAI,SAAS,GAAG,WAAW,KAAK,IAAI,IAAI,WAAW,KAAK,KAAK,CAAC;AAC9D,MAAI,SAAS,IAAI,SAAS,EAAE;AAC1B,WAAO,SAAS,KAAK,SAAS,CAAC;GAChC;;AAED,MAAI,QAAQ,GAAG,OAAO,WAAW,CAAC;AAClC,MAAI,QAAQ,GAAG,OAAO,WAAW,CAAC;AAClC,MAAI,QAAQ,KAAK,QAAQ,IAAI,QAAQ,KAAK,QAAQ,EAAE;AAClD,WAAO,QAAQ,KAAK,QAAQ,IAAI,QAAQ,KAAK,QAAQ,CAAC;GACvD,MAAM;AACL,WAAO,QAAQ,KAAK,QAAQ,IAAI,WAAW,CAAC,IAAI,KAAK,WAAW,CAAC,IAAI,IAAI,WAAW,CAAC,GAAG,KAAK,WAAW,CAAC,GAAG,CAAC;GAC9G;AACD,SAAO,KAAK,CAAC;CACd;;AAED,MAAM,CAAC,OAAO,GAAG,0BAA0B,CAAC","file":"shouldUpdateReactComponent-compiled.js","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule shouldUpdateReactComponent\n * @typechecks static-only\n */\n\n'use strict';\n\n/**\n * Given a `prevElement` and `nextElement`, determines if the existing\n * instance should be updated as opposed to being destroyed or replaced by a new\n * instance. Both arguments are elements. This ensures that this logic can\n * operate on stateless trees without any backing instance.\n *\n * @param {?object} prevElement\n * @param {?object} nextElement\n * @return {boolean} True if the existing instance should be updated.\n * @protected\n */\nfunction shouldUpdateReactComponent(prevElement, nextElement) {\n  var prevEmpty = prevElement === null || prevElement === false;\n  var nextEmpty = nextElement === null || nextElement === false;\n  if (prevEmpty || nextEmpty) {\n    return prevEmpty === nextEmpty;\n  }\n\n  var prevType = typeof prevElement;\n  var nextType = typeof nextElement;\n  if (prevType === 'string' || prevType === 'number') {\n    return nextType === 'string' || nextType === 'number';\n  } else {\n    return nextType === 'object' && prevElement.type === nextElement.type && prevElement.key === nextElement.key;\n  }\n  return false;\n}\n\nmodule.exports = shouldUpdateReactComponent;"]}