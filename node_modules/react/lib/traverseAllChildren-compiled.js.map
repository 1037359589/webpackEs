{"version":3,"sources":["traverseAllChildren.js"],"names":[],"mappings":"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","file":"traverseAllChildren-compiled.js","sourcesContent":["/**\n * Copyright 2013-2015, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule traverseAllChildren\n */\n\n'use strict';\n\nvar ReactCurrentOwner = require('./ReactCurrentOwner');\nvar ReactElement = require('./ReactElement');\nvar ReactInstanceHandles = require('./ReactInstanceHandles');\n\nvar getIteratorFn = require('./getIteratorFn');\nvar invariant = require('fbjs/lib/invariant');\nvar warning = require('fbjs/lib/warning');\n\nvar SEPARATOR = ReactInstanceHandles.SEPARATOR;\nvar SUBSEPARATOR = ':';\n\n/**\n * TODO: Test that a single child and an array with one item have the same key\n * pattern.\n */\n\nvar userProvidedKeyEscaperLookup = {\n  '=': '=0',\n  '.': '=1',\n  ':': '=2'\n};\n\nvar userProvidedKeyEscapeRegex = /[=.:]/g;\n\nvar didWarnAboutMaps = false;\n\nfunction userProvidedKeyEscaper(match) {\n  return userProvidedKeyEscaperLookup[match];\n}\n\n/**\n * Generate a key string that identifies a component within a set.\n *\n * @param {*} component A component that could contain a manual key.\n * @param {number} index Index that is used if a manual key is not provided.\n * @return {string}\n */\nfunction getComponentKey(component, index) {\n  if (component && component.key != null) {\n    // Explicit key\n    return wrapUserProvidedKey(component.key);\n  }\n  // Implicit key determined by the index in the set\n  return index.toString(36);\n}\n\n/**\n * Escape a component key so that it is safe to use in a reactid.\n *\n * @param {*} text Component key to be escaped.\n * @return {string} An escaped string.\n */\nfunction escapeUserProvidedKey(text) {\n  return ('' + text).replace(userProvidedKeyEscapeRegex, userProvidedKeyEscaper);\n}\n\n/**\n * Wrap a `key` value explicitly provided by the user to distinguish it from\n * implicitly-generated keys generated by a component's index in its parent.\n *\n * @param {string} key Value of a user-provided `key` attribute\n * @return {string}\n */\nfunction wrapUserProvidedKey(key) {\n  return '$' + escapeUserProvidedKey(key);\n}\n\n/**\n * @param {?*} children Children tree container.\n * @param {!string} nameSoFar Name of the key path so far.\n * @param {!function} callback Callback to invoke with each child found.\n * @param {?*} traverseContext Used to pass information throughout the traversal\n * process.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildrenImpl(children, nameSoFar, callback, traverseContext) {\n  var type = typeof children;\n\n  if (type === 'undefined' || type === 'boolean') {\n    // All of the above are perceived as null.\n    children = null;\n  }\n\n  if (children === null || type === 'string' || type === 'number' || ReactElement.isValidElement(children)) {\n    callback(traverseContext, children,\n    // If it's the only child, treat the name as if it was wrapped in an array\n    // so that it's consistent if the number of children grows.\n    nameSoFar === '' ? SEPARATOR + getComponentKey(children, 0) : nameSoFar);\n    return 1;\n  }\n\n  var child;\n  var nextName;\n  var subtreeCount = 0; // Count of children found in the current subtree.\n  var nextNamePrefix = nameSoFar === '' ? SEPARATOR : nameSoFar + SUBSEPARATOR;\n\n  if (Array.isArray(children)) {\n    for (var i = 0; i < children.length; i++) {\n      child = children[i];\n      nextName = nextNamePrefix + getComponentKey(child, i);\n      subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n    }\n  } else {\n    var iteratorFn = getIteratorFn(children);\n    if (iteratorFn) {\n      var iterator = iteratorFn.call(children);\n      var step;\n      if (iteratorFn !== children.entries) {\n        var ii = 0;\n        while (!(step = iterator.next()).done) {\n          child = step.value;\n          nextName = nextNamePrefix + getComponentKey(child, ii++);\n          subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n        }\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          process.env.NODE_ENV !== 'production' ? warning(didWarnAboutMaps, 'Using Maps as children is not yet fully supported. It is an ' + 'experimental feature that might be removed. Convert it to a ' + 'sequence / iterable of keyed ReactElements instead.') : undefined;\n          didWarnAboutMaps = true;\n        }\n        // Iterator will provide entry [k,v] tuples rather than values.\n        while (!(step = iterator.next()).done) {\n          var entry = step.value;\n          if (entry) {\n            child = entry[1];\n            nextName = nextNamePrefix + wrapUserProvidedKey(entry[0]) + SUBSEPARATOR + getComponentKey(child, 0);\n            subtreeCount += traverseAllChildrenImpl(child, nextName, callback, traverseContext);\n          }\n        }\n      }\n    } else if (type === 'object') {\n      var addendum = '';\n      if (process.env.NODE_ENV !== 'production') {\n        addendum = ' If you meant to render a collection of children, use an array ' + 'instead or wrap the object using createFragment(object) from the ' + 'React add-ons.';\n        if (children._isReactElement) {\n          addendum = ' It looks like you\\'re using an element created by a different ' + 'version of React. Make sure to use only one copy of React.';\n        }\n        if (ReactCurrentOwner.current) {\n          var name = ReactCurrentOwner.current.getName();\n          if (name) {\n            addendum += ' Check the render method of `' + name + '`.';\n          }\n        }\n      }\n      var childrenString = String(children);\n      !false ? process.env.NODE_ENV !== 'production' ? invariant(false, 'Objects are not valid as a React child (found: %s).%s', childrenString === '[object Object]' ? 'object with keys {' + Object.keys(children).join(', ') + '}' : childrenString, addendum) : invariant(false) : undefined;\n    }\n  }\n\n  return subtreeCount;\n}\n\n/**\n * Traverses children that are typically specified as `props.children`, but\n * might also be specified through attributes:\n *\n * - `traverseAllChildren(this.props.children, ...)`\n * - `traverseAllChildren(this.props.leftPanelChildren, ...)`\n *\n * The `traverseContext` is an optional argument that is passed through the\n * entire traversal. It can be used to store accumulations or anything else that\n * the callback might find relevant.\n *\n * @param {?*} children Children tree object.\n * @param {!function} callback To invoke upon traversing each child.\n * @param {?*} traverseContext Context for traversal.\n * @return {!number} The number of children in this subtree.\n */\nfunction traverseAllChildren(children, callback, traverseContext) {\n  if (children == null) {\n    return 0;\n  }\n\n  return traverseAllChildrenImpl(children, '', callback, traverseContext);\n}\n\nmodule.exports = traverseAllChildren;"]}