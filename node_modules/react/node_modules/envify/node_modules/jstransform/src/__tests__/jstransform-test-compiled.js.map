{"version":3,"sources":["jstransform-test.js"],"names":[],"mappings":"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","file":"jstransform-test-compiled.js","sourcesContent":["/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * @emails jeffmo@fb.com\n */\n\nrequire('mock-modules').autoMockOff();\n\ndescribe('jstransform', function() {\n  var transformFn;\n  var Syntax = require('esprima-fb').Syntax;\n\n  beforeEach(function() {\n    require('mock-modules').dumpCache();\n    transformFn = require('../jstransform').transform;\n  });\n\n  function _runVisitor(source, nodeCount, visitor) {\n    var actualVisitationCount = 0;\n    function shimVisitor(traverse, node, path, state) {\n      actualVisitationCount++;\n      return visitor(traverse, node, path, state);\n    }\n    shimVisitor.test = visitor.test;\n    transformFn([shimVisitor], source);\n    expect(actualVisitationCount).toBe(nodeCount);\n  }\n\n  function testScopeBoundary(source, localIdents, nodeCount, visitorTest) {\n    function visitor(traverse, node, path, state) {\n      var actualLocalIdents = Object.keys(state.localScope.identifiers);\n      expect(actualLocalIdents.sort()).toEqual(localIdents.sort());\n    }\n    visitor.test = visitorTest;\n    _runVisitor(source, nodeCount, visitor);\n  }\n\n  function testParentScope(source, parentIdents, nodeCount, visitorTest) {\n    function visitor(traverse, node, path, state) {\n      parentIdents = parentIdents && parentIdents.sort();\n      var parentScope = state.localScope.parentScope;\n      var actualParentIdents =\n        parentScope && Object.keys(parentScope.identifiers).sort();\n      expect(actualParentIdents).toEqual(parentIdents);\n    }\n    visitor.test = visitorTest;\n    _runVisitor(source, nodeCount, visitor);\n  }\n\n  describe('closure scope boundaries', function() {\n    it('creates a scope boundary around Program scope', function() {\n      var source =\n        'var foo;' +\n        'var bar, baz;' +\n        'function blah() {}';\n      var idents = ['foo', 'bar', 'baz', 'blah'];\n\n      testScopeBoundary(source, idents, 3, function(node, path) {\n        return path[0] && path[0].type === Syntax.Program;\n      });\n    });\n\n    it('creates a scope boundary around FunctionDeclarations', function() {\n      var source  =\n        'var foo;' +\n        'function blah() {' +\n        '  var bar;' +\n        '  function nested() {' +\n        '    var baz;' +\n        '  }' +\n        '}';\n      var programIdents = ['foo', 'blah'];\n      var blahIdents = ['arguments', 'bar', 'nested'];\n      var nestedIdents = ['arguments', 'baz'];\n\n      testScopeBoundary(source, programIdents, 2, function(node, path) {\n        return path[0] && path[0].type === Syntax.Program;\n      });\n\n      testScopeBoundary(source, blahIdents, 2, function(node, path) {\n        // All direct children of blah()\n        return path[0] && path[0].type === Syntax.BlockStatement &&\n               path[1] && path[1].type === Syntax.FunctionDeclaration &&\n               path[1].id.name === 'blah';\n      });\n\n      testScopeBoundary(source, nestedIdents, 1, function(node, path) {\n        // All direct children of nested()\n        return path[0] && path[0].type === Syntax.BlockStatement &&\n               path[1] && path[1].type === Syntax.FunctionDeclaration &&\n               path[1].id.name === 'nested';\n      });\n    });\n\n    it('creates a scope boundary around MethodDefinitions', function() {\n      var source =\n        'var foo;' +\n        'class ClassA {' +\n        '  blah() {' +\n        '    var bar;' +\n        '  }' +\n        '  another() {' +\n        '    var baz;' +\n        '  }' +\n        '}';\n      var programIdents = ['foo', 'ClassA'];\n      var blahIdents = ['arguments', 'bar'];\n      var anotherIdents = ['arguments', 'baz'];\n\n      testScopeBoundary(source, programIdents, 2, function(node, path) {\n        return path[0] && path[0].type === Syntax.Program;\n      });\n\n      testScopeBoundary(source, blahIdents, 1, function(node, path) {\n        // All direct children of blah()\n        return path[0] && path[0].type === Syntax.BlockStatement &&\n               path[1] && path[1].type === Syntax.FunctionExpression &&\n               path[2] && path[2].type === Syntax.MethodDefinition &&\n               path[2].key.name === 'blah';\n      });\n\n      testScopeBoundary(source, anotherIdents, 1, function(node, path) {\n        // All direct children of another()\n        return path[0] && path[0].type === Syntax.BlockStatement &&\n               path[1] && path[1].type === Syntax.FunctionExpression &&\n               path[2] && path[2].type === Syntax.MethodDefinition &&\n               path[2].key.name === 'another';\n      });\n    });\n\n    it('creates a scope boundary around concise ArrowFunc exprs', function() {\n      var source =\n        'var foo;' +\n        'var bar = baz => baz;';\n\n      var programIdents = ['foo', 'bar'];\n      var barIdents = ['arguments', 'baz'];\n\n      testScopeBoundary(source, programIdents, 2, function(node, path) {\n        return path[0] && path[0].type === Syntax.Program;\n      });\n\n      testScopeBoundary(source, barIdents, 1, function(node, path) {\n        return path[0] && path[0].type === Syntax.ArrowFunctionExpression\n               && path[0].body === node;\n      });\n    });\n\n    it('uses VariableDeclarations to determine scope boundary', function() {\n      var source =\n        'var foo = 1;' +\n        'function bar() {' +\n        '  foo++;' +\n        '  function baz() {' +\n        '    var foo = 2;' +\n        '  }' +\n        '}';\n      var programIdents = ['foo', 'bar'];\n      var barIdents = ['arguments', 'baz'];\n      var bazIdents = ['arguments', 'foo'];\n\n      testScopeBoundary(source, programIdents, 2, function(node, path) {\n        return path[0] && path[0].type === Syntax.Program;\n      });\n\n      testScopeBoundary(source, barIdents, 2, function(node, path) {\n        // All direct children of blah()\n        return path[0] && path[0].type === Syntax.BlockStatement &&\n               path[1] && path[1].type === Syntax.FunctionDeclaration &&\n               path[1].id.name === 'bar';\n      });\n\n      testScopeBoundary(source, bazIdents, 1, function(node, path) {\n        // All direct children of baz()\n        return path[0] && path[0].type === Syntax.BlockStatement &&\n               path[1] && path[1].type === Syntax.FunctionDeclaration &&\n               path[1].id.name === 'baz';\n      });\n    });\n\n    it('includes function args in functions scope boundary', function() {\n      var source =\n        'var foo;' +\n        'function blah(bar) {' +\n        '  var baz;' +\n        '}' +\n        'var blah2 = bar2 => {var baz;};' +\n        'var blah3 = bar3 => bar3;';\n      var programIdents = ['foo', 'blah', 'blah2', 'blah3'];\n      var blahIdents = ['arguments', 'bar', 'baz'];\n      var blah2Idents = ['arguments', 'bar2', 'baz'];\n      var blah3Idents = ['arguments', 'bar3'];\n\n      testScopeBoundary(source, programIdents, 4, function(node, path) {\n        return path[0] && path[0].type === Syntax.Program;\n      });\n\n      testScopeBoundary(source, blahIdents, 1, function(node, path) {\n        // All direct children of blah()\n        return path[0] && path[0].type === Syntax.BlockStatement &&\n               path[1] && path[1].type === Syntax.FunctionDeclaration &&\n               path[1].id.name === 'blah';\n      });\n\n      testScopeBoundary(source, blah2Idents, 1, function(node, path) {\n        // All direct children of blah2()\n        return path[0] && path[0].type === Syntax.BlockStatement &&\n               path[1] && path[1].type === Syntax.ArrowFunctionExpression &&\n               path[2].id.name === 'blah2';\n      });\n\n      testScopeBoundary(source, blah3Idents, 1, function(node, path) {\n        // All direct children of blah3()\n        return path[0] && path[0].type === Syntax.ArrowFunctionExpression &&\n               path[0].body === node &&\n               path[1].id.name === 'blah3';\n      });\n    });\n\n    it('includes rest param args in function scope boundaries', function() {\n      var source =\n        'var foo;' +\n        'function blah(...bar) {' +\n        '  var baz;' +\n        '}' +\n        'var blah2 = (...bar2) => {var baz;};' +\n        'var blah3 = (...bar3) => bar3;';\n      var programIdents = ['foo', 'blah', 'blah2', 'blah3'];\n      var blahIdents = ['arguments', 'bar', 'baz'];\n      var blah2Idents = ['arguments', 'bar2', 'baz'];\n      var blah3Idents = ['arguments', 'bar3'];\n\n      testScopeBoundary(source, programIdents, 4, function(node, path) {\n        return path[0] && path[0].type === Syntax.Program;\n      });\n\n      testScopeBoundary(source, blahIdents, 1, function(node, path) {\n        // All direct children of blah()\n        return path[0] && path[0].type === Syntax.BlockStatement &&\n               path[1] && path[1].type === Syntax.FunctionDeclaration &&\n               path[1].id.name === 'blah';\n      });\n\n      testScopeBoundary(source, blah2Idents, 1, function(node, path) {\n        // All direct children of blah2()\n        return path[0] && path[0].type === Syntax.BlockStatement &&\n               path[1] && path[1].type === Syntax.ArrowFunctionExpression &&\n               path[2].id.name === 'blah2';\n      });\n\n      testScopeBoundary(source, blah3Idents, 1, function(node, path) {\n        // All direct children of blah3()\n        return path[0] && path[0].type === Syntax.ArrowFunctionExpression &&\n               path[0].body === node &&\n               path[1].id.name === 'blah3';\n      });\n    });\n\n    it('puts FunctionExpression names within function scope', function() {\n      var source =\n        'var foo;' +\n        'var bar = function baz() {' +\n        '  var blah;' +\n        '};';\n      var programIdents = ['foo', 'bar'];\n      var bazIdents = ['arguments', 'baz', 'blah'];\n\n      testScopeBoundary(source, programIdents, 2, function(node, path) {\n        return path[0] && path[0].type === Syntax.Program;\n      });\n\n      testScopeBoundary(source, bazIdents, 1, function(node, path) {\n        // All direct children of baz()\n        return path[0] && path[0].type === Syntax.BlockStatement &&\n               path[1] && path[1].type === Syntax.FunctionExpression &&\n               path[1].id.name === 'baz';\n      });\n    });\n  });\n\n  describe('block scope boundaries', function() {\n    it('creates a scope boundary around CatchClauses with params', function() {\n      var source =\n        'var blah = 0;' +\n        'try {' +\n        '} catch (e) {' +\n        '  blah++;' +\n        '}';\n      var programIdents = ['blah'];\n      var catchIdents = ['e'];\n\n      testScopeBoundary(source, programIdents, 2, function(node, path) {\n        return path[0] && path[0].type === Syntax.Program;\n      });\n\n      testScopeBoundary(source, catchIdents, 1, function(node, path) {\n        // All direct children of catch(e) block\n        return path[0] && path[0].type === Syntax.BlockStatement &&\n               path[1] && path[1].type === Syntax.CatchClause;\n      });\n    });\n\n    it('includes vars defined in CatchClauses in the parent scope', function() {\n      var source =\n        'try {' +\n        '} catch (e) {' +\n        '  var blah;' +\n        '}';\n      var programIdents = ['blah'];\n      var catchIdents = ['e'];\n\n      testScopeBoundary(source, programIdents, 1, function(node, path) {\n        return path[0] && path[0].type === Syntax.Program;\n      });\n\n      testScopeBoundary(source, catchIdents, 1, function(node, path) {\n        // All direct children of catch(e) block\n        return path[0] && path[0].type === Syntax.BlockStatement &&\n               path[1] && path[1].type === Syntax.CatchClause;\n      });\n    });\n  });\n\n  describe('scope chain linking', function() {\n    it('links parent scope boundaries', function() {\n      var source =\n        'var foo;' +\n        'function blah() {' +\n        '  var bar;' +\n        '  function nested() {' +\n        '    var baz;' +\n        '  }' +\n        '}';\n      var programIdents = ['foo', 'blah'];\n      var blahIdents = ['arguments', 'bar', 'nested'];\n\n      testParentScope(source, programIdents, 2, function(node, path) {\n        // All direct children of blah()\n        return path[0] && path[0].type === Syntax.BlockStatement &&\n               path[1] && path[1].type === Syntax.FunctionDeclaration &&\n               path[1].id.name === 'blah';\n      });\n\n      testParentScope(source, blahIdents, 1, function(node, path) {\n        // All direct children of nested()\n        return path[0] && path[0].type === Syntax.BlockStatement &&\n               path[1] && path[1].type === Syntax.FunctionDeclaration &&\n               path[1].id.name === 'nested';\n      });\n    });\n\n    it('nests MethodDefinition boundaries under parent scope', function() {\n      var source =\n        'var foo;' +\n        'class ClassA {' +\n        '  blah() {' +\n        '    var bar;' +\n        '  }' +\n        '}';\n      var programIdents = ['foo', 'ClassA'];\n\n      testParentScope(source, programIdents, 1, function(node, path) {\n        // All direct children of blah()\n        return path[0] && path[0].type === Syntax.BlockStatement &&\n               path[1] && path[1].type === Syntax.FunctionExpression &&\n               path[2] && path[2].type === Syntax.MethodDefinition &&\n               path[2].key.name === 'blah';\n      });\n    });\n  });\n\n  describe('\"use strict\" tracking', function() {\n    function testStrictness(expectedStrict, source) {\n      var visitedNodes = 0;\n      function visitor(traverse, node, path, state) {\n        visitedNodes++;\n        expect(state.scopeIsStrict).toBe(expectedStrict);\n      }\n      visitor.test = function(node, path, state) {\n        return node.type === Syntax.Literal\n               && node.value === 'testStr';\n      };\n      transformFn([visitor], source);\n      expect(visitedNodes).toBe(1);\n    }\n\n    it('detects program-level strictness', function() {\n      testStrictness(false, '\"testStr\";');\n      testStrictness(true, '\"use strict\"; \"testStr\";');\n    });\n\n    it('detects non-inherited strictness', function() {\n      testStrictness(true, [\n        'function foo() {',\n        '  \"use strict\";',\n        '  \"testStr\";',\n        '}'\n      ].join('\\n'));\n    });\n\n    it('detects program-inherited strictness', function() {\n      testStrictness(true, [\n        '\"use strict\";',\n        'function foo() {',\n        '  \"testStr\";',\n        '}'\n      ].join('\\n'));\n    });\n\n    it('detects function-inherited strictness', function() {\n      testStrictness(true, [\n        'function foo() {',\n        '  \"use strict\";',\n        '  function bar() {',\n        '    \"testStr\";',\n        '  }',\n        '}'\n      ].join('\\n'));\n    });\n\n    it('does not detect sibling strictness', function() {\n      testStrictness(false, [\n        'function foo() {',\n        '  \"use strict\";',\n        '}',\n        'function bar() {',\n        '  \"testStr\";',\n        '}'\n      ].join('\\n'));\n    });\n  });\n\n  describe('visitors', function() {\n    it('should visit nodes in order', function() {\n      var source = [\n        '// Foo comment',\n        'function foo() {}',\n        '',\n        '// Bar comment',\n        'function bar() {}'\n      ].join('\\n');\n\n      var actualNodes = [];\n\n      function visitFunction(traverse, node, path, state) {\n        actualNodes.push([node.id.name, node.range[0]]);\n      }\n      visitFunction.test = function(node, path, state) {\n        return node.type === Syntax.FunctionDeclaration;\n      };\n\n      function visitComments(traverse, node, path, state) {\n        actualNodes.push([node.value, node.range[0]]);\n      }\n      visitComments.test = function(node, path, state) {\n        return node.type === 'Line';\n      };\n\n      transformFn([visitComments, visitFunction], source);\n\n      expect(actualNodes).toEqual([\n        [' Foo comment', 0],\n        ['foo', 15],\n        [' Bar comment', 34],\n        ['bar', 49]\n      ]);\n    });\n  });\n});\n"]}