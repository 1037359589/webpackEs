{"version":3,"sources":["es6-rest-param-visitors-test.js"],"names":[],"mappings":"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","file":"es6-rest-param-visitors-test-compiled.js","sourcesContent":["/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @emails dmitrys@fb.com\n */\n\n/*jshint evil:true*/\n/*jshint -W117*/\n\nrequire('mock-modules').autoMockOff();\n\ndescribe('es6-rest-param-visitors', () => {\n  var transformFn;\n  var visitorSet;\n  var arrowFuncVisitors;\n  var classVisitors;\n  var restParamVisitors;\n\n  beforeEach(() => {\n    require('mock-modules').dumpCache();\n    arrowFuncVisitors = require('../es6-arrow-function-visitors').visitorList;\n    classVisitors = require('../es6-class-visitors').visitorList;\n    restParamVisitors = require('../es6-rest-param-visitors').visitorList;\n    transformFn = require('../../src/jstransform').transform;\n\n    visitorSet =\n      arrowFuncVisitors\n        .concat(classVisitors)\n        .concat(restParamVisitors);\n  });\n\n  function transform(code) {\n    return transformFn(visitorSet, code).code;\n  }\n\n  function expectTransform(code, result) {\n    expect(transform(code)).toEqual(result);\n  }\n\n  describe('function expressions', () => {\n    it('should capture 2 rest params, having 2 args', () => {\n      var code = transform([\n        '(function(x, y, ...args) {',\n        '  return [x, y, args.length, args[0], args[1]];',\n        '})(1, 2, 3, 4);'\n      ].join('\\n'));\n\n      expect(eval(code)).toEqual([1, 2, 2, 3, 4]);\n    });\n\n    it('should transform rest parameters in nested functions', () => {\n      var code = transform([\n        '(function(x, ...args) {',\n        '  return function(...params) {',\n        '    return args.concat(params);',\n        '  };',\n        '})(1, 2, 3)(4, 5);'\n      ].join('\\n'));\n\n      expect(eval(code)).toEqual([2, 3, 4, 5]);\n    });\n\n    it('should supply an array object', () => {\n      var code = transform([\n        '(function(...args) {',\n        '  return Array.isArray(args);',\n        '})()'\n      ].join('\\n'));\n\n      expect(eval(code)).toBe(true);\n    });\n  });\n\n  describe('function declarations', () => {\n    it('should capture 2 rest params, having 2 args', () => {\n      var code = transform([\n        'function test(x, y, ...args) {',\n        '  return [x, y, args.length, args[0], args[1]];',\n        '}'\n      ].join('\\n'));\n\n      eval(code);\n\n      expect(test(1, 2, 3, 4)).toEqual([1, 2, 2, 3, 4]);\n    });\n\n    it('should transform rest parameters in nested functions', () => {\n      var code = transform([\n        'function testOuter(x, ...args) {',\n        '  function testInner(...params) {',\n        '    return args.concat(params);',\n        '  }',\n        '  return testInner;',\n        '}'\n      ].join('\\n'));\n\n      eval(code);\n\n      expect(testOuter(1, 2, 3)(4, 5)).toEqual([2, 3, 4, 5]);\n    });\n\n    it('should supply an array object', () => {\n      var code = transform([\n        'function test(...args) {',\n        '  return Array.isArray(args);',\n        '}'\n      ].join('\\n'));\n\n      eval(code);\n\n      expect(test()).toBe(true);\n    });\n  });\n\n  describe('arrow functions', () => {\n    it('should transform non-block bodied arrow functions', () => {\n      var code = transform([\n        'var test = (...args) => args;'\n      ].join('\\n'));\n\n      eval(code);\n\n      expect(test('foo', 'bar')).toEqual(['foo', 'bar']);\n    });\n\n    it('should capture 2 rest params, having 2 args', () => {\n      var code = transform([\n        'var test = (x, y, ...args) => {',\n        '  return [x, y, args.length, args[0], args[1]];',\n        '}'\n      ].join('\\n'));\n\n      eval(code);\n\n      expect(test(1, 2, 3, 4)).toEqual([1, 2, 2, 3, 4]);\n    });\n\n    it('should transform rest parameters in nested arrow functions', () => {\n      var code = transform([\n        'var testOuter = (x, ...args) => {',\n        '  var testInner = (...params) => {',\n        '    return args.concat(params);',\n        '  };',\n        '  return testInner;',\n        '};'\n      ].join('\\n'));\n\n      eval(code);\n\n      expect(testOuter(1, 2, 3)(4, 5)).toEqual([2, 3, 4, 5]);\n    });\n\n    it('should supply an array object', () => {\n      var code = transform([\n        'var test = (...args) => {',\n        '  return Array.isArray(args);',\n        '};'\n      ].join('\\n'));\n\n      eval(code);\n\n      expect(test()).toBe(true);\n    });\n  });\n\n  describe('class methods', () => {\n    it('should capture 2 rest params, having 2 args', () => {\n      var code = transform([\n        'class Foo {',\n        '  constructor(x, y, ...args) {',\n        '    this.ctor = [x, y, args.length, args[0], args[1]];',\n        '  }',\n        '  testMethod(x, y, ...args) {',\n        '    return [x, y, args.length, args[0], args[1]];',\n        '  }',\n        '  static testMethod(x, y, ...args) {',\n        '    return [x, y, args.length, args[0], args[1]];',\n        '  }',\n        '}'\n      ].join('\\n'));\n\n      eval(code);\n\n      var fooInst = new Foo(1, 2, 3, 4);\n      expect(fooInst.ctor).toEqual([1, 2, 2, 3, 4]);\n      expect(fooInst.testMethod(1, 2, 3, 4)).toEqual([1, 2, 2, 3, 4]);\n      expect(Foo.testMethod(1, 2, 3, 4)).toEqual([1, 2, 2, 3, 4]);\n    });\n\n    it('should transform rest parameters in nested functions', () => {\n      var code = transform([\n        'class Foo {',\n        '  constructor(x, ...args) {',\n        '    function inner(...params) {',\n        '      return args.concat(params);',\n        '    }',\n        '    this.ctor = inner;',\n        '  }',\n        '  testMethod(x, ...args) {',\n        '    function inner(...params) {',\n        '      return args.concat(params);',\n        '    }',\n        '    return inner;',\n        '  }',\n        '  static testMethod(x, ...args) {',\n        '    function inner(...params) {',\n        '      return args.concat(params);',\n        '    }',\n        '    return inner;',\n        '  }',\n        '}'\n      ].join('\\n'));\n\n      eval(code);\n\n      var fooInst = new Foo(1, 2, 3);\n      expect(fooInst.ctor(4, 5)).toEqual([2, 3, 4, 5]);\n      expect(fooInst.testMethod(1, 2, 3)(4, 5)).toEqual([2, 3, 4, 5]);\n      expect(Foo.testMethod(1, 2, 3)(4, 5)).toEqual([2, 3, 4, 5]);\n    });\n\n    it('should supply an array object', () => {\n      var code = transform([\n        'class Foo {',\n        '  constructor(...args) {',\n        '    this.ctor = Array.isArray(args);',\n        '  }',\n        '  testMethod(...args) {',\n        '    return Array.isArray(args);',\n        '  }',\n        '  static testMethod(...args) {',\n        '    return Array.isArray(args);',\n        '  }',\n        '}'\n      ].join('\\n'));\n\n      eval(code);\n\n      var fooInst = new Foo();\n      expect(fooInst.ctor).toBe(true);\n      expect(fooInst.testMethod()).toBe(true);\n      expect(Foo.testMethod()).toBe(true);\n    });\n  });\n\n  describe('whitespace preservation', () => {\n    it('1-line function decl with 2 args', () => {\n      expectTransform(\n        'function foo(x, y, ...args) { return x + y + args[0]; }',\n        'function foo(x, y ) {for (var args=[],$__0=2,$__1=arguments.length;' +\n          '$__0<$__1;$__0++) args.push(arguments[$__0]); return x + y + ' +\n          'args[0]; }'\n      );\n    });\n\n    it('1-line function expression with 1 arg', () => {\n      expectTransform(\n        '(function(x, ...args) { return args;});',\n        '(function(x ) {for (var args=[],$__0=1,$__1=arguments.length;' +\n          '$__0<$__1;$__0++) args.push(arguments[$__0]); return args;});'\n      );\n    });\n\n    it('1-line function expression with no args', () => {\n      expectTransform(\n        'map(function(...args) { return args.map(log); });',\n        'map(function() {for (var args=[],$__0=0,$__1=arguments.length;' +\n          '$__0<$__1;$__0++) args.push(arguments[$__0]); ' +\n          'return args.map(log); });'\n      );\n    });\n\n    it('preserves lines for ugly code', () => {\n      expectTransform([\n        'function',\n        '',\n        'foo    (',\n        '    x,',\n        '          ...args',\n        '',\n        ')',\n        '',\n        '        {',\n        ' return         args;',\n        '}'\n      ].join('\\n'), [\n        'function',\n        '',\n        'foo    (',\n        '    x',\n        '          ',\n        '',\n        ')',\n        '',\n        '        {for (var args=[],$__0=1,$__1=arguments.length;$__0<$__1;' +\n          '$__0++) args.push(arguments[$__0]);',\n        ' return         args;',\n        '}'\n      ].join('\\n'));\n    });\n\n    it('preserves inline comments', () => {\n      expectTransform(\n        'function foo(/*string*/foo, /*bool*/bar, ...args) { return args; }',\n        'function foo(/*string*/foo, /*bool*/bar ) {' +\n          'for (var args=[],$__0=2,$__1=arguments.length;$__0<$__1;$__0++) ' +\n            'args.push(arguments[$__0]); ' +\n          'return args; ' +\n        '}'\n      );\n    });\n  });\n});\n\n"]}