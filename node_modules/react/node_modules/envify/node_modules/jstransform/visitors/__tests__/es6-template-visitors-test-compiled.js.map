{"version":3,"sources":["es6-template-visitors-test.js"],"names":[],"mappings":"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","file":"es6-template-visitors-test-compiled.js","sourcesContent":["/**\n * @emails mroch@fb.com\n */\n\n/*jshint evil:true*/\n\nrequire('mock-modules').autoMockOff();\n\ndescribe('ES6 Template Visitor', function() {\n  var transformFn;\n  var visitors;\n\n  beforeEach(function() {\n    require('mock-modules').dumpCache();\n    visitors = require('../es6-template-visitors').visitorList;\n    transformFn = require('../../src/jstransform').transform;\n  });\n\n  function transform(code) {\n    return transformFn(visitors, code).code;\n  }\n\n  function expectTransform(code, result) {\n    expect(transform(code)).toEqual(result);\n  }\n\n  function expectEval(code, result, setupFn) {\n    var actual;\n    if (setupFn) {\n      eval(setupFn);\n    }\n    eval('actual = ' + transform(code));\n    expect(actual).toEqual(result);\n  }\n\n  function expectEvalTag(code, tagFn, scope) {\n    /*jshint unused:false*/\n    if (scope) {\n      Object.keys(scope).forEach((key) => this[key] = scope[key]);\n    }\n\n    var tagCalls = 0;\n    var tag = function(...args) {\n      tagCalls++;\n      return tagFn.apply(this, args);\n    };\n    var result = transform(code);\n    expect(result.split('\\n').length).toBe(code.split('\\n').length);\n    eval(result);\n    expect(tagCalls).toBe(1);\n  }\n\n  function expectSiteObj(siteObj, cooked, raw) {\n    expect(Array.isArray(siteObj)).toBe(true);\n    expect(Object.isFrozen(siteObj)).toBe(true);\n    expect(Array.isArray(siteObj.raw)).toBe(true);\n    expect(Object.isFrozen(siteObj.raw)).toBe(true);\n    expect(siteObj.length).toBe(cooked.length);\n    expect(siteObj.raw.length).toBe(raw.length);\n    for (var ii = 0; ii < cooked.length; ii++) {\n      expect(siteObj[ii]).toEqual(cooked[ii]);\n    }\n    expect(siteObj.raw).toEqual(raw);\n  }\n\n  it('should transform simple literals', function() {\n    expectTransform('`foo bar`', '(\"foo bar\")');\n\n    expectEval('`foo bar`', 'foo bar');\n    expectEval('`$`', '$');\n    expectEval('`$foo`', '$foo');\n  });\n\n  it('should properly escape templates containing quotes', function() {\n    expectTransform('`foo \"bar\"`', '(\"foo \\\\\"bar\\\\\"\")');\n    expectEval('`foo \"bar\"`', 'foo \"bar\"');\n\n    expectTransform(\"`foo 'bar'`\", '(\"foo \\'bar\\'\")');\n    expectEval(\"`foo 'bar'`\", \"foo 'bar'\");\n\n    // `foo \\\\\"bar\\\\\"` (foo, literal slash, \"bar\", literal slash)\n    expectTransform('`foo \\\\\\\\\"bar\\\\\\\\\"`', '(\"foo \\\\\\\\\\\\\"bar\\\\\\\\\\\\\"\")');\n    expectEval('`foo \\\\\\\\\\\\\"bar\\\\\\\\\\\\\"`', 'foo \\\\\"bar\\\\\"');\n  });\n\n  it('should transform simple substitutions', function() {\n    expectTransform('`foo ${bar}`', '(\"foo \" + bar)');\n    expectTransform('`${foo} bar`', '(foo + \" bar\")');\n    expectTransform('`${foo} ${bar}`', '(foo + \" \" + bar)');\n    expectTransform('`${foo}${bar}`', '(foo + bar)');\n  });\n\n  it('should transform expressions', function() {\n    expectTransform('`foo ${bar()}`', '(\"foo \" + bar())');\n    expectTransform('`foo ${bar.baz}`', '(\"foo \" + bar.baz)');\n    expectTransform('`foo ${bar + 5}`', '(\"foo \" + (bar + 5))');\n    expectTransform('`${foo + 5} bar`', '((foo + 5) + \" bar\")');\n    expectTransform('`${foo + 5} ${bar}`', '((foo + 5) + \" \" + bar)');\n    expectTransform(\n      '`${(function(b) {alert(4);})(a)}`',\n      '((function(b) {alert(4);})(a))');\n  });\n\n  it('should transform tags with simple templates', function() {\n    /*jshint unused:false*/\n    var tag = function(elements) {\n      expectSiteObj(elements, ['foo bar'], ['foo bar']);\n    };\n    var result = transform(\"tag`foo bar`\");\n    expect(result.split('\\n').length).toBe(1);\n    eval(result);\n\n    var a = { b: tag };\n    eval(transform(\"a.b`foo bar`\"));\n    eval(transform(\"a['b']`foo bar`\"));\n\n    var getTag = function() { return tag; };\n    eval(transform(\"getTag()`foo bar`\"));\n    eval(transform(\"(getTag())`foo bar`\"));\n  });\n\n  it('should transform tags with substitutions', function() {\n    expectTransform(\n      \"tag`foo ${bar} baz`\",\n      'tag(function() { var siteObj = [\"foo \", \" baz\"]; ' +\n      'siteObj.raw = [\"foo \", \" baz\"]; Object.freeze(siteObj.raw); ' +\n      'Object.freeze(siteObj); return siteObj; }(), bar)'\n    );\n\n    expectEvalTag(\n      \"tag`foo ${bar + 'abc'} baz`\",\n      function(elements, ...args) {\n        expectSiteObj(elements, ['foo ', ' baz'], ['foo ', ' baz']);\n        expect(args.length).toBe(1);\n        expect(args[0]).toBe('barabc');\n      },\n      {bar: 'bar'}\n    );\n\n    expectEvalTag(\n      \"tag`foo ${bar + 'abc'}`\",\n      function(elements, ...args) {\n        expectSiteObj(elements, ['foo ', ''], ['foo ', '']);\n        expect(args.length).toBe(1);\n        expect(args[0]).toBe('barabc');\n      },\n      {bar: 'bar'}\n    );\n\n    expectEvalTag(\n      \"tag`foo\\n\\n\\nbar`\",\n      (elements) => {\n        expectSiteObj(elements, ['foo\\n\\n\\nbar'], ['foo\\n\\n\\nbar']);\n      }\n    );\n\n    expectEvalTag(\n      \"tag`a\\nb\\n${c}\\nd`\",\n      (elements, ...args) => {\n        expectSiteObj(elements, ['a\\nb\\n', '\\nd'], ['a\\nb\\n', '\\nd']);\n        expect(args.length).toBe(1);\n        expect(args[0]).toBe('c');\n      },\n      {c: 'c'}\n    );\n  });\n\n  it('should maintain line numbers', function() {\n    expectTransform(\"`foo\\n\\nbar`\", '(\"foo\\\\n\\\\nbar\"\\n\\n)');\n    expectTransform(\"`foo\\n${bar}\\nbaz`\", '(\"foo\\\\n\" + \\nbar + \"\\\\nbaz\"\\n)');\n    expectTransform(\"`foo\\\\nbar`\", '(\"foo\\\\nbar\")');\n\n    expectTransform(\n      \"tag`a\\nb\\n${c}${d}\\ne`\",\n      'tag(function() { var siteObj = [\"a\\\\nb\\\\n\", \"\", \"\\\\ne\"]; ' +\n      'siteObj.raw = [\"a\\\\nb\\\\n\", \"\", \"\\\\ne\"]; Object.freeze(siteObj.raw); ' +\n      'Object.freeze(siteObj); return siteObj; }(), \\n\\nc, d\\n)'\n    );\n  });\n\n  it('should handle multiple lines', function() {\n    expectEval(\"`foo\\n\\nbar`\", 'foo\\n\\nbar');\n    expectEval(\"`foo\\\\nbar`\", 'foo\\nbar');\n    expectEval(\"`foo\\\\\\\\nbar`\", 'foo\\\\nbar');\n    expectEval(\"`foo\\n${bar}\\nbaz`\", 'foo\\nabc\\nbaz', 'var bar = \"abc\";');\n  });\n\n  it('should canonicalize line endings', function() {\n    // TODO: should this be '(\"foo\\\\nbar\"\\r\\n)' to maintain the number of lines\n    // for editors that break on \\r\\n? I don't think we care in the transformed\n    // code.\n    expectTransform(\"`foo\\r\\nbar`\", '(\"foo\\\\nbar\"\\n)');\n    // TODO: same as above but with trailing \\r\n    expectTransform(\"`foo\\rbar`\", '(\"foo\\\\nbar\")');\n\n    expectEval(\"`foo\\r\\nbar`\", 'foo\\nbar');\n    expectEval(\"`foo\\rbar`\", 'foo\\nbar');\n    expectEval(\"`foo\\r\\n${bar}\\r\\nbaz`\", 'foo\\nabc\\nbaz', 'var bar = \"abc\";');\n\n    expectEvalTag(\n      \"tag`foo\\rbar`\",\n      (elements) => {\n        expectSiteObj(elements, ['foo\\nbar'], ['foo\\rbar']);\n      }\n    );\n  });\n});\n\n"]}