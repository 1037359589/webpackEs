{"version":3,"sources":["type-pattern-syntax-test.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AAmBA,OAAO,CAAC,cAAc,CAAC,CAAC,WAAW,EAAE,CAAC;;AAEtC,QAAQ,CAAC,4BAA4B,EAAE,YAAW;AAChD,MAAI,kBAAkB,CAAC;AACvB,MAAI,WAAW,CAAC;;AAEhB,YAAU,CAAC,YAAW;AACpB,WAAO,CAAC,cAAc,CAAC,CAAC,SAAS,EAAE,CAAC;;AAEpC,sBAAkB,GAAG,OAAO,CAAC,mBAAmB,CAAC,CAAC,WAAW,CAAC;AAC9D,eAAW,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;AACrC,yBAAqB,GACnB,OAAO,CAAC,+BAA+B,CAAC,CAAC;;AAE3C,eAAW,GAAG,qBAAqB,CAAC,WAAW,CAAC;GACjD,CAAC,CAAC;;AAEH,WAAS,SAAS,CAAC,IAAI,EAAE,QAAQ,EAAE;AACjC,YAAQ,GAAG,QAAQ,GAAG,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,GAAG,WAAW;;;AAAC,AAGjE,QAAI,GAAG,WAAW,CAAC,SAAS,CAC1B,kBAAkB,EAClB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAChB,CAAC,IAAI,CAAC;;AAEP,QAAI,GAAG,WAAW,CAAC,SAAS,CAC1B,QAAQ,EACR,IAAI,CACL,CAAC,IAAI,CAAC;;AAEP,WAAO,IAAI,CAAC;GACb;;AAED,UAAQ,CAAC,gBAAgB,EAAE,MAAM;AAC/B,MAAE,CAAC,0CAA0C,EAAE,MAAM;AACnD,UAAI,IAAI,GAAG,SAAS,CAAC,CACnB,8DAA8D,EAC9D,mCAAmC,CACpC,CAAC,CAAC;AACH,UAAI,CAAC,IAAI,CAAC,CAAC;AACX,YAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACzB,CAAC,CAAC;AACH,MAAE,CAAC,wCAAwC,EAAE,MAAM;AACjD,UAAI,IAAI,GAAG,SAAS,CAAC,CACnB,6DAA6D,CAC9D,CAAC,CAAC;AACH,UAAI,CAAC,IAAI,CAAC,CAAC;AACX,YAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACnB,YAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACzB,CAAC,CAAC;GACJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,eAAe,EAAE,MAAM;AAC9B,MAAE,CAAC,0CAA0C,EAAE,MAAM;AACnD,UAAI,IAAI,GAAG,SAAS,CAAC,CACnB,qDAAqD,EACrD,6BAA6B,CAC9B,CAAC,CAAC;AACH,UAAI,CAAC,IAAI,CAAC,CAAC;AACX,YAAM,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KACzB,CAAC,CAAC;AACH,MAAE,CAAC,wCAAwC,EAAE,MAAM;AACjD,UAAI,IAAI,GAAG,SAAS,CAAC,CACnB,4CAA4C,CAC7C,CAAC,CAAC;AACH,UAAI,CAAC,IAAI,CAAC,CAAC;AACX,YAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;AACnB,YAAM,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACzB,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAC,CAAC","file":"type-pattern-syntax-test-compiled.js","sourcesContent":["/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jshint evil:true*/\n/*jshint -W117*/\n\nrequire('mock-modules').autoMockOff();\n\ndescribe('static type pattern syntax', function() {\n  var flowSyntaxVisitors;\n  var jstransform;\n\n  beforeEach(function() {\n    require('mock-modules').dumpCache();\n\n    flowSyntaxVisitors = require('../type-syntax.js').visitorList;\n    jstransform = require('jstransform');\n    destructuringVisitors =\n      require('../es6-destructuring-visitors');\n\n    visitorList = destructuringVisitors.visitorList;\n  });\n\n  function transform(code, visitors) {\n    visitors = visitors ? visitorList.concat(visitors) : visitorList;\n\n    // We run the flow transform first\n    code = jstransform.transform(\n      flowSyntaxVisitors,\n      code.join('\\n')\n    ).code;\n\n    code = jstransform.transform(\n      visitors,\n      code\n    ).code;\n\n    return code;\n  }\n\n  describe('Object Pattern', () => {\n    it('strips function argument type annotation', () => {\n      var code = transform([\n        'function foo({x, y}: {x: number; y: number}) { return x+y; }',\n        'var thirty = foo({x: 10, y: 20});'\n      ]);\n      eval(code);\n      expect(thirty).toBe(30);\n    });\n    it('strips var declaration type annotation', () => {\n      var code = transform([\n        'var {x, y}: {x: number; y: string} = { x: 42, y: \"hello\" };'\n      ]);\n      eval(code);\n      expect(x).toBe(42);\n      expect(y).toBe(\"hello\");\n    });\n  });\n\n  describe('Array Pattern', () => {\n    it('strips function argument type annotation', () => {\n      var code = transform([\n        'function foo([x, y]: Array<number>) { return x+y; }',\n        'var thirty = foo([10, 20]);'\n      ]);\n      eval(code);\n      expect(thirty).toBe(30);\n    });\n    it('strips var declaration type annotation', () => {\n      var code = transform([\n        'var [x, y]: Array<number> = [42, \"hello\"];'\n      ]);\n      eval(code);\n      expect(x).toBe(42);\n      expect(y).toBe(\"hello\");\n    });\n  });\n});\n"]}