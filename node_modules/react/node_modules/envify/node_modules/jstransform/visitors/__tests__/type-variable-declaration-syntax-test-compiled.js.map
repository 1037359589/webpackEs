{"version":3,"sources":["type-variable-declaration-syntax-test.js"],"names":[],"mappings":"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","file":"type-variable-declaration-syntax-test-compiled.js","sourcesContent":["/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jshint evil:true*/\n/*jshint -W117*/\n\nrequire('mock-modules').autoMockOff();\n\ndescribe('static type variable declaration syntax', function() {\n  var flowSyntaxVisitors;\n  var jstransform;\n\n  beforeEach(function() {\n    require('mock-modules').dumpCache();\n\n    flowSyntaxVisitors = require('../type-syntax.js').visitorList;\n    jstransform = require('jstransform');\n  });\n\n  function transform(code, visitors) {\n    code = code.join('\\n');\n\n    // We run the flow transform first\n    code = jstransform.transform(\n      flowSyntaxVisitors,\n      code\n    ).code;\n\n    if (visitors) {\n      code = jstransform.transform(\n        visitors,\n        code\n      ).code;\n    }\n    return code;\n  }\n\n  describe('basic annotations', () => {\n    it('strips single annotated declarator without initializer', () => {\n      var code = transform([\n        'var myNum = 42;',\n        'function foo() {',\n        '  var myNum:number;',\n        '  return myNum;',\n        '}'\n      ]);\n      eval(code);\n      expect(foo()).toBe(undefined);\n    });\n\n    it('strips single annotated declarator with initializer', () => {\n      var code = transform([\n        'var myNum:number = 42;',\n      ]);\n      eval(code);\n      expect(myNum).toBe(42);\n    });\n\n    it('strips single annotated nullable declarator with initializer', () => {\n      var code = transform([\n        'var myNum:?number = 42;',\n      ]);\n      eval(code);\n      expect(myNum).toBe(42);\n    });\n\n    it(\n      'strips single annotated nullable declarator without initializer',\n      () => {\n        var code = transform([\n          'var myNum:?number;',\n          'myNum = null;',\n        ]);\n        eval(code);\n        expect(myNum).toBe(null);\n      }\n    );\n\n    it('strips multiple annotation declarations without initializers', () => {\n      var code = transform([\n        'var num1 = 42;',\n        'var num2 = 43;',\n        'function foo() {',\n        '  var num1:number, num2:number;',\n        '  return [num1, num2];',\n        '}'\n      ]);\n      eval(code);\n      expect(foo()).toEqual([undefined, undefined]);\n    });\n\n    it('strips multiple annotation declarations without initializers', () => {\n      var code = transform([\n        'var num1:number = 42, num2:number = 43;'\n      ]);\n      eval(code);\n      expect(num1).toBe(42);\n      expect(num2).toBe(43);\n    });\n  });\n\n  describe('function type annotations', () => {\n    it('strips function type annotations without initializer', () => {\n      var code = transform([\n        'var myFunc = function() { return \"NOPE\"; };',\n        'function foo() {',\n        '  var myFunc:(_:bool) => number;',\n        '  return myFunc;',\n        '}'\n      ]);\n      eval(code);\n      expect(foo()).toBe(undefined);\n    });\n\n    it('strips function type annotations with initializer', () => {\n      var code = transform([\n        'var myFunc:(_:bool) => number = function(p1) {',\n        '  return 42;',\n        '};'\n      ]);\n      eval(code);\n      expect(myFunc()).toBe(42);\n    });\n  });\n\n  describe('object type annotations', () => {\n    it('strips empty object type annotations without initializer', () => {\n      var code = transform([\n        'var myObj = \"NOPE\";',\n        'function foo() {',\n        '  var myObj:{};',\n        '  return myObj;',\n        '}'\n      ]);\n      eval(code);\n      expect(foo()).toBe(undefined);\n    });\n\n    it('strips empty object type annotations with initializer', () => {\n      var code = transform([\n        'var myObj:{} = {YEP: true};'\n      ]);\n      eval(code);\n      expect(myObj.YEP).toBe(true);\n    });\n\n    it('strips empty nullable object type annotations with initializer', () => {\n      var code = transform([\n        'var myObj:?{} = {YEP: true};'\n      ]);\n      eval(code);\n      expect(myObj.YEP).toBe(true);\n    });\n\n    it('strips object type with basic property annotation', () => {\n      var code = transform([\n        'var myObj:{arrProp:Array} = {YEP: [true]};'\n      ]);\n      eval(code);\n      expect(myObj.YEP).toEqual([true]);\n    });\n\n    it('strips object type with multiple property annotations', () => {\n      var code = transform([\n        'var myObj:{numProp: number; strProp: string} = {',\n        '  numProp: 42,',\n        '  strProp: \"YEP\"',\n        '};'\n      ]);\n      eval(code);\n      expect(myObj.numProp).toBe(42);\n      expect(myObj.strProp).toBe(\"YEP\");\n    });\n\n    it('strips object type with parametric property annotation', () => {\n      var code = transform([\n        'var myObj:{arrProp:Array<bool>} = {YEP: [true]};'\n      ]);\n      eval(code);\n      expect(myObj.YEP).toEqual([true]);\n    });\n\n    it('strips object type with function property annotation', () => {\n      var code = transform([\n        'var myObj:{myMethod:() => void} = {',\n        '  myMethod: function() {',\n        '    return 42;',\n        '  }',\n        '};'\n      ]);\n      eval(code);\n      expect(myObj.myMethod()).toBe(42);\n    });\n  });\n});\n"]}