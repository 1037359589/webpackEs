{"version":3,"sources":["es6-object-short-notation-visitors.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8BA,IAAI,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,CAAC,MAAM,CAAC;AAC1C,IAAI,KAAK,GAAG,OAAO,CAAC,cAAc,CAAC;;;;;AAAC,AAKpC,SAAS,+BAA+B,CAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AACpE,OAAK,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC;AACxC,OAAK,CAAC,MAAM,CAAC,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;AACzC,SAAO,KAAK,CAAC;CACd;;AAED,+BAA+B,CAAC,IAAI,GAAG,UAAS,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE;AACjE,SAAO,IAAI,CAAC,IAAI,KAAK,MAAM,CAAC,QAAQ,IAClC,IAAI,CAAC,IAAI,KAAK,MAAM,IACpB,IAAI,CAAC,SAAS,KAAK,IAAI,IACvB,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,aAAa,CAAC;CACzC,CAAC;;AAEF,OAAO,CAAC,WAAW,GAAG,CACpB,+BAA+B,CAChC,CAAC","file":"es6-object-short-notation-visitors-compiled.js","sourcesContent":["/**\n * Copyright 2013 Facebook, Inc.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/*jslint node: true*/\n\n/**\n * Desugars ES6 Object Literal short notations into ES3 full notation.\n *\n * // Easier return values.\n * function foo(x, y) {\n *   return {x, y}; // {x: x, y: y}\n * };\n *\n * // Destructuring.\n * function init({port, ip, coords: {x, y}}) { ... }\n *\n */\nvar Syntax = require('esprima-fb').Syntax;\nvar utils = require('../src/utils');\n\n/**\n * @public\n */\nfunction visitObjectLiteralShortNotation(traverse, node, path, state) {\n  utils.catchup(node.key.range[1], state);\n  utils.append(':' + node.key.name, state);\n  return false;\n}\n\nvisitObjectLiteralShortNotation.test = function(node, path, state) {\n  return node.type === Syntax.Property &&\n    node.kind === 'init' &&\n    node.shorthand === true &&\n    path[0].type !== Syntax.ObjectPattern;\n};\n\nexports.visitorList = [\n  visitObjectLiteralShortNotation\n];\n\n"]}