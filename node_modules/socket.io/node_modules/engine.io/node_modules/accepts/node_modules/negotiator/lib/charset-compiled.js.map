{"version":3,"sources":["charset.js"],"names":[],"mappings":"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","file":"charset-compiled.js","sourcesContent":["module.exports = preferredCharsets;\npreferredCharsets.preferredCharsets = preferredCharsets;\n\nfunction parseAcceptCharset(accept) {\n  return accept.split(',').map(function(e, i) {\n    return parseCharset(e.trim(), i);\n  }).filter(function(e) {\n    return e;\n  });\n}\n\nfunction parseCharset(s, i) {\n  var match = s.match(/^\\s*(\\S+?)\\s*(?:;(.*))?$/);\n  if (!match) return null;\n\n  var charset = match[1];\n  var q = 1;\n  if (match[2]) {\n    var params = match[2].split(';')\n    for (var i = 0; i < params.length; i ++) {\n      var p = params[i].trim().split('=');\n      if (p[0] === 'q') {\n        q = parseFloat(p[1]);\n        break;\n      }\n    }\n  }\n\n  return {\n    charset: charset,\n    q: q,\n    i: i\n  };\n}\n\nfunction getCharsetPriority(charset, accepted) {\n  return (accepted.map(function(a) {\n    return specify(charset, a);\n  }).filter(Boolean).sort(function (a, b) {\n    if(a.s == b.s) {\n      return a.q > b.q ? -1 : 1;\n    } else {\n      return a.s > b.s ? -1 : 1;\n    }\n  })[0] || {s: 0, q:0});\n}\n\nfunction specify(charset, spec) {\n  var s = 0;\n  if(spec.charset.toLowerCase() === charset.toLowerCase()){\n    s |= 1;\n  } else if (spec.charset !== '*' ) {\n    return null\n  }\n\n  return {\n    s: s,\n    q: spec.q,\n  }\n}\n\nfunction preferredCharsets(accept, provided) {\n  // RFC 2616 sec 14.2: no header = *\n  accept = parseAcceptCharset(accept === undefined ? '*' : accept || '');\n  if (provided) {\n    return provided.map(function(type) {\n      return [type, getCharsetPriority(type, accept)];\n    }).filter(function(pair) {\n      return pair[1].q > 0;\n    }).sort(function(a, b) {\n      var pa = a[1];\n      var pb = b[1];\n      return (pb.q - pa.q) || (pb.s - pa.s) || (pa.i - pb.i);\n    }).map(function(pair) {\n      return pair[0];\n    });\n  } else {\n    return accept.sort(function (a, b) {\n      // revsort\n      return (b.q - a.q) || (a.i - b.i);\n    }).filter(function(type) {\n      return type.q > 0;\n    }).map(function(type) {\n      return type.charset;\n    });\n  }\n}\n"]}