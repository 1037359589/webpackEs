{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/*!\n * compression\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014 Jonathan Ong\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar accepts = require('accepts')\nvar bytes = require('bytes')\nvar compressible = require('compressible')\nvar debug = require('debug')('compression')\nvar onHeaders = require('on-headers')\nvar vary = require('vary')\nvar zlib = require('zlib')\n\n/**\n * Module exports.\n */\n\nmodule.exports = compression\nmodule.exports.filter = shouldCompress\n\n/**\n * Module variables.\n * @private\n */\n\nvar cacheControlNoTransformRegExp = /(?:^|,)\\s*?no-transform\\s*?(?:,|$)/\n\n/**\n * Compress response data with gzip / deflate.\n *\n * @param {Object} options\n * @return {Function} middleware\n * @public\n */\n\nfunction compression(options) {\n  var opts = options || {}\n\n  // options\n  var filter = opts.filter || shouldCompress\n  var threshold = bytes.parse(opts.threshold)\n\n  if (threshold == null) {\n    threshold = 1024\n  }\n\n  return function compression(req, res, next){\n    var ended = false\n    var length\n    var listeners = []\n    var write = res.write\n    var on = res.on\n    var end = res.end\n    var stream\n\n    // flush\n    res.flush = function flush() {\n      if (stream) {\n        stream.flush()\n      }\n    }\n\n    // proxy\n\n    res.write = function(chunk, encoding){\n      if (ended) {\n        return false\n      }\n\n      if (!this._header) {\n        this._implicitHeader()\n      }\n\n      return stream\n        ? stream.write(new Buffer(chunk, encoding))\n        : write.call(this, chunk, encoding)\n    };\n\n    res.end = function(chunk, encoding){\n      if (ended) {\n        return false\n      }\n\n      if (!this._header) {\n        // estimate the length\n        if (!this.getHeader('Content-Length')) {\n          length = chunkLength(chunk, encoding)\n        }\n\n        this._implicitHeader()\n      }\n\n      if (!stream) {\n        return end.call(this, chunk, encoding)\n      }\n\n      // mark ended\n      ended = true\n\n      // write Buffer for Node.js 0.8\n      return chunk\n        ? stream.end(new Buffer(chunk, encoding))\n        : stream.end()\n    };\n\n    res.on = function(type, listener){\n      if (!listeners || type !== 'drain') {\n        return on.call(this, type, listener)\n      }\n\n      if (stream) {\n        return stream.on(type, listener)\n      }\n\n      // buffer listeners for future stream\n      listeners.push([type, listener])\n\n      return this\n    }\n\n    function nocompress(msg) {\n      debug('no compression: %s', msg)\n      addListeners(res, on, listeners)\n      listeners = null\n    }\n\n    onHeaders(res, function(){\n      // determine if request is filtered\n      if (!filter(req, res)) {\n        nocompress('filtered')\n        return\n      }\n\n      // determine if the entity should be transformed\n      if (!shouldTransform(req, res)) {\n        nocompress('no transform')\n        return\n      }\n\n      // vary\n      vary(res, 'Accept-Encoding')\n\n      // content-length below threshold\n      if (Number(res.getHeader('Content-Length')) < threshold || length < threshold) {\n        nocompress('size below threshold')\n        return\n      }\n\n      var encoding = res.getHeader('Content-Encoding') || 'identity';\n\n      // already encoded\n      if ('identity' !== encoding) {\n        nocompress('already encoded')\n        return\n      }\n\n      // head\n      if ('HEAD' === req.method) {\n        nocompress('HEAD request')\n        return\n      }\n\n      // compression method\n      var accept = accepts(req)\n      var method = accept.encoding(['gzip', 'deflate', 'identity'])\n\n      // we really don't prefer deflate\n      if (method === 'deflate' && accept.encoding(['gzip'])) {\n        method = accept.encoding(['gzip', 'identity'])\n      }\n\n      // negotiation failed\n      if (!method || method === 'identity') {\n        nocompress('not acceptable')\n        return\n      }\n\n      // compression stream\n      debug('%s compression', method)\n      stream = method === 'gzip'\n        ? zlib.createGzip(opts)\n        : zlib.createDeflate(opts)\n\n      // add bufferred listeners to stream\n      addListeners(stream, stream.on, listeners)\n\n      // header fields\n      res.setHeader('Content-Encoding', method);\n      res.removeHeader('Content-Length');\n\n      // compression\n      stream.on('data', function(chunk){\n        if (write.call(res, chunk) === false) {\n          stream.pause()\n        }\n      });\n\n      stream.on('end', function(){\n        end.call(res);\n      });\n\n      on.call(res, 'drain', function() {\n        stream.resume()\n      });\n    });\n\n    next();\n  };\n}\n\n/**\n * Add bufferred listeners to stream\n * @private\n */\n\nfunction addListeners(stream, on, listeners) {\n  for (var i = 0; i < listeners.length; i++) {\n    on.apply(stream, listeners[i])\n  }\n}\n\n/**\n * Get the length of a given chunk\n */\n\nfunction chunkLength(chunk, encoding) {\n  if (!chunk) {\n    return 0\n  }\n\n  return !Buffer.isBuffer(chunk)\n    ? Buffer.byteLength(chunk, encoding)\n    : chunk.length\n}\n\n/**\n * Default filter function.\n * @private\n */\n\nfunction shouldCompress(req, res) {\n  var type = res.getHeader('Content-Type')\n\n  if (type === undefined || !compressible(type)) {\n    debug('%s not compressible', type)\n    return false\n  }\n\n  return true\n}\n\n/**\n * Determine if the entity should be transformed.\n * @private\n */\n\nfunction shouldTransform(req, res) {\n  var cacheControl = res.getHeader('Cache-Control')\n\n  // Don't compress for Cache-Control: no-transform\n  // https://tools.ietf.org/html/rfc7234#section-5.2.2.4\n  return !cacheControl\n    || !cacheControlNoTransformRegExp.test(cacheControl)\n}\n"]}