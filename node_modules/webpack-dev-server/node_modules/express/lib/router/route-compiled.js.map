{"version":3,"sources":["route.js"],"names":[],"mappings":"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","file":"route-compiled.js","sourcesContent":["/*!\n * express\n * Copyright(c) 2009-2013 TJ Holowaychuk\n * Copyright(c) 2013 Roman Shtylman\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar debug = require('debug')('express:router:route');\nvar flatten = require('array-flatten');\nvar Layer = require('./layer');\nvar methods = require('methods');\n\n/**\n * Module variables.\n * @private\n */\n\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = Route;\n\n/**\n * Initialize `Route` with the given `path`,\n *\n * @param {String} path\n * @public\n */\n\nfunction Route(path) {\n  this.path = path;\n  this.stack = [];\n\n  debug('new %s', path);\n\n  // route handlers for various http methods\n  this.methods = {};\n}\n\n/**\n * Determine if the route handles a given method.\n * @private\n */\n\nRoute.prototype._handles_method = function _handles_method(method) {\n  if (this.methods._all) {\n    return true;\n  }\n\n  var name = method.toLowerCase();\n\n  if (name === 'head' && !this.methods['head']) {\n    name = 'get';\n  }\n\n  return Boolean(this.methods[name]);\n};\n\n/**\n * @return {Array} supported HTTP methods\n * @private\n */\n\nRoute.prototype._options = function _options() {\n  var methods = Object.keys(this.methods);\n\n  // append automatic head\n  if (this.methods.get && !this.methods.head) {\n    methods.push('head');\n  }\n\n  for (var i = 0; i < methods.length; i++) {\n    // make upper case\n    methods[i] = methods[i].toUpperCase();\n  }\n\n  return methods;\n};\n\n/**\n * dispatch req, res into this route\n * @private\n */\n\nRoute.prototype.dispatch = function dispatch(req, res, done) {\n  var idx = 0;\n  var stack = this.stack;\n  if (stack.length === 0) {\n    return done();\n  }\n\n  var method = req.method.toLowerCase();\n  if (method === 'head' && !this.methods['head']) {\n    method = 'get';\n  }\n\n  req.route = this;\n\n  next();\n\n  function next(err) {\n    if (err && err === 'route') {\n      return done();\n    }\n\n    var layer = stack[idx++];\n    if (!layer) {\n      return done(err);\n    }\n\n    if (layer.method && layer.method !== method) {\n      return next(err);\n    }\n\n    if (err) {\n      layer.handle_error(err, req, res, next);\n    } else {\n      layer.handle_request(req, res, next);\n    }\n  }\n};\n\n/**\n * Add a handler for all HTTP verbs to this route.\n *\n * Behaves just like middleware and can respond or call `next`\n * to continue processing.\n *\n * You can use multiple `.all` call to add multiple handlers.\n *\n *   function check_something(req, res, next){\n *     next();\n *   };\n *\n *   function validate_user(req, res, next){\n *     next();\n *   };\n *\n *   route\n *   .all(validate_user)\n *   .all(check_something)\n *   .get(function(req, res, next){\n *     res.send('hello world');\n *   });\n *\n * @param {function} handler\n * @return {Route} for chaining\n * @api public\n */\n\nRoute.prototype.all = function all() {\n  var handles = flatten(slice.call(arguments));\n\n  for (var i = 0; i < handles.length; i++) {\n    var handle = handles[i];\n\n    if (typeof handle !== 'function') {\n      var type = toString.call(handle);\n      var msg = 'Route.all() requires callback functions but got a ' + type;\n      throw new TypeError(msg);\n    }\n\n    var layer = Layer('/', {}, handle);\n    layer.method = undefined;\n\n    this.methods._all = true;\n    this.stack.push(layer);\n  }\n\n  return this;\n};\n\nmethods.forEach(function(method){\n  Route.prototype[method] = function(){\n    var handles = flatten(slice.call(arguments));\n\n    for (var i = 0; i < handles.length; i++) {\n      var handle = handles[i];\n\n      if (typeof handle !== 'function') {\n        var type = toString.call(handle);\n        var msg = 'Route.' + method + '() requires callback functions but got a ' + type;\n        throw new Error(msg);\n      }\n\n      debug('%s %s', method, this.path);\n\n      var layer = Layer('/', {}, handle);\n      layer.method = method;\n\n      this.methods[method] = true;\n      this.stack.push(layer);\n    }\n\n    return this;\n  };\n});\n"]}