{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;;;;AAWA,MAAM,CAAC,OAAO,GAAG,KAAK;;;;;;;AAAA,AAOtB,IAAI,cAAc,GAAG,MAAM,CAAC,SAAS,CAAC,cAAc;;;;;;;;;;;;AAAA,AAYpD,SAAS,KAAK,CAAC,IAAI,EAAE,GAAG,EAAE,QAAQ,EAAE;AAClC,MAAI,CAAC,IAAI,EAAE;AACT,UAAM,IAAI,SAAS,CAAC,2BAA2B,CAAC,CAAA;GACjD;;AAED,MAAI,CAAC,GAAG,EAAE;AACR,UAAM,IAAI,SAAS,CAAC,0BAA0B,CAAC,CAAA;GAChD;;AAED,MAAI,QAAQ,KAAK,SAAS,EAAE;;AAE1B,YAAQ,GAAG,IAAI,CAAA;GAChB;;AAED,QAAM,CAAC,mBAAmB,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,SAAS,sBAAsB,CAAC,IAAI,EAAE;AAC5E,QAAI,CAAC,QAAQ,IAAI,cAAc,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE;;AAEhD,aAAM;KACP;;;AAAA,AAGD,QAAI,UAAU,GAAG,MAAM,CAAC,wBAAwB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAA;AAC3D,UAAM,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,EAAE,UAAU,CAAC,CAAA;GAC9C,CAAC,CAAA;;AAEF,SAAO,IAAI,CAAA;CACZ","file":"index-compiled.js","sourcesContent":["/*!\n * merge-descriptors\n * Copyright(c) 2014 Jonathan Ong\n * MIT Licensed\n */\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = merge\n\n/**\n * Module variables.\n * @private\n */\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty\n\n/**\n * Merge the property descriptors of `src` into `dest`\n *\n * @param {object} dest Object to add descriptors to\n * @param {object} src Object to clone descriptors from\n * @param {boolean} [redefine=true] Redefine `dest` properties with `src` properties\n * @returns {object} Reference to dest\n * @public\n */\n\nfunction merge(dest, src, redefine) {\n  if (!dest) {\n    throw new TypeError('argument dest is required')\n  }\n\n  if (!src) {\n    throw new TypeError('argument src is required')\n  }\n\n  if (redefine === undefined) {\n    // Default to true\n    redefine = true\n  }\n\n  Object.getOwnPropertyNames(src).forEach(function forEachOwnPropertyName(name) {\n    if (!redefine && hasOwnProperty.call(dest, name)) {\n      // Skip desriptor\n      return\n    }\n\n    // Copy descriptor\n    var descriptor = Object.getOwnPropertyDescriptor(src, name)\n    Object.defineProperty(dest, name, descriptor)\n  })\n\n  return dest\n}\n"]}