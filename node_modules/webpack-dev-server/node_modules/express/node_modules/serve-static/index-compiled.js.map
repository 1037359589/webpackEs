{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/*!\n * serve-static\n * Copyright(c) 2010 Sencha Inc.\n * Copyright(c) 2011 TJ Holowaychuk\n * Copyright(c) 2014-2015 Douglas Christopher Wilson\n * MIT Licensed\n */\n\n'use strict'\n\n/**\n * Module dependencies.\n * @private\n */\n\nvar escapeHtml = require('escape-html')\nvar parseUrl = require('parseurl')\nvar resolve = require('path').resolve\nvar send = require('send')\nvar url = require('url')\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = serveStatic\nmodule.exports.mime = send.mime\n\n/**\n * @param {string} root\n * @param {object} [options]\n * @return {function}\n * @public\n */\n\nfunction serveStatic(root, options) {\n  if (!root) {\n    throw new TypeError('root path required')\n  }\n\n  if (typeof root !== 'string') {\n    throw new TypeError('root path must be a string')\n  }\n\n  // copy options object\n  var opts = Object.create(options || null)\n\n  // fall-though\n  var fallthrough = opts.fallthrough !== false\n\n  // default redirect\n  var redirect = opts.redirect !== false\n\n  // headers listener\n  var setHeaders = opts.setHeaders\n\n  if (setHeaders && typeof setHeaders !== 'function') {\n    throw new TypeError('option setHeaders must be function')\n  }\n\n  // setup options for send\n  opts.maxage = opts.maxage || opts.maxAge || 0\n  opts.root = resolve(root)\n\n  // construct directory listener\n  var onDirectory = redirect\n    ? createRedirectDirectoryListener()\n    : createNotFoundDirectoryListener()\n\n  return function serveStatic(req, res, next) {\n    if (req.method !== 'GET' && req.method !== 'HEAD') {\n      if (fallthrough) {\n        return next()\n      }\n\n      // method not allowed\n      res.statusCode = 405\n      res.setHeader('Allow', 'GET, HEAD')\n      res.setHeader('Content-Length', '0')\n      res.end()\n      return\n    }\n\n    var forwardError = !fallthrough\n    var originalUrl = parseUrl.original(req)\n    var path = parseUrl(req).pathname\n\n    // make sure redirect occurs at mount\n    if (path === '/' && originalUrl.pathname.substr(-1) !== '/') {\n      path = ''\n    }\n\n    // create send stream\n    var stream = send(req, path, opts)\n\n    // add directory handler\n    stream.on('directory', onDirectory)\n\n    // add headers listener\n    if (setHeaders) {\n      stream.on('headers', setHeaders)\n    }\n\n    // add file listener for fallthrough\n    if (fallthrough) {\n      stream.on('file', function onFile() {\n        // once file is determined, always forward error\n        forwardError = true\n      })\n    }\n\n    // forward errors\n    stream.on('error', function error(err) {\n      if (forwardError || !(err.statusCode < 500)) {\n        next(err)\n        return\n      }\n\n      next()\n    })\n\n    // pipe\n    stream.pipe(res)\n  }\n}\n\n/**\n * Collapse all leading slashes into a single slash\n * @private\n */\nfunction collapseLeadingSlashes(str) {\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] !== '/') {\n      break\n    }\n  }\n\n  return i > 1\n    ? '/' + str.substr(i)\n    : str\n}\n\n/**\n * Create a directory listener that just 404s.\n * @private\n */\n\nfunction createNotFoundDirectoryListener() {\n  return function notFound() {\n    this.error(404)\n  }\n}\n\n/**\n * Create a directory listener that performs a redirect.\n * @private\n */\n\nfunction createRedirectDirectoryListener() {\n  return function redirect() {\n    if (this.hasTrailingSlash()) {\n      this.error(404)\n      return\n    }\n\n    // get original URL\n    var originalUrl = parseUrl.original(this.req)\n\n    // append trailing slash\n    originalUrl.path = null\n    originalUrl.pathname = collapseLeadingSlashes(originalUrl.pathname + '/')\n\n    // reformat the URL\n    var loc = url.format(originalUrl)\n    var msg = 'Redirecting to <a href=\"' + escapeHtml(loc) + '\">' + escapeHtml(loc) + '</a>\\n'\n    var res = this.res\n\n    // send redirect response\n    res.statusCode = 303\n    res.setHeader('Content-Type', 'text/html; charset=UTF-8')\n    res.setHeader('Content-Length', Buffer.byteLength(msg))\n    res.setHeader('X-Content-Type-Options', 'nosniff')\n    res.setHeader('Location', loc)\n    res.end(msg)\n  }\n}\n"]}