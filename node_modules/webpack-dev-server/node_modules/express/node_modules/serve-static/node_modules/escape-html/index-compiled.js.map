{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;AAQA;;;;;;;AAAY,CAAC;AAOb,IAAI,eAAe,GAAG,SAAS;;;;;;;AAAC,AAOhC,MAAM,CAAC,OAAO,GAAG,UAAU;;;;;;;;;;AAAC,AAU5B,SAAS,UAAU,CAAC,MAAM,EAAE;AAC1B,MAAI,GAAG,GAAG,EAAE,GAAG,MAAM,CAAC;AACtB,MAAI,KAAK,GAAG,eAAe,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;;AAEtC,MAAI,CAAC,KAAK,EAAE;AACV,WAAO,GAAG,CAAC;GACZ;;AAED,MAAI,MAAM,CAAC;AACX,MAAI,IAAI,GAAG,EAAE,CAAC;AACd,MAAI,KAAK,GAAG,CAAC,CAAC;AACd,MAAI,SAAS,GAAG,CAAC,CAAC;;AAElB,OAAK,KAAK,GAAG,KAAK,CAAC,KAAK,EAAE,KAAK,GAAG,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,EAAE;AACrD,YAAQ,GAAG,CAAC,UAAU,CAAC,KAAK,CAAC;AAC3B,WAAK,EAAE;;AACL,cAAM,GAAG,QAAQ,CAAC;AAClB,cAAM;AAAA,AACR,WAAK,EAAE;;AACL,cAAM,GAAG,OAAO,CAAC;AACjB,cAAM;AAAA,AACR,WAAK,EAAE;;AACL,cAAM,GAAG,OAAO,CAAC;AACjB,cAAM;AAAA,AACR,WAAK,EAAE;;AACL,cAAM,GAAG,MAAM,CAAC;AAChB,cAAM;AAAA,AACR,WAAK,EAAE;;AACL,cAAM,GAAG,MAAM,CAAC;AAChB,cAAM;AAAA,AACR;AACE,iBAAS;AAAA,KACZ;;AAED,QAAI,SAAS,KAAK,KAAK,EAAE;AACvB,UAAI,IAAI,GAAG,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;KACzC;;AAED,aAAS,GAAG,KAAK,GAAG,CAAC,CAAC;AACtB,QAAI,IAAI,MAAM,CAAC;GAChB;;AAED,SAAO,SAAS,KAAK,KAAK,GACtB,IAAI,GAAG,GAAG,CAAC,SAAS,CAAC,SAAS,EAAE,KAAK,CAAC,GACtC,IAAI,CAAC;CACV","file":"index-compiled.js","sourcesContent":["/*!\n * escape-html\n * Copyright(c) 2012-2013 TJ Holowaychuk\n * Copyright(c) 2015 Andreas Lubbe\n * Copyright(c) 2015 Tiancheng \"Timothy\" Gu\n * MIT Licensed\n */\n\n'use strict';\n\n/**\n * Module variables.\n * @private\n */\n\nvar matchHtmlRegExp = /[\"'&<>]/;\n\n/**\n * Module exports.\n * @public\n */\n\nmodule.exports = escapeHtml;\n\n/**\n * Escape special characters in the given string of html.\n *\n * @param  {string} string The string to escape for inserting into HTML\n * @return {string}\n * @public\n */\n\nfunction escapeHtml(string) {\n  var str = '' + string;\n  var match = matchHtmlRegExp.exec(str);\n\n  if (!match) {\n    return str;\n  }\n\n  var escape;\n  var html = '';\n  var index = 0;\n  var lastIndex = 0;\n\n  for (index = match.index; index < str.length; index++) {\n    switch (str.charCodeAt(index)) {\n      case 34: // \"\n        escape = '&quot;';\n        break;\n      case 38: // &\n        escape = '&amp;';\n        break;\n      case 39: // '\n        escape = '&#39;';\n        break;\n      case 60: // <\n        escape = '&lt;';\n        break;\n      case 62: // >\n        escape = '&gt;';\n        break;\n      default:\n        continue;\n    }\n\n    if (lastIndex !== index) {\n      html += str.substring(lastIndex, index);\n    }\n\n    lastIndex = index + 1;\n    html += escape;\n  }\n\n  return lastIndex !== index\n    ? html + str.substring(lastIndex, index)\n    : html;\n}\n"]}