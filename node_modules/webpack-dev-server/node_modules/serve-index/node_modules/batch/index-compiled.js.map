{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index-compiled.js","sourcesContent":["/**\n * Module dependencies.\n */\n\ntry {\n  var EventEmitter = require('events').EventEmitter;\n} catch (err) {\n  var Emitter = require('emitter');\n}\n\n/**\n * Noop.\n */\n\nfunction noop(){}\n\n/**\n * Expose `Batch`.\n */\n\nmodule.exports = Batch;\n\n/**\n * Create a new Batch.\n */\n\nfunction Batch() {\n  if (!(this instanceof Batch)) return new Batch;\n  this.fns = [];\n  this.concurrency(Infinity);\n  this.throws(true);\n  for (var i = 0, len = arguments.length; i < len; ++i) {\n    this.push(arguments[i]);\n  }\n}\n\n/**\n * Inherit from `EventEmitter.prototype`.\n */\n\nif (EventEmitter) {\n  Batch.prototype.__proto__ = EventEmitter.prototype;\n} else {\n  Emitter(Batch.prototype);\n}\n\n/**\n * Set concurrency to `n`.\n *\n * @param {Number} n\n * @return {Batch}\n * @api public\n */\n\nBatch.prototype.concurrency = function(n){\n  this.n = n;\n  return this;\n};\n\n/**\n * Queue a function.\n *\n * @param {Function} fn\n * @return {Batch}\n * @api public\n */\n\nBatch.prototype.push = function(fn){\n  this.fns.push(fn);\n  return this;\n};\n\n/**\n * Set wether Batch will or will not throw up.\n *\n * @param  {Boolean} throws\n * @return {Batch}\n * @api public\n */\nBatch.prototype.throws = function(throws) {\n  this.e = !!throws;\n  return this;\n};\n\n/**\n * Execute all queued functions in parallel,\n * executing `cb(err, results)`.\n *\n * @param {Function} cb\n * @return {Batch}\n * @api public\n */\n\nBatch.prototype.end = function(cb){\n  var self = this\n    , total = this.fns.length\n    , pending = total\n    , results = []\n    , errors = []\n    , cb = cb || noop\n    , fns = this.fns\n    , max = this.n\n    , throws = this.e\n    , index = 0\n    , done;\n\n  // empty\n  if (!fns.length) return cb(null, results);\n\n  // process\n  function next() {\n    var i = index++;\n    var fn = fns[i];\n    if (!fn) return;\n    var start = new Date;\n\n    try {\n      fn(callback);\n    } catch (err) {\n      callback(err);\n    }\n\n    function callback(err, res){\n      if (done) return;\n      if (err && throws) return done = true, cb(err);\n      var complete = total - pending + 1;\n      var end = new Date;\n\n      results[i] = res;\n      errors[i] = err;\n\n      self.emit('progress', {\n        index: i,\n        value: res,\n        error: err,\n        pending: pending,\n        total: total,\n        complete: complete,\n        percent: complete / total * 100 | 0,\n        start: start,\n        end: end,\n        duration: end - start\n      });\n\n      if (--pending) next();\n      else if(!throws) cb(errors, results);\n      else cb(null, results);\n    }\n  }\n\n  // concurrency\n  for (var i = 0; i < fns.length; i++) {\n    if (i == max) break;\n    next();\n  }\n\n  return this;\n};\n"]}