{"version":3,"sources":["info-iframe.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,YAAY,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,YAAY;IAC7C,QAAQ,GAAG,OAAO,CAAC,UAAU,CAAC;IAC9B,KAAK,GAAG,OAAO,CAAC,OAAO,CAAC;IACxB,KAAK,GAAG,OAAO,CAAC,eAAe,CAAC;IAChC,eAAe,GAAG,OAAO,CAAC,oBAAoB,CAAC;IAC/C,kBAAkB,GAAG,OAAO,CAAC,wBAAwB,CAAC,CACvD;;AAEH,IAAI,KAAK,GAAG,YAAW,EAAE,CAAC;AAC1B,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;AACzC,OAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,2BAA2B,CAAC,CAAC;CACvD;;AAED,SAAS,UAAU,CAAC,OAAO,EAAE,GAAG,EAAE;AAChC,MAAI,IAAI,GAAG,IAAI,CAAC;AAChB,cAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAExB,MAAI,EAAE,GAAG,YAAW;AAClB,QAAI,GAAG,GAAG,IAAI,CAAC,GAAG,GAAG,IAAI,eAAe,CAAC,kBAAkB,CAAC,aAAa,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC;;AAEzF,OAAG,CAAC,IAAI,CAAC,SAAS,EAAE,UAAS,GAAG,EAAE;AAChC,UAAI,GAAG,EAAE;AACP,YAAI,CAAC,CAAC;AACN,YAAI;AACF,WAAC,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;SACtB,CAAC,OAAO,CAAC,EAAE;AACV,eAAK,CAAC,UAAU,EAAE,GAAG,CAAC,CAAC;AACvB,cAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACpB,cAAI,CAAC,KAAK,EAAE,CAAC;AACb,iBAAO;SACR;;AAED,YAAI,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;YAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AAC5B,YAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,EAAE,GAAG,CAAC,CAAC;OAChC;AACD,UAAI,CAAC,KAAK,EAAE,CAAC;KACd,CAAC,CAAC;;AAEH,OAAG,CAAC,IAAI,CAAC,OAAO,EAAE,YAAW;AAC3B,UAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACpB,UAAI,CAAC,KAAK,EAAE,CAAC;KACd,CAAC,CAAC;GACJ;;;AAAC,AAGF,MAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAI,EAAE;AACzB,SAAK,CAAC,WAAW,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;GAC/B,MAAM;AACL,MAAE,EAAE,CAAC;GACN;CACF;;AAED,QAAQ,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;;AAEnC,UAAU,CAAC,OAAO,GAAG,YAAW;AAC9B,SAAO,eAAe,CAAC,OAAO,EAAE,CAAC;CAClC,CAAC;;AAEF,UAAU,CAAC,SAAS,CAAC,KAAK,GAAG,YAAW;AACtC,MAAI,IAAI,CAAC,GAAG,EAAE;AACZ,QAAI,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC;GAClB;AACD,MAAI,CAAC,kBAAkB,EAAE,CAAC;AAC1B,MAAI,CAAC,GAAG,GAAG,IAAI,CAAC;CACjB,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,UAAU,CAAC","file":"info-iframe-compiled.js","sourcesContent":["'use strict';\n\nvar EventEmitter = require('events').EventEmitter\n  , inherits = require('inherits')\n  , JSON3 = require('json3')\n  , utils = require('./utils/event')\n  , IframeTransport = require('./transport/iframe')\n  , InfoReceiverIframe = require('./info-iframe-receiver')\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:info-iframe');\n}\n\nfunction InfoIframe(baseUrl, url) {\n  var self = this;\n  EventEmitter.call(this);\n\n  var go = function() {\n    var ifr = self.ifr = new IframeTransport(InfoReceiverIframe.transportName, url, baseUrl);\n\n    ifr.once('message', function(msg) {\n      if (msg) {\n        var d;\n        try {\n          d = JSON3.parse(msg);\n        } catch (e) {\n          debug('bad json', msg);\n          self.emit('finish');\n          self.close();\n          return;\n        }\n\n        var info = d[0], rtt = d[1];\n        self.emit('finish', info, rtt);\n      }\n      self.close();\n    });\n\n    ifr.once('close', function() {\n      self.emit('finish');\n      self.close();\n    });\n  };\n\n  // TODO this seems the same as the 'needBody' from transports\n  if (!global.document.body) {\n    utils.attachEvent('load', go);\n  } else {\n    go();\n  }\n}\n\ninherits(InfoIframe, EventEmitter);\n\nInfoIframe.enabled = function() {\n  return IframeTransport.enabled();\n};\n\nInfoIframe.prototype.close = function() {\n  if (this.ifr) {\n    this.ifr.close();\n  }\n  this.removeAllListeners();\n  this.ifr = null;\n};\n\nmodule.exports = InfoIframe;\n"]}