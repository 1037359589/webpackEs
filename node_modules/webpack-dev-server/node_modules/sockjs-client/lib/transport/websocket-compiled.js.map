{"version":3,"sources":["websocket.js"],"names":[],"mappings":"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","file":"websocket-compiled.js","sourcesContent":["'use strict';\n\nvar utils = require('../utils/event')\n  , urlUtils = require('../utils/url')\n  , inherits = require('inherits')\n  , EventEmitter = require('events').EventEmitter\n  , WebsocketDriver = require('./driver/websocket')\n  ;\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:websocket');\n}\n\nfunction WebSocketTransport(transUrl) {\n  if (!WebSocketTransport.enabled()) {\n    throw new Error('Transport created when disabled');\n  }\n\n  EventEmitter.call(this);\n  debug('constructor', transUrl);\n\n  var self = this;\n  var url = urlUtils.addPath(transUrl, '/websocket');\n  if (url.slice(0, 5) === 'https') {\n    url = 'wss' + url.slice(5);\n  } else {\n    url = 'ws' + url.slice(4);\n  }\n  this.url = url;\n\n  this.ws = new WebsocketDriver(this.url);\n  this.ws.onmessage = function(e) {\n    debug('message event', e.data);\n    self.emit('message', e.data);\n  };\n  // Firefox has an interesting bug. If a websocket connection is\n  // created after onunload, it stays alive even when user\n  // navigates away from the page. In such situation let's lie -\n  // let's not open the ws connection at all. See:\n  // https://github.com/sockjs/sockjs-client/issues/28\n  // https://bugzilla.mozilla.org/show_bug.cgi?id=696085\n  this.unloadRef = utils.unloadAdd(function() {\n    debug('unload');\n    self.ws.close();\n  });\n  this.ws.onclose = function(e) {\n    debug('close event', e.code, e.reason);\n    self.emit('close', e.code, e.reason);\n    self._cleanup();\n  };\n  this.ws.onerror = function(e) {\n    debug('error event', e);\n    self.emit('close', 1006, 'WebSocket connection broken');\n    self._cleanup();\n  };\n}\n\ninherits(WebSocketTransport, EventEmitter);\n\nWebSocketTransport.prototype.send = function(data) {\n  var msg = '[' + data + ']';\n  debug('send', msg);\n  this.ws.send(msg);\n};\n\nWebSocketTransport.prototype.close = function() {\n  debug('close');\n  if (this.ws) {\n    this.ws.close();\n  }\n  this._cleanup();\n};\n\nWebSocketTransport.prototype._cleanup = function() {\n  debug('_cleanup');\n  var ws = this.ws;\n  if (ws) {\n    ws.onmessage = ws.onclose = ws.onerror = null;\n  }\n  utils.unloadDel(this.unloadRef);\n  this.unloadRef = this.ws = null;\n  this.removeAllListeners();\n};\n\nWebSocketTransport.enabled = function() {\n  debug('enabled');\n  return !!WebsocketDriver;\n};\nWebSocketTransport.transportName = 'websocket';\n\n// In theory, ws should require 1 round trip. But in chrome, this is\n// not very stable over SSL. Most likely a ws connection requires a\n// separate SSL connection, in which case 2 round trips are an\n// absolute minumum.\nWebSocketTransport.roundTrips = 2;\n\nmodule.exports = WebSocketTransport;\n"]}