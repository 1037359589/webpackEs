{"version":3,"sources":["event.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,MAAM,GAAG,OAAO,CAAC,UAAU,CAAC,CAAC;;AAEjC,IAAI,QAAQ,GAAG,EAAE;IACb,WAAW,GAAG,KAAK;;AAAA;IAEnB,mBAAmB,GAAG,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,IAAI,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CACtF;;AAEH,MAAM,CAAC,OAAO,GAAG;AACf,aAAW,EAAE,UAAS,KAAK,EAAE,QAAQ,EAAE;AACrC,QAAI,OAAO,MAAM,CAAC,gBAAgB,KAAK,WAAW,EAAE;AAClD,YAAM,CAAC,gBAAgB,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;KACjD,MAAM,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,WAAW,EAAE;;;;AAIhD,YAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,GAAG,KAAK,EAAE,QAAQ,CAAC;;AAAC,AAEpD,YAAM,CAAC,WAAW,CAAC,IAAI,GAAG,KAAK,EAAE,QAAQ,CAAC,CAAC;KAC5C;GACF;;AAED,aAAW,EAAE,UAAS,KAAK,EAAE,QAAQ,EAAE;AACrC,QAAI,OAAO,MAAM,CAAC,gBAAgB,KAAK,WAAW,EAAE;AAClD,YAAM,CAAC,mBAAmB,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;KACpD,MAAM,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,WAAW,EAAE;AAChD,YAAM,CAAC,QAAQ,CAAC,WAAW,CAAC,IAAI,GAAG,KAAK,EAAE,QAAQ,CAAC,CAAC;AACpD,YAAM,CAAC,WAAW,CAAC,IAAI,GAAG,KAAK,EAAE,QAAQ,CAAC,CAAC;KAC5C;GACF;;AAED,WAAS,EAAE,UAAS,QAAQ,EAAE;AAC5B,QAAI,mBAAmB,EAAE;AACvB,aAAO,IAAI,CAAC;KACb;;AAED,QAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AAC3B,YAAQ,CAAC,GAAG,CAAC,GAAG,QAAQ,CAAC;AACzB,QAAI,WAAW,EAAE;AACf,gBAAU,CAAC,IAAI,CAAC,sBAAsB,EAAE,CAAC,CAAC,CAAC;KAC5C;AACD,WAAO,GAAG,CAAC;GACZ;;AAED,WAAS,EAAE,UAAS,GAAG,EAAE;AACvB,QAAI,GAAG,IAAI,QAAQ,EAAE;AACnB,aAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;KACtB;GACF;;AAED,wBAAsB,EAAE,YAAW;AACjC,SAAK,IAAI,GAAG,IAAI,QAAQ,EAAE;AACxB,cAAQ,CAAC,GAAG,CAAC,EAAE,CAAC;AAChB,aAAO,QAAQ,CAAC,GAAG,CAAC,CAAC;KACtB;GACF;CACF,CAAC;;AAEF,IAAI,eAAe,GAAG,YAAW;AAC/B,MAAI,WAAW,EAAE;AACf,WAAO;GACR;AACD,aAAW,GAAG,IAAI,CAAC;AACnB,QAAM,CAAC,OAAO,CAAC,sBAAsB,EAAE,CAAC;CACzC;;;;AAAC,AAIF,IAAI,CAAC,mBAAmB,EAAE;AACxB,QAAM,CAAC,OAAO,CAAC,WAAW,CAAC,QAAQ,EAAE,eAAe,CAAC,CAAC;CACvD","file":"event-compiled.js","sourcesContent":["'use strict';\n\nvar random = require('./random');\n\nvar onUnload = {}\n  , afterUnload = false\n    // detect google chrome packaged apps because they don't allow the 'unload' event\n  , isChromePackagedApp = global.chrome && global.chrome.app && global.chrome.app.runtime\n  ;\n\nmodule.exports = {\n  attachEvent: function(event, listener) {\n    if (typeof global.addEventListener !== 'undefined') {\n      global.addEventListener(event, listener, false);\n    } else if (global.document && global.attachEvent) {\n      // IE quirks.\n      // According to: http://stevesouders.com/misc/test-postmessage.php\n      // the message gets delivered only to 'document', not 'window'.\n      global.document.attachEvent('on' + event, listener);\n      // I get 'window' for ie8.\n      global.attachEvent('on' + event, listener);\n    }\n  }\n\n, detachEvent: function(event, listener) {\n    if (typeof global.addEventListener !== 'undefined') {\n      global.removeEventListener(event, listener, false);\n    } else if (global.document && global.detachEvent) {\n      global.document.detachEvent('on' + event, listener);\n      global.detachEvent('on' + event, listener);\n    }\n  }\n\n, unloadAdd: function(listener) {\n    if (isChromePackagedApp) {\n      return null;\n    }\n\n    var ref = random.string(8);\n    onUnload[ref] = listener;\n    if (afterUnload) {\n      setTimeout(this.triggerUnloadCallbacks, 0);\n    }\n    return ref;\n  }\n\n, unloadDel: function(ref) {\n    if (ref in onUnload) {\n      delete onUnload[ref];\n    }\n  }\n\n, triggerUnloadCallbacks: function() {\n    for (var ref in onUnload) {\n      onUnload[ref]();\n      delete onUnload[ref];\n    }\n  }\n};\n\nvar unloadTriggered = function() {\n  if (afterUnload) {\n    return;\n  }\n  afterUnload = true;\n  module.exports.triggerUnloadCallbacks();\n};\n\n// 'unload' alone is not reliable in opera within an iframe, but we\n// can't use `beforeunload` as IE fires it on javascript: links.\nif (!isChromePackagedApp) {\n  module.exports.attachEvent('unload', unloadTriggered);\n}\n"]}