{"version":3,"sources":["transport.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,KAAK,GAAG,YAAW,EAAE,CAAC;AAC1B,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;AACzC,OAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,+BAA+B,CAAC,CAAC;CAC3D;;AAED,MAAM,CAAC,OAAO,GAAG,UAAS,mBAAmB,EAAE;AAC7C,SAAO;AACL,mBAAe,EAAE,UAAS,mBAAmB,EAAE,IAAI,EAAE;AACnD,UAAI,UAAU,GAAG;AACf,YAAI,EAAE,EAAE;AACR,cAAM,EAAE,EAAE;OACX,CAAC;AACF,UAAI,CAAC,mBAAmB,EAAE;AACxB,2BAAmB,GAAG,EAAE,CAAC;OAC1B,MAAM,IAAI,OAAO,mBAAmB,KAAK,QAAQ,EAAE;AAClD,2BAAmB,GAAG,CAAC,mBAAmB,CAAC,CAAC;OAC7C;;AAED,yBAAmB,CAAC,OAAO,CAAC,UAAS,KAAK,EAAE;AAC1C,YAAI,CAAC,KAAK,EAAE;AACV,iBAAO;SACR;;AAED,YAAI,KAAK,CAAC,aAAa,KAAK,WAAW,IAAI,IAAI,CAAC,SAAS,KAAK,KAAK,EAAE;AACnE,eAAK,CAAC,sBAAsB,EAAE,WAAW,CAAC,CAAC;AAC3C,iBAAO;SACR;;AAED,YAAI,mBAAmB,CAAC,MAAM,IAC1B,mBAAmB,CAAC,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,EAAE;AAC3D,eAAK,CAAC,kBAAkB,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC;AAC/C,iBAAO;SACR;;AAED,YAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;AACvB,eAAK,CAAC,SAAS,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC;AACtC,oBAAU,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC5B,cAAI,KAAK,CAAC,eAAe,EAAE;AACzB,sBAAU,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,eAAe,CAAC,CAAC;WAC/C;SACF,MAAM;AACL,eAAK,CAAC,UAAU,EAAE,KAAK,CAAC,aAAa,CAAC,CAAC;SACxC;OACF,CAAC,CAAC;AACH,aAAO,UAAU,CAAC;KACnB;GACF,CAAC;CACH,CAAC","file":"transport-compiled.js","sourcesContent":["'use strict';\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:utils:transport');\n}\n\nmodule.exports = function(availableTransports) {\n  return {\n    filterToEnabled: function(transportsWhitelist, info) {\n      var transports = {\n        main: []\n      , facade: []\n      };\n      if (!transportsWhitelist) {\n        transportsWhitelist = [];\n      } else if (typeof transportsWhitelist === 'string') {\n        transportsWhitelist = [transportsWhitelist];\n      }\n\n      availableTransports.forEach(function(trans) {\n        if (!trans) {\n          return;\n        }\n\n        if (trans.transportName === 'websocket' && info.websocket === false) {\n          debug('disabled from server', 'websocket');\n          return;\n        }\n\n        if (transportsWhitelist.length &&\n            transportsWhitelist.indexOf(trans.transportName) === -1) {\n          debug('not in whitelist', trans.transportName);\n          return;\n        }\n\n        if (trans.enabled(info)) {\n          debug('enabled', trans.transportName);\n          transports.main.push(trans);\n          if (trans.facadeTransport) {\n            transports.facade.push(trans.facadeTransport);\n          }\n        } else {\n          debug('disabled', trans.transportName);\n        }\n      });\n      return transports;\n    }\n  };\n};\n"]}