{"version":3,"sources":["url.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,GAAG,GAAG,OAAO,CAAC,WAAW,CAAC,CAAC;;AAE/B,IAAI,KAAK,GAAG,YAAW,EAAE,CAAC;AAC1B,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,KAAK,YAAY,EAAE;AACzC,OAAK,GAAG,OAAO,CAAC,OAAO,CAAC,CAAC,yBAAyB,CAAC,CAAC;CACrD;;AAED,MAAM,CAAC,OAAO,GAAG;AACf,WAAS,EAAE,UAAS,GAAG,EAAE;AACvB,QAAI,CAAC,GAAG,EAAE;AACR,aAAO,IAAI,CAAC;KACb;;AAED,QAAI,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,CAAC,CAAC;AACrB,QAAI,CAAC,CAAC,QAAQ,KAAK,OAAO,EAAE;AAC1B,aAAO,IAAI,CAAC;KACb;;AAED,QAAI,IAAI,GAAG,CAAC,CAAC,IAAI,CAAC;AAClB,QAAI,CAAC,IAAI,EAAE;AACT,UAAI,GAAG,AAAC,CAAC,CAAC,QAAQ,KAAK,QAAQ,GAAI,KAAK,GAAG,IAAI,CAAC;KACjD;;AAED,WAAO,CAAC,CAAC,QAAQ,GAAG,IAAI,GAAG,CAAC,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC;GACpD;;AAED,eAAa,EAAE,UAAS,CAAC,EAAE,CAAC,EAAE;AAC5B,QAAI,GAAG,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;AAClD,SAAK,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,CAAC;AACzB,WAAO,GAAG,CAAC;GACZ;;AAED,eAAa,EAAE,UAAS,CAAC,EAAE,CAAC,EAAE;AAC5B,WAAQ,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAE;GAC9C;;AAED,SAAO,EAAE,UAAU,GAAG,EAAE,IAAI,EAAE;AAC5B,QAAI,EAAE,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACxB,WAAO,EAAE,CAAC,CAAC,CAAC,GAAG,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAA,AAAC,CAAC;GAClD;;AAED,UAAQ,EAAE,UAAU,GAAG,EAAE,CAAC,EAAE;AAC1B,WAAO,GAAG,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,GAAI,GAAG,GAAG,CAAC,GAAK,GAAG,GAAG,CAAC,CAAC,AAAC,CAAC;GAChE;CACF,CAAC","file":"url-compiled.js","sourcesContent":["'use strict';\n\nvar URL = require('url-parse');\n\nvar debug = function() {};\nif (process.env.NODE_ENV !== 'production') {\n  debug = require('debug')('sockjs-client:utils:url');\n}\n\nmodule.exports = {\n  getOrigin: function(url) {\n    if (!url) {\n      return null;\n    }\n\n    var p = new URL(url);\n    if (p.protocol === 'file:') {\n      return null;\n    }\n\n    var port = p.port;\n    if (!port) {\n      port = (p.protocol === 'https:') ? '443' : '80';\n    }\n\n    return p.protocol + '//' + p.hostname + ':' + port;\n  }\n\n, isOriginEqual: function(a, b) {\n    var res = this.getOrigin(a) === this.getOrigin(b);\n    debug('same', a, b, res);\n    return res;\n  }\n\n, isSchemeEqual: function(a, b) {\n    return (a.split(':')[0] === b.split(':')[0]);\n  }\n\n, addPath: function (url, path) {\n    var qs = url.split('?');\n    return qs[0] + path + (qs[1] ? '?' + qs[1] : '');\n  }\n\n, addQuery: function (url, q) {\n    return url + (url.indexOf('?') === -1 ? ('?' + q) : ('&' + q));\n  }\n};\n"]}