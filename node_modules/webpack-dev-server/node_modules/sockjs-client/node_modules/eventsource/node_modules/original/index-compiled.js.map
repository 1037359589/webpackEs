{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,KAAK,GAAG,OAAO,CAAC,WAAW,CAAC;;;;;;;;;AAAC,AASjC,SAAS,MAAM,CAAC,GAAG,EAAE;AACnB,MAAI,QAAQ,KAAK,OAAO,GAAG,EAAE,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC,CAAC;;;;;;AAAA,AAM9C,MAAI,CAAC,GAAG,CAAC,QAAQ,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,OAAO,MAAM,CAAC;;;;;;;;;AAAA,AASlD,SAAO,CAAC,GAAG,CAAC,QAAQ,GAAE,IAAI,GAAE,GAAG,CAAC,IAAI,CAAA,CAAE,WAAW,EAAE,CAAC;CACrD;;;;;;;;;;AAAA,AAUD,MAAM,CAAC,IAAI,GAAG,SAAS,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE;AAChC,SAAO,MAAM,CAAC,CAAC,CAAC,KAAK,MAAM,CAAC,CAAC,CAAC,CAAC;CAChC;;;;;AAAC,AAKF,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","file":"index-compiled.js","sourcesContent":["'use strict';\n\nvar parse = require('url-parse');\n\n/**\n * Transform an URL to a valid origin value.\n *\n * @param {String|Object} url URL to transform to it's origin.\n * @returns {String} The origin.\n * @api public\n */\nfunction origin(url) {\n  if ('string' === typeof url) url = parse(url);\n\n  //\n  // 6.2.  ASCII Serialization of an Origin\n  // http://tools.ietf.org/html/rfc6454#section-6.2\n  //\n  if (!url.protocol || !url.hostname) return 'null';\n\n  //\n  // 4. Origin of a URI\n  // http://tools.ietf.org/html/rfc6454#section-4\n  //\n  // States that url.scheme, host should be converted to lower case. This also\n  // makes it easier to match origins as everything is just lower case.\n  //\n  return (url.protocol +'//'+ url.host).toLowerCase();\n}\n\n/**\n * Check if the origins are the same.\n *\n * @param {String} a URL or origin of a.\n * @param {String} b URL or origin of b.\n * @returns {Boolean}\n * @api public\n */\norigin.same = function same(a, b) {\n  return origin(a) === origin(b);\n};\n\n//\n// Expose the origin\n//\nmodule.exports = origin;\n"]}