{"version":3,"sources":["client.js"],"names":[],"mappings":"AAAA,IAAI,IAAI,GAAK,OAAO,CAAC,MAAM,CAAC;IACxB,GAAG,GAAM,OAAO,CAAC,KAAK,CAAC;IACvB,GAAG,GAAM,OAAO,CAAC,KAAK,CAAC;IACvB,MAAM,GAAG,OAAO,CAAC,kBAAkB,CAAC;IACpC,GAAG,GAAM,OAAO,CAAC,OAAO,CAAC;IACzB,KAAK,GAAI,OAAO,CAAC,aAAa,CAAC,CAAC;;AAEpC,IAAI,MAAM,GAAG,UAAS,GAAG,EAAE,SAAS,EAAE,OAAO,EAAE;AAC7C,SAAO,GAAG,OAAO,IAAI,EAAE,CAAC;;AAExB,MAAI,CAAC,GAAG,GAAO,GAAG,CAAC;AACnB,MAAI,CAAC,IAAI,GAAM,OAAO,CAAC,KAAK,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACzC,MAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,EAAC,SAAS,EAAE,OAAO,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAC,CAAC,CAAC;;AAExF,GAAC,MAAM,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,UAAS,KAAK,EAAE;AACxC,QAAI,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,EAAE,YAAW;AAChC,UAAI,CAAC,OAAO,GAAM,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC;AACvC,UAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC;KAC3C,CAAC,CAAC;GACJ,EAAE,IAAI,CAAC,CAAC;;AAET,MAAI,MAAM,GAAQ,IAAI,CAAC,IAAI,CAAC,QAAQ,KAAK,MAAM,AAAC;MAC5C,SAAS,GAAI,YAAW;AAAE,QAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAA;GAAE;MAChD,UAAU,GAAG,EAAE;MACf,IAAI,GAAS,IAAI,CAAC;;AAEtB,MAAI,OAAO,CAAC,EAAE,EAAE,UAAU,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;;AAE3C,MAAI,UAAU,GAAG,MAAM,GACN,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,EAAE,SAAS,CAAC,GAC7E,GAAG,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,EAAE,EAAE,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;;AAEhF,MAAI,CAAC,OAAO,GAAG,UAAU,CAAC;AAC1B,MAAI,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC;;AAEnD,KAAG,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;CACzB,CAAC;AACF,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;;AAE3B,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","file":"client-compiled.js","sourcesContent":["var util   = require('util'),\n    net    = require('net'),\n    tls    = require('tls'),\n    driver = require('websocket-driver'),\n    API    = require('./api'),\n    Event  = require('./api/event');\n\nvar Client = function(url, protocols, options) {\n  options = options || {};\n\n  this.url     = url;\n  this._uri    = require('url').parse(url);\n  this._driver = driver.client(url, {maxLength: options.maxLength, protocols: protocols});\n\n  ['open', 'error'].forEach(function(event) {\n    this._driver.on(event, function() {\n      self.headers    = self._driver.headers;\n      self.statusCode = self._driver.statusCode;\n    });\n  }, this);\n\n  var secure     = (this._uri.protocol === 'wss:'),\n      onConnect  = function() { self._driver.start() },\n      tlsOptions = {},\n      self       = this;\n\n  if (options.ca) tlsOptions.ca = options.ca;\n\n  var connection = secure\n                 ? tls.connect(this._uri.port || 443, this._uri.hostname, tlsOptions, onConnect)\n                 : net.createConnection(this._uri.port || 80, this._uri.hostname);\n\n  this._stream = connection;\n  if (!secure) this._stream.on('connect', onConnect);\n\n  API.call(this, options);\n};\nutil.inherits(Client, API);\n\nmodule.exports = Client;\n"]}