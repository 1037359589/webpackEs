{"version":3,"sources":["driver.js"],"names":[],"mappings":"AAAA;;;;;;;;AAAY,CAAC;AAQb,IAAI,IAAI,GAAK,OAAO,CAAC,eAAe,CAAC;IACjC,MAAM,GAAG,OAAO,CAAC,iBAAiB,CAAC;IACnC,MAAM,GAAG,OAAO,CAAC,iBAAiB,CAAC,CAAC;;AAExC,IAAI,MAAM,GAAG;AACX,QAAM,EAAE,UAAS,GAAG,EAAE,OAAO,EAAE;AAC7B,WAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AACxB,QAAI,OAAO,CAAC,OAAO,KAAK,SAAS,EAAE,OAAO,CAAC,OAAO,GAAG,IAAI,CAAC;AAC1D,WAAO,IAAI,MAAM,CAAC,GAAG,EAAE,OAAO,CAAC,CAAC;GACjC;;AAED,QAAM,EAAE,UAAS,OAAO,EAAE;AACxB,WAAO,GAAG,OAAO,IAAI,EAAE,CAAC;AACxB,QAAI,OAAO,CAAC,cAAc,KAAK,SAAS,EAAE,OAAO,CAAC,cAAc,GAAG,IAAI,CAAC;AACxE,WAAO,IAAI,MAAM,CAAC,OAAO,CAAC,CAAC;GAC5B;;AAED,MAAI,EAAE,YAAW;AACf,WAAO,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,SAAS,CAAC,CAAC;GAC7C;;AAED,iBAAe,EAAE,UAAS,OAAO,EAAE;AACjC,WAAO,MAAM,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;GACxC;;AAED,aAAW,EAAE,UAAS,OAAO,EAAE;AAC7B,QAAI,OAAO,CAAC,MAAM,KAAK,KAAK,EAAE,OAAO,KAAK,CAAC;;AAE3C,QAAI,UAAU,GAAG,OAAO,CAAC,OAAO,CAAC,UAAU,IAAI,EAAE;QAC7C,OAAO,GAAM,OAAO,CAAC,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;;AAE/C,WAAO,OAAO,CAAC,MAAM,KAAK,KAAK,IACxB,UAAU,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,IAC/D,OAAO,CAAC,WAAW,EAAE,KAAK,WAAW,CAAC;GAC9C;;AAED,iBAAe,EAAE,UAAS,OAAO,EAAE,SAAS,EAAE;AAC5C,QAAI,CAAC,eAAe,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;GAC1C;CACF,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,MAAM,CAAC","file":"driver-compiled.js","sourcesContent":["'use strict';\n\n// Protocol references:\n// \n// * http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-75\n// * http://tools.ietf.org/html/draft-hixie-thewebsocketprotocol-76\n// * http://tools.ietf.org/html/draft-ietf-hybi-thewebsocketprotocol-17\n\nvar Base   = require('./driver/base'),\n    Client = require('./driver/client'),\n    Server = require('./driver/server');\n\nvar Driver = {\n  client: function(url, options) {\n    options = options || {};\n    if (options.masking === undefined) options.masking = true;\n    return new Client(url, options);\n  },\n\n  server: function(options) {\n    options = options || {};\n    if (options.requireMasking === undefined) options.requireMasking = true;\n    return new Server(options);\n  },\n\n  http: function() {\n    return Server.http.apply(Server, arguments);\n  },\n\n  isSecureRequest: function(request) {\n    return Server.isSecureRequest(request);\n  },\n\n  isWebSocket: function(request) {\n    if (request.method !== 'GET') return false;\n\n    var connection = request.headers.connection || '',\n        upgrade    = request.headers.upgrade || '';\n\n    return request.method === 'GET' &&\n           connection.toLowerCase().split(/ *, */).indexOf('upgrade') >= 0 &&\n           upgrade.toLowerCase() === 'websocket';\n  },\n\n  validateOptions: function(options, validKeys) {\n    Base.validateOptions(options, validKeys);\n  }\n};\n\nmodule.exports = Driver;\n"]}