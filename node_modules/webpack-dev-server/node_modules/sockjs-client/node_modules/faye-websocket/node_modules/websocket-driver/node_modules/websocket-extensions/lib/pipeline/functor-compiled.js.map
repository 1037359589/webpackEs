{"version":3,"sources":["functor.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,IAAI,UAAU,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;;AAE1C,IAAI,OAAO,GAAG,UAAS,OAAO,EAAE,MAAM,EAAE;AACtC,MAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AACxB,MAAI,CAAC,OAAO,GAAI,MAAM,CAAC;AACvB,MAAI,CAAC,MAAM,GAAK,IAAI,UAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;AACnD,MAAI,CAAC,QAAQ,GAAG,KAAK,CAAC;AACtB,MAAI,CAAC,OAAO,GAAI,CAAC,CAAC;CACnB,CAAC;;AAEF,OAAO,CAAC,UAAU,GAAG,CAAC,CAAC;;AAEvB,OAAO,CAAC,SAAS,CAAC,IAAI,GAAG,UAAS,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAE,OAAO,EAAE;AACnE,MAAI,IAAI,CAAC,QAAQ,EAAE,OAAO;;AAE1B,MAAI,MAAM,GAAG,EAAC,KAAK,EAAE,KAAK,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAC;MAC5F,MAAM,GAAG,KAAK;MACd,IAAI,GAAK,IAAI,CAAC;;AAElB,MAAI,CAAC,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;AAEzB,MAAI,MAAM,CAAC,KAAK,EAAE;AAChB,UAAM,CAAC,IAAI,GAAG,IAAI,CAAC;AACnB,QAAI,CAAC,KAAK,EAAE,CAAC;AACb,WAAO,IAAI,CAAC,WAAW,EAAE,CAAC;GAC3B;;AAED,MAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,UAAS,GAAG,EAAE,GAAG,EAAE;AACtD,QAAI,EAAE,MAAM,IAAI,MAAM,GAAG,IAAI,CAAA,CAAC,AAAC,EAAE,OAAO;;AAExC,QAAI,GAAG,EAAE;AACP,UAAI,CAAC,KAAK,EAAE,CAAC;AACb,YAAM,CAAC,KAAK,GAAK,GAAG,CAAC;AACrB,YAAM,CAAC,OAAO,GAAG,IAAI,CAAC;KACvB,MAAM;AACL,YAAM,CAAC,OAAO,GAAG,GAAG,CAAC;KACtB;;AAED,UAAM,CAAC,IAAI,GAAG,IAAI,CAAC;AACnB,QAAI,CAAC,WAAW,EAAE,CAAC;GACpB,CAAC,CAAC;CACJ,CAAC;;AAEF,OAAO,CAAC,SAAS,CAAC,KAAK,GAAG,YAAW;AACnC,MAAI,CAAC,OAAO,GAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;AACnC,MAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;CACtB,CAAC;;AAEF,OAAO,CAAC,SAAS,CAAC,WAAW,GAAG,YAAW;AACzC,MAAI,KAAK,GAAG,IAAI,CAAC,MAAM;MAAE,MAAM,CAAC;;AAEhC,SAAO,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,IAAI,EAAE;AAC5C,QAAI,CAAC,OAAO,IAAI,CAAC,CAAC;AAClB,UAAM,GAAG,KAAK,CAAC,KAAK,EAAE,CAAC;AACvB,UAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,EAAE,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,OAAO,CAAC,CAAC;GACpE;CACF,CAAC;;AAEF,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC","file":"functor-compiled.js","sourcesContent":["'use strict';\n\nvar RingBuffer = require('./ring_buffer');\n\nvar Functor = function(session, method) {\n  this._session = session;\n  this._method  = method;\n  this._queue   = new RingBuffer(Functor.QUEUE_SIZE);\n  this._stopped = false;\n  this.pending  = 0;\n};\n\nFunctor.QUEUE_SIZE = 8;\n\nFunctor.prototype.call = function(error, message, callback, context) {\n  if (this._stopped) return;\n\n  var record = {error: error, message: message, callback: callback, context: context, done: false},\n      called = false,\n      self   = this;\n\n  this._queue.push(record);\n\n  if (record.error) {\n    record.done = true;\n    this._stop();\n    return this._flushQueue();\n  }\n\n  this._session[this._method](message, function(err, msg) {\n    if (!(called ^ (called = true))) return;\n\n    if (err) {\n      self._stop();\n      record.error   = err;\n      record.message = null;\n    } else {\n      record.message = msg;\n    }\n\n    record.done = true;\n    self._flushQueue();\n  });\n};\n\nFunctor.prototype._stop = function() {\n  this.pending  = this._queue.length;\n  this._stopped = true;\n};\n\nFunctor.prototype._flushQueue = function() {\n  var queue = this._queue, record;\n\n  while (queue.length > 0 && queue.peek().done) {\n    this.pending -= 1;\n    record = queue.shift();\n    record.callback.call(record.context, record.error, record.message);\n  }\n};\n\nmodule.exports = Functor;\n"]}