{"version":3,"sources":["test.js"],"names":[],"mappings":"AAAA,QAAQ,CAAC,gBAAgB,EAAE,YAAY;AACrC,cAAY,CAAC;;AAEb,MAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC;MAC1B,EAAE,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;;AAEvB,UAAQ,CAAC,YAAY,EAAE,YAAY;AACjC,QAAI,GAAG,GAAG;AACR,SAAG,EAAE,KAAK;AACV,SAAG,EAAE,KAAK;KACX,CAAC;;AAEF,MAAE,CAAC,sBAAsB,EAAE,YAAY;AACrC,YAAM,CAAC,EAAE,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;KACvC,CAAC,CAAC;;AAEH,MAAE,CAAC,sBAAsB,EAAE,YAAY;AACrC,YAAM,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,iBAAiB,CAAC,CAAC;KACrD,CAAC,CAAC;;AAEH,MAAE,CAAC,uBAAuB,EAAE,YAAY;AACtC,YAAM,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;KAC5D,CAAC,CAAC;;AAEH,MAAE,CAAC,+BAA+B,EAAE,YAAY;AAC9C,YAAM,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;KAC3D,CAAC,CAAC;;AAEH,MAAE,CAAC,mCAAmC,EAAE,YAAY;AAClD,YAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AAC1C,YAAM,CAAC,EAAE,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;KACrC,CAAC,CAAC;;AAEH,MAAE,CAAC,2BAA2B,EAAE,YAAY;AAC1C,UAAI,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;;AAE9B,SAAG,CAAC,GAAG,GAAC,KAAK,CAAC;AACd,YAAM,CAAC,EAAE,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;KAC7C,CAAC,CAAC;GACJ,CAAC,CAAC;;AAEH,UAAQ,CAAC,QAAQ,EAAE,YAAY;AAC7B,MAAE,CAAC,sBAAsB,EAAE,YAAY;AACrC,YAAM,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC;KACnC,CAAC,CAAC;;AAEH,MAAE,CAAC,uCAAuC,EAAE,YAAY;AACtD,UAAI,GAAG,GAAG,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;;AAE9B,YAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;AAC3B,YAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KAC/B,CAAC,CAAC;;AAEH,MAAE,CAAC,kDAAkD,EAAE,YAAY;AACjE,UAAI,GAAG,GAAG,EAAE,CAAC,KAAK,CAAC,2BAA2B,CAAC,CAAC;;AAEhD,YAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;AAC3B,YAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;AAC9B,YAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;KACxC,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ,CAAC,CAAC","file":"test-compiled.js","sourcesContent":["describe('querystringify', function () {\n  'use strict';\n\n  var assume = require('assume')\n    , qs = require('./');\n\n  describe('#stringify', function () {\n    var obj = {\n      foo: 'bar',\n      bar: 'foo'\n    };\n\n    it('is exposed as method', function () {\n      assume(qs.stringify).is.a('function');\n    });\n\n    it('transforms an object', function () {\n      assume(qs.stringify(obj)).equals('foo=bar&bar=foo');\n    });\n\n    it('can optionally prefix', function () {\n      assume(qs.stringify(obj, true)).equals('?foo=bar&bar=foo');\n    });\n\n    it('can prefix with custom things', function () {\n      assume(qs.stringify(obj, '&')).equals('&foo=bar&bar=foo');\n    });\n\n    it('doesnt prefix empty query strings', function () {\n      assume(qs.stringify({}, true)).equals('');\n      assume(qs.stringify({})).equals('');\n    });\n\n    it('works with nulled objects', function () {\n      var obj = Object.create(null);\n\n      obj.foo='bar';\n      assume(qs.stringify(obj)).equals('foo=bar');\n    });\n  });\n\n  describe('#parse', function () {\n    it('is exposed as method', function () {\n      assume(qs.parse).is.a('function');\n    });\n\n    it('will parse a querystring to an object', function () {\n      var obj = qs.parse('foo=bar');\n\n      assume(obj).is.a('object');\n      assume(obj.foo).equals('bar');\n    });\n\n    it('will also work if querystring is prefixed with ?', function () {\n      var obj = qs.parse('?foo=bar&shizzle=mynizzle');\n\n      assume(obj).is.a('object');\n      assume(obj.foo).equals('bar');\n      assume(obj.shizzle).equals('mynizzle');\n    });\n  });\n});\n"]}