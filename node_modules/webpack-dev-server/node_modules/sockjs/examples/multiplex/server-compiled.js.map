{"version":3,"sources":["server.js"],"names":[],"mappings":"AAAA,IAAI,OAAO,GAAe,OAAO,CAAC,SAAS,CAAC,CAAC;AAC7C,IAAI,MAAM,GAAgB,OAAO,CAAC,QAAQ,CAAC,CAAC;;AAE5C,IAAI,mBAAmB,GAAG,OAAO,CAAC,qBAAqB,CAAC;;;AAAC,AAIzD,IAAI,WAAW,GAAG,EAAC,UAAU,EAAE,oDAAoD,EAAC,CAAC;AACrF,IAAI,OAAO,GAAG,MAAM,CAAC,YAAY,CAAC,WAAW,CAAC;;;AAAC,AAI/C,IAAI,WAAW,GAAG,IAAI,mBAAmB,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;;AAEnE,IAAI,GAAG,GAAG,WAAW,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;AAC7C,GAAG,CAAC,EAAE,CAAC,YAAY,EAAE,UAAS,IAAI,EAAE;AAChC,QAAI,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC;AAC3B,QAAI,CAAC,EAAE,CAAC,MAAM,EAAE,UAAS,IAAI,EAAE;AAC3B,YAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,CAAC;KACnC,CAAC,CAAC;CACN,CAAC,CAAC;;AAEH,IAAI,GAAG,GAAG,WAAW,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;AAC7C,GAAG,CAAC,EAAE,CAAC,YAAY,EAAE,UAAS,IAAI,EAAE;AAChC,QAAI,CAAC,KAAK,CAAC,qBAAqB,CAAC,CAAC;AAClC,QAAI,CAAC,EAAE,CAAC,MAAM,EAAE,UAAS,IAAI,EAAE;AAC3B,YAAI,CAAC,KAAK,CAAC,kBAAkB,GAAG,IAAI,CAAC,CAAC;KACzC,CAAC,CAAC;CACN,CAAC,CAAC;;AAEH,IAAI,IAAI,GAAG,WAAW,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;AAC/C,IAAI,CAAC,EAAE,CAAC,YAAY,EAAE,UAAS,IAAI,EAAE;AACjC,QAAI,CAAC,KAAK,CAAC,oBAAoB,CAAC;;AAAC,AAEjC,QAAI,CAAC,GAAG,EAAE,CAAC;CACd,CAAC;;;AAAC,AAIH,IAAI,GAAG,GAAG,OAAO,CAAC,YAAY,EAAE,CAAC;AACjC,OAAO,CAAC,eAAe,CAAC,GAAG,EAAE,EAAC,MAAM,EAAC,YAAY,EAAC,CAAC,CAAC;;AAEpD,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAE,CAAC;AAC/C,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,SAAS,CAAC,CAAC;;AAE5B,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,UAAU,GAAG,EAAE,GAAG,EAAE;AAC7B,OAAG,CAAC,QAAQ,CAAC,SAAS,GAAG,aAAa,CAAC,CAAC;CAC3C,CAAC,CAAC;;AAEH,GAAG,CAAC,GAAG,CAAC,eAAe,EAAE,UAAU,GAAG,EAAE,GAAG,EAAE;AACzC,OAAG,CAAC,QAAQ,CAAC,SAAS,GAAG,eAAe,CAAC,CAAC;CAC7C,CAAC,CAAC","file":"server-compiled.js","sourcesContent":["var express             = require('express');\nvar sockjs              = require('sockjs');\n\nvar websocket_multiplex = require('websocket-multiplex');\n\n\n// 1. Setup SockJS server\nvar sockjs_opts = {sockjs_url: \"http://cdn.jsdelivr.net/sockjs/0.3.4/sockjs.min.js\"};\nvar service = sockjs.createServer(sockjs_opts);\n\n\n// 2. Setup multiplexing\nvar multiplexer = new websocket_multiplex.MultiplexServer(service);\n\nvar ann = multiplexer.registerChannel('ann');\nann.on('connection', function(conn) {\n    conn.write('Ann says hi!');\n    conn.on('data', function(data) {\n        conn.write('Ann nods: ' + data);\n    });\n});\n\nvar bob = multiplexer.registerChannel('bob');\nbob.on('connection', function(conn) {\n    conn.write('Bob doesn\\'t agree.');\n    conn.on('data', function(data) {\n        conn.write('Bob says no to: ' + data);\n    });\n});\n\nvar carl = multiplexer.registerChannel('carl');\ncarl.on('connection', function(conn) {\n    conn.write('Carl says goodbye!');\n    // Explicitly cancel connection\n    conn.end();\n});\n\n\n// 3. Express server\nvar app = express.createServer();\nservice.installHandlers(app, {prefix:'/multiplex'});\n\nconsole.log(' [*] Listening on 0.0.0.0:9999' );\napp.listen(9999, '0.0.0.0');\n\napp.get('/', function (req, res) {\n    res.sendfile(__dirname + '/index.html');\n});\n\napp.get('/multiplex.js', function (req, res) {\n    res.sendfile(__dirname + '/multiplex.js');\n});\n"]}