{"version":3,"sources":["server.js"],"names":[],"mappings":"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","file":"server-compiled.js","sourcesContent":["var WebSocket = require('../lib/faye/websocket'),\n    deflate   = require('permessage-deflate'),\n    fs        = require('fs'),\n    http      = require('http'),\n    https     = require('https');\n\nvar port    = process.argv[2] || 7000,\n    secure  = process.argv[3] === 'tls',\n    options = {extensions: [deflate], ping: 5};\n\nvar upgradeHandler = function(request, socket, head) {\n  var ws = new WebSocket(request, socket, head, ['irc', 'xmpp'], options);\n  console.log('[open]', ws.url, ws.version, ws.protocol, request.headers);\n\n  ws.pipe(ws);\n\n  ws.onclose = function(event) {\n    console.log('[close]', event.code, event.reason);\n    ws = null;\n  };\n};\n\nvar requestHandler = function(request, response) {\n  if (!WebSocket.EventSource.isEventSource(request))\n    return staticHandler(request, response);\n\n  var es   = new WebSocket.EventSource(request, response),\n      time = parseInt(es.lastEventId, 10) || 0;\n\n  console.log('[open]', es.url, es.lastEventId);\n\n  var loop = setInterval(function() {\n    time += 1;\n    es.send('Time: ' + time);\n    setTimeout(function() {\n      if (es) es.send('Update!!', {event: 'update', id: time});\n    }, 1000);\n  }, 2000);\n\n  fs.createReadStream(__dirname + '/haproxy.conf').pipe(es, {end: false});\n\n  es.onclose = function() {\n    clearInterval(loop);\n    console.log('[close]', es.url);\n    es = null;\n  };\n};\n\nvar staticHandler = function(request, response) {\n  var path = request.url;\n\n  fs.readFile(__dirname + path, function(err, content) {\n    var status = err ? 404 : 200;\n    response.writeHead(status, {'Content-Type': 'text/html'});\n    response.write(content || 'Not found');\n    response.end();\n  });\n};\n\nvar server = secure\n           ? https.createServer({\n               key:  fs.readFileSync(__dirname + '/../spec/server.key'),\n               cert: fs.readFileSync(__dirname + '/../spec/server.crt')\n             })\n           : http.createServer();\n\nserver.on('request', requestHandler);\nserver.on('upgrade', upgradeHandler);\nserver.listen(port);\n"]}