{"version":3,"sources":["stream_reader.js"],"names":[],"mappings":"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","file":"stream_reader-compiled.js","sourcesContent":["'use strict';\n\nvar StreamReader = function() {\n  this._queue     = [];\n  this._queueSize = 0;\n  this._offset    = 0;\n};\n\nStreamReader.prototype.put = function(buffer) {\n  if (!buffer || buffer.length === 0) return;\n  if (!buffer.copy) buffer = new Buffer(buffer);\n  this._queue.push(buffer);\n  this._queueSize += buffer.length;\n};\n\nStreamReader.prototype.read = function(length) {\n  if (length > this._queueSize) return null;\n  if (length === 0) return new Buffer(0);\n\n  this._queueSize -= length;\n\n  var queue  = this._queue,\n      remain = length,\n      first  = queue[0],\n      buffers, buffer;\n\n  if (first.length >= length) {\n    if (first.length === length) {\n      return queue.shift();\n    } else {\n      buffer = first.slice(0, length);\n      queue[0] = first.slice(length);\n      return buffer;\n    }\n  }\n\n  for (var i = 0, n = queue.length; i < n; i++) {\n    if (remain < queue[i].length) break;\n    remain -= queue[i].length;\n  }\n  buffers = queue.splice(0, i);\n\n  if (remain > 0 && queue.length > 0) {\n    buffers.push(queue[0].slice(0, remain));\n    queue[0] = queue[0].slice(remain);\n  }\n  return this._concat(buffers, length);\n};\n\nStreamReader.prototype.eachByte = function(callback, context) {\n  var buffer, n, index;\n\n  while (this._queue.length > 0) {\n    buffer = this._queue[0];\n    n = buffer.length;\n\n    while (this._offset < n) {\n      index = this._offset;\n      this._offset += 1;\n      callback.call(context, buffer[index]);\n    }\n    this._offset = 0;\n    this._queue.shift();\n  }\n};\n\nStreamReader.prototype._concat = function(buffers, length) {\n  if (Buffer.concat) return Buffer.concat(buffers, length);\n\n  var buffer = new Buffer(length),\n      offset = 0;\n\n  for (var i = 0, n = buffers.length; i < n; i++) {\n    buffers[i].copy(buffer, offset);\n    offset += buffers[i].length;\n  }\n  return buffer;\n};\n\nmodule.exports = StreamReader;\n"]}