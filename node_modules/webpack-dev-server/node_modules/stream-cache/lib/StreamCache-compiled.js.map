{"version":3,"sources":["StreamCache.js"],"names":[],"mappings":"AAAA,IAAI,IAAI,GAAK,OAAO,CAAC,MAAM,CAAC,CAAC;AAC7B,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC;;AAEtC,MAAM,CAAC,OAAO,GAAG,WAAW,CAAC;AAC7B,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;AACnC,SAAS,WAAW,GAAG;AACrB,QAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAElB,MAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AACrB,MAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;;AAErB,MAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;AACnB,MAAI,CAAC,MAAM,GAAK,EAAE,CAAC;AACnB,MAAI,CAAC,MAAM,GAAK,KAAK,CAAC;CACvB;;AAED,WAAW,CAAC,SAAS,CAAC,KAAK,GAAG,UAAS,MAAM,EAAE;AAC7C,MAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;;AAE3B,MAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAS,IAAI,EAAE;AACjC,QAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;GACpB,CAAC,CAAC;CACJ,CAAC;;AAEF,WAAW,CAAC,SAAS,CAAC,IAAI,GAAG,UAAS,IAAI,EAAE,OAAO,EAAE;AACnD,MAAI,OAAO,EAAE;AACX,UAAM,KAAK,CAAC,kDAAkD,CAAC,CAAC;GACjE;;AAED,MAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,UAAS,MAAM,EAAE;AACrC,QAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;GACpB,CAAC,CAAC;;AAEH,MAAI,IAAI,CAAC,MAAM,EAAE;AACf,QAAI,CAAC,GAAG,EAAE,CAAC;AACX,WAAO,IAAI,CAAC;GACb;;AAED,MAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;;AAEvB,SAAO,IAAI,CAAC;CACb,CAAC;;AAEF,WAAW,CAAC,SAAS,CAAC,SAAS,GAAG,YAAW;AAC3C,SAAO,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAS,WAAW,EAAE,MAAM,EAAE;AACxD,WAAO,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC;GACpC,EAAE,CAAC,CAAC,CAAC;CACP,CAAC;;AAEF,WAAW,CAAC,SAAS,CAAC,GAAG,GAAG,YAAW;AACrC,MAAI,CAAC,MAAM,CAAC,OAAO,CAAC,UAAS,IAAI,EAAE;AACjC,QAAI,CAAC,GAAG,EAAE,CAAC;GACZ,CAAC,CAAC;;AAEH,MAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACnB,MAAI,CAAC,MAAM,GAAG,EAAE,CAAC;CAClB,CAAC","file":"StreamCache-compiled.js","sourcesContent":["var Util   = require('util');\nvar Stream = require('stream').Stream;\n\nmodule.exports = StreamCache;\nUtil.inherits(StreamCache, Stream);\nfunction StreamCache() {\n  Stream.call(this);\n\n  this.writable = true;\n  this.readable = true;\n\n  this._buffers = [];\n  this._dests   = [];\n  this._ended   = false;\n}\n\nStreamCache.prototype.write = function(buffer) {\n  this._buffers.push(buffer);\n\n  this._dests.forEach(function(dest) {\n    dest.write(buffer);\n  });\n};\n\nStreamCache.prototype.pipe = function(dest, options) {\n  if (options) {\n    throw Error('StreamCache#pipe: options are not supported yet.');\n  }\n\n  this._buffers.forEach(function(buffer) {\n    dest.write(buffer);\n  });\n\n  if (this._ended) {\n    dest.end();\n    return dest;\n  }\n\n  this._dests.push(dest);\n\n  return dest;\n};\n\nStreamCache.prototype.getLength = function() {\n  return this._buffers.reduce(function(totalLength, buffer) {\n    return totalLength + buffer.length;\n  }, 0);\n};\n\nStreamCache.prototype.end = function() {\n  this._dests.forEach(function(dest) {\n    dest.end();\n  });\n\n  this._ended = true;\n  this._dests = [];\n};\n"]}