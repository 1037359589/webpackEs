{"version":3,"sources":["normalize.js"],"names":[],"mappings":"AAAA,IAAI,oBAAoB,GAAG,MAAM,CAAC;AAClC,IAAI,oBAAoB,GAAG,MAAM,CAAC;AAClC,IAAI,+BAA+B,GAAG,WAAW,CAAC;AAClD,IAAI,4BAA4B,GAAG,OAAO,CAAC;AAC3C,IAAI,8BAA8B,GAAG,oBAAoB,CAAC;AAC1D,IAAI,4BAA4B,GAAG,8BAA8B,CAAC;AAClE,IAAI,4BAA4B,GAAG,mBAAmB,CAAC;AACvD,IAAI,+BAA+B,GAAG,YAAY,CAAC;AACnD,IAAI,6BAA6B,GAAG,SAAS,CAAC;AAC9C,IAAI,6BAA6B,GAAG,QAAQ,CAAC;AAC7C,IAAI,8BAA8B,GAAG,wBAAwB,CAAC;AAC9D,IAAI,4BAA4B,GAAG,mBAAmB,CAAC;AACvD,IAAI,4BAA4B,GAAG,mBAAmB,CAAC;AACvD,IAAI,4BAA4B,GAAG,WAAW;;;;AAAC,AAI/C,MAAM,CAAC,OAAO,GAAG,SAAS,SAAS,CAAC,IAAI,EAAE;AACzC,QAAM,+BAA+B,CAAC,IAAI,CAAC,IAAI,CAAC,EAC/C,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,+BAA+B,EAAE,IAAI,CAAC,CAAC;AAC5D,KAAI,GAAG,IAAI,CAAC,OAAO,CAAC,4BAA4B,EAAE,EAAE,CAAC,CAAC;AACtD,QAAM,8BAA8B,CAAC,IAAI,CAAC,IAAI,CAAC,EAC9C,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,8BAA8B,EAAE,IAAI,CAAC,CAAC;AAC3D,KAAI,GAAG,IAAI,CAAC,OAAO,CAAC,4BAA4B,EAAE,IAAI,CAAC,CAAC;AACxD,KAAI,GAAG,IAAI,CAAC,OAAO,CAAC,4BAA4B,EAAE,EAAE,CAAC,CAAC;;AAEtD,QAAM,+BAA+B,CAAC,IAAI,CAAC,IAAI,CAAC,EAC/C,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,+BAA+B,EAAE,GAAG,CAAC,CAAC;AAC3D,KAAI,GAAG,IAAI,CAAC,OAAO,CAAC,6BAA6B,EAAE,GAAG,CAAC,CAAC;AACxD,KAAI,GAAG,IAAI,CAAC,OAAO,CAAC,6BAA6B,EAAE,EAAE,CAAC,CAAC;AACvD,QAAM,8BAA8B,CAAC,IAAI,CAAC,IAAI,CAAC,EAC9C,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,8BAA8B,EAAE,GAAG,CAAC,CAAC;AAC1D,KAAI,GAAG,IAAI,CAAC,OAAO,CAAC,4BAA4B,EAAE,GAAG,CAAC,CAAC;AACvD,KAAI,GAAG,IAAI,CAAC,OAAO,CAAC,4BAA4B,EAAE,EAAE,CAAC,CAAC;AACtD,KAAI,GAAG,IAAI,CAAC,OAAO,CAAC,4BAA4B,EAAE,GAAG,CAAC,CAAC;;AAEvD,QAAO,IAAI,CAAC,OAAO,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC,OAAO,CAAC,oBAAoB,EAAE,GAAG,CAAC,CAAC;CACnF,CAAC","file":"normalize-compiled.js","sourcesContent":["var doubleSlashWinRegExp = /\\\\+/g;\r\nvar doubleSlashNixRegExp = /\\/+/g;\r\nvar currentDirectoryWinMiddleRegExp = /\\\\(\\.\\\\)+/;\r\nvar currentDirectoryWinEndRegExp = /\\\\\\.$/;\r\nvar parentDirectoryWinMiddleRegExp = /\\\\+[^\\\\]+\\\\+\\.\\.\\\\/;\r\nvar parentDirectoryWinEndRegExp1 = /([A-Z]:\\\\)\\\\*[^\\\\]+\\\\+\\.\\.$/i;\r\nvar parentDirectoryWinEndRegExp2 = /\\\\+[^\\\\]+\\\\+\\.\\.$/;\r\nvar currentDirectoryNixMiddleRegExp = /\\/+(\\.\\/)+/;\r\nvar currentDirectoryNixEndRegExp1 = /^\\/+\\.$/;\r\nvar currentDirectoryNixEndRegExp2 = /\\/+\\.$/;\r\nvar parentDirectoryNixMiddleRegExp = /(^|\\/[^\\/]+)\\/+\\.\\.\\/+/;\r\nvar parentDirectoryNixEndRegExp1 = /^\\/[^\\/]+\\/+\\.\\.$/;\r\nvar parentDirectoryNixEndRegExp2 = /\\/+[^\\/]+\\/+\\.\\.$/;\r\nvar parentDirectoryNixEndRegExp3 = /^\\/+\\.\\.$/;\r\n\r\n// RegExp magic :)\r\n\r\nmodule.exports = function normalize(path) {\r\n\twhile(currentDirectoryWinMiddleRegExp.test(path))\r\n\t\tpath = path.replace(currentDirectoryWinMiddleRegExp, \"\\\\\");\r\n\tpath = path.replace(currentDirectoryWinEndRegExp, \"\");\r\n\twhile(parentDirectoryWinMiddleRegExp.test(path))\r\n\t\tpath = path.replace(parentDirectoryWinMiddleRegExp, \"\\\\\");\r\n\tpath = path.replace(parentDirectoryWinEndRegExp1, \"$1\");\r\n\tpath = path.replace(parentDirectoryWinEndRegExp2, \"\");\r\n\r\n\twhile(currentDirectoryNixMiddleRegExp.test(path))\r\n\t\tpath = path.replace(currentDirectoryNixMiddleRegExp, \"/\");\r\n\tpath = path.replace(currentDirectoryNixEndRegExp1, \"/\");\r\n\tpath = path.replace(currentDirectoryNixEndRegExp2, \"\");\r\n\twhile(parentDirectoryNixMiddleRegExp.test(path))\r\n\t\tpath = path.replace(parentDirectoryNixMiddleRegExp, \"/\");\r\n\tpath = path.replace(parentDirectoryNixEndRegExp1, \"/\");\r\n\tpath = path.replace(parentDirectoryNixEndRegExp2, \"\");\r\n\tpath = path.replace(parentDirectoryNixEndRegExp3, \"/\");\r\n\r\n\treturn path.replace(doubleSlashWinRegExp, \"\\\\\").replace(doubleSlashNixRegExp, \"/\");\r\n};"]}