{"version":3,"sources":["build.js"],"names":[],"mappings":";;AAEA,IAAI,OAAO,GAAK,OAAO,CAAC,SAAS,CAAC;IAC9B,EAAE,GAAU,OAAO,CAAC,IAAI,CAAC;IAEzB,SAAS,GAAG,yDAAyD;IACrE,MAAM,GAAM,2DAA2D,CAAA;;AAG3E,OAAO,CAAC,SAAS,EAAE,UAAU,GAAG,EAAE,QAAQ,EAAE;AAC1C,MAAI,GAAG,EACL,MAAM,GAAG,CAAA;;AAEX,MAAI,IAAI,EAAE,GAAG,CAAA;;AAEb,MAAI,GAAG,QAAQ,CAAC,IAAI,CACjB,KAAK,CAAC,IAAI,CAAC,CACX,GAAG,CAAC,UAAU,IAAI,EAAE;AAAE,WAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAA;GAAE,CAAC,CAClD,MAAM,CAAC,UAAU,KAAK,EAAE;AAAE,WAAO,KAAK,CAAA;GAAE,CAAC,CACzC,GAAG,CAAC,UAAU,KAAK,EAAE;AAAE,WAAO;AAC3B,WAAK,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AAC7B,UAAI,EAAE,KAAK,CAAC,CAAC,CAAC;AACd,iBAAW,EAAE,KAAK,CAAC,CAAC,CAAC;KACxB,CAAA;GAAC,CAAC,CAAA;;AAEL,KAAG,GAAG,iCAAiC,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC,EAAE,CAAC,CAAC,GAAG,MAAM,CAAA;;AAE7E,KAAG,IAAI,kCAAkC,GACrC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;AACvB,WAAO,IAAI,GAAG,CAAC,CAAC,KAAK,GAAG,UAAU,GAAG,CAAC,GAAG,GAAG,CAAA;GAC7C,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GACjB,SAAS,CAAA;;AAEb,KAAG,IAAI,iCAAiC,GACpC,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;AACvB,WAAO,IAAI,GAAG,CAAC,CAAC,IAAI,GAAG,UAAU,GAAG,CAAC,GAAG,GAAG,CAAA;GAC5C,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,GACjB,SAAS,CAAA;;AAEb,KAAG,IAAI,iEAAiE,CAAA;;AAExE,IAAE,CAAC,SAAS,CAAC,UAAU,EAAE,GAAG,CAAC,CAAA;CAC9B,CAAC,CAAA","file":"build-compiled.js","sourcesContent":["#!/usr/bin/env node\n\nvar request   = require('request')\n  , fs        = require('fs')\n\n  , uvheadloc = 'https://raw.github.com/joyent/libuv/master/include/uv.h'\n  , defreg    = /^\\s*XX\\(\\s*([\\-\\d]+),\\s*([A-Z]+),\\s*\"([^\"]*)\"\\s*\\)\\s*\\\\?$/\n\n\nrequest(uvheadloc, function (err, response) {\n  if (err)\n    throw err\n\n  var data, out\n\n  data = response.body\n    .split('\\n')\n    .map(function (line) { return line.match(defreg) })\n    .filter(function (match) { return match })\n    .map(function (match) { return {\n        errno: parseInt(match[1], 10)\n      , code: match[2]\n      , description: match[3]\n    }})\n\n  out = 'var all = module.exports.all = ' + JSON.stringify(data, 0, 1) + '\\n\\n'\n\n  out += '\\nmodule.exports.errno = {\\n    '\n    + data.map(function (e, i) {\n        return '\\'' + e.errno + '\\': all[' + i + ']'\n      }).join('\\n  , ')\n    + '\\n}\\n\\n'\n\n  out += '\\nmodule.exports.code = {\\n    '\n    + data.map(function (e, i) {\n        return '\\'' + e.code + '\\': all[' + i + ']'\n      }).join('\\n  , ')\n    + '\\n}\\n\\n'\n\n  out += '\\nmodule.exports.custom = require(\"./custom\")(module.exports)\\n'\n\n  fs.writeFile('errno.js', out)\n})"]}